{"ast":null,"code":"/*\r\njQWidgets v12.0.0 (2021-Feb)\r\nCopyright (c) 2011-2021 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (a) {\n  a.jqx.jqxWidget(\"jqxTree\", \"\", {});\n  a.extend(a.jqx._jqxTree.prototype, {\n    defineInstance: function () {\n      var b = {\n        items: new Array(),\n        width: null,\n        height: null,\n        easing: \"easeInOutCirc\",\n        animationShowDuration: \"fast\",\n        animationHideDuration: \"fast\",\n        treeElements: new Array(),\n        disabled: false,\n        itemsMember: \"\",\n        displayMember: \"\",\n        valueMember: \"\",\n        enableHover: true,\n        keyboardNavigation: true,\n        enableKeyboardNavigation: true,\n        toggleMode: \"dblclick\",\n        source: null,\n        checkboxes: false,\n        checkSize: 16,\n        toggleIndicatorSize: 18,\n        hasThreeStates: false,\n        selectedItem: null,\n        touchMode: \"auto\",\n        allowDrag: true,\n        allowDrop: true,\n        searchMode: \"startswithignorecase\",\n        incrementalSearch: true,\n        incrementalSearchDelay: 700,\n        animationHideDelay: 0,\n        submitCheckedItems: false,\n        dragStart: null,\n        dragEnd: null,\n        rtl: false,\n        dropAction: \"default\",\n        events: [\"expand\", \"collapse\", \"select\", \"initialized\", \"added\", \"removed\", \"checkChange\", \"dragEnd\", \"dragStart\", \"itemClick\"],\n        aria: {\n          \"aria-activedescendant\": {\n            name: \"getActiveDescendant\",\n            type: \"string\"\n          },\n          \"aria-disabled\": {\n            name: \"disabled\",\n            type: \"boolean\"\n          }\n        }\n      };\n\n      if (this === a.jqx._jqxTree.prototype) {\n        return b;\n      }\n\n      a.extend(true, this, b);\n      return b;\n    },\n    createInstance: function (c) {\n      var b = this;\n      this.host.attr(\"role\", \"tree\");\n      this.host.attr(\"data-role\", \"treeview\");\n      this.enableKeyboardNavigation = this.keyboardNavigation;\n\n      this.propertyChangeMap.disabled = function (f, h, g, i) {\n        if (b.disabled) {\n          b.host.addClass(b.toThemeProperty(\"jqx-tree-disabled\"));\n        } else {\n          b.host.removeClass(b.toThemeProperty(\"jqx-tree-disabled\"));\n        }\n\n        a.jqx.aria(b, \"aria-disabled\", i);\n      };\n\n      if (this.width != null && this.width.toString().indexOf(\"px\") != -1) {\n        this.host.width(this.width);\n      } else {\n        if (this.width != undefined && !isNaN(this.width)) {\n          this.host.width(this.width);\n        }\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"px\") != -1) {\n        this.host.height(this.height);\n      } else {\n        if (this.height != undefined && !isNaN(this.height)) {\n          this.host.height(this.height);\n        }\n      }\n\n      if (this.width != null && this.width.toString().indexOf(\"%\") != -1) {\n        this.host.width(this.width);\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"%\") != -1) {\n        this.host.height(this.height);\n      }\n\n      if (!this.host.attr(\"tabindex\")) {\n        this.host.attr(\"tabIndex\", 1);\n      }\n\n      if (this.disabled) {\n        this.host.addClass(this.toThemeProperty(\"jqx-tree-disabled\"));\n        a.jqx.aria(this, \"aria-disabled\", true);\n      }\n\n      if (this.host.jqxDragDrop) {\n        window.jqxTreeDragDrop();\n      }\n\n      this.originalInnerHTML = this.element.innerHTML;\n      this.createdTree = false;\n\n      if (this.element.innerHTML.indexOf(\"UL\")) {\n        var e = this.host.find(\"ul:first\");\n\n        if (e.length > 0) {\n          this.createTree(e[0]);\n          this.createdTree = true;\n        }\n      }\n\n      if (this.source != null) {\n        var d = this.loadItems(this.source);\n        this.element.innerHTML = d;\n        var e = this.host.find(\"ul:first\");\n\n        if (e.length > 0) {\n          this.createTree(e[0]);\n          this.createdTree = true;\n        }\n      }\n\n      this._itemslength = this.items.length;\n\n      if (!this.createdTree) {\n        if (this.host.find(\"ul\").length == 0) {\n          this.host.append(a(\"<ul></ul>\"));\n          var e = this.host.find(\"ul:first\");\n\n          if (e.length > 0) {\n            this.createTree(e[0]);\n            this.createdTree = true;\n          }\n\n          this.createdTree = true;\n        }\n      }\n\n      if (this.createdTree == true) {\n        this._render();\n\n        this._handleKeys();\n      }\n\n      this._updateCheckLayout();\n    },\n    checkItems: function (f, h) {\n      var e = this;\n\n      if (f != null) {\n        var d = 0;\n        var g = false;\n        var b = 0;\n        var i = a(f.element).find(\"li\");\n        b = i.length;\n        a.each(i, function (j) {\n          var k = e.itemMapping[\"id\" + this.id].item;\n\n          if (k.checked != false) {\n            if (k.checked == null) {\n              g = true;\n            }\n\n            d++;\n          }\n        });\n\n        if (f != h) {\n          if (d == b) {\n            this.checkItem(f.element, true, \"tree\");\n          } else {\n            if (d > 0) {\n              this.checkItem(f.element, null, \"tree\");\n            } else {\n              this.checkItem(f.element, false, \"tree\");\n            }\n          }\n        } else {\n          var c = h.checked;\n          var i = a(h.element).find(\"li\");\n          a.each(i, function () {\n            var j = e.itemMapping[\"id\" + this.id].item;\n            e.checkItem(this, c, \"tree\");\n          });\n        }\n\n        this.checkItems(this._parentItem(f), h);\n      } else {\n        var c = h.checked;\n        var i = a(h.element).find(\"li\");\n        a.each(i, function () {\n          var j = e.itemMapping[\"id\" + this.id].item;\n          e.checkItem(this, c, \"tree\");\n        });\n      }\n    },\n    _getMatches: function (e, f) {\n      if (e == undefined || e.length == 0) {\n        return -1;\n      }\n\n      var c = this.items;\n      var b = new Array();\n\n      for (var d = 0; d < c.length; d++) {\n        if (this._isVisible(c[d]) && !c[d].disabled) {\n          b.push(c[d]);\n        }\n      }\n\n      c = b;\n\n      if (f != undefined) {\n        c = c.slice(f);\n      }\n\n      var g = new Array();\n      a.each(c, function (j) {\n        var k = this.label;\n\n        if (!k) {\n          k = \"\";\n        }\n\n        var h = a.jqx.string.startsWithIgnoreCase(k.toString(), e);\n\n        if (h) {\n          g.push({\n            id: this.id,\n            element: this.element\n          });\n        }\n      });\n      return g;\n    },\n    _handleKeys: function () {\n      var b = this;\n      this.addHandler(this.host, \"keydown\", function (d) {\n        var s = d.keyCode;\n\n        if (b.keyboardNavigation || b.enableKeyboardNavigation) {\n          if (b.selectedItem != null) {\n            var l = b.selectedItem.element;\n\n            if (b.incrementalSearch && !(s >= 33 && s <= 40)) {\n              var t = -1;\n\n              if (!b._searchString) {\n                b._searchString = \"\";\n              }\n\n              if ((s == 8 || s == 46) && b._searchString.length >= 1) {\n                b._searchString = b._searchString.substr(0, b._searchString.length - 1);\n              }\n\n              var h = String.fromCharCode(s);\n              var o = !isNaN(parseInt(h));\n              var n = false;\n\n              if (s >= 65 && s <= 97 || o || s == 8 || s == 32 || s == 46) {\n                if (!d.shiftKey) {\n                  h = h.toLocaleLowerCase();\n                }\n\n                if (s != 8 && s != 32 && s != 46) {\n                  if (!(b._searchString.length > 0 && b._searchString.substr(0, 1) == h)) {\n                    b._searchString += h;\n                  }\n                }\n\n                if (s == 32) {\n                  b._searchString += \" \";\n                }\n\n                b._searchTime = new Date();\n                var r = b.selectedItem;\n\n                if (r) {\n                  var g = r.id;\n                  var m = -1;\n\n                  for (var k = 0; k < b.items.length; k++) {\n                    if (b.items[k].id == g) {\n                      m = k + 1;\n                      break;\n                    }\n                  }\n\n                  var f = b._getMatches(b._searchString, m);\n\n                  if (f.length == 0 || f.length > 0 && f[0].id == g) {\n                    var f = b._getMatches(b._searchString);\n                  }\n                } else {\n                  var f = b._getMatches(b._searchString);\n                }\n\n                if (f.length > 0) {\n                  var r = b.selectedItem;\n\n                  if (b.selectedItem && b.selectedItem.id != f[0].id) {\n                    b.clearSelection();\n                    b.selectItem(f[0].element, \"keyboard\");\n                  }\n\n                  b._lastSearchString = b._searchString;\n                }\n              }\n\n              if (b._searchTimer != undefined) {\n                clearTimeout(b._searchTimer);\n              }\n\n              if (s == 27 || s == 13) {\n                b._searchString = \"\";\n                b._lastSearchString = \"\";\n              }\n\n              b._searchTimer = setTimeout(function () {\n                b._searchString = \"\";\n                b._lastSearchString = \"\";\n              }, 500);\n\n              if (t >= 0) {\n                return;\n              }\n\n              if (n) {\n                return false;\n              }\n            }\n\n            switch (s) {\n              case 32:\n                if (b.checkboxes) {\n                  b.fromKey = true;\n                  var q = a(b.selectedItem.checkBoxElement).jqxCheckBox(\"checked\");\n                  b.checkItem(b.selectedItem.element, !q, \"tree\");\n\n                  if (b.hasThreeStates) {\n                    b.checkItems(b.selectedItem, b.selectedItem);\n                  }\n\n                  return false;\n                }\n\n                return true;\n\n              case 33:\n                var j = b._getItemsOnPage();\n\n                var p = b.selectedItem;\n\n                for (var k = 0; k < j; k++) {\n                  p = b._prevVisibleItem(p);\n                }\n\n                if (p != null) {\n                  b.selectItem(p.element, \"keyboard\");\n                  b.ensureVisible(p.element);\n                } else {\n                  b.selectItem(b._firstItem().element, \"keyboard\");\n                  b.ensureVisible(b._firstItem().element);\n                }\n\n                return false;\n\n              case 34:\n                var j = b._getItemsOnPage();\n\n                var c = b.selectedItem;\n\n                for (var k = 0; k < j; k++) {\n                  c = b._nextVisibleItem(c);\n                }\n\n                if (c != null) {\n                  b.selectItem(c.element, \"keyboard\");\n                  b.ensureVisible(c.element);\n                } else {\n                  b.selectItem(b._lastItem().element, \"keyboard\");\n                  b.ensureVisible(b._lastItem().element);\n                }\n\n                return false;\n\n              case 37:\n              case 39:\n                if (s == 37 && !b.rtl || s == 39 && b.rtl) {\n                  if (b.selectedItem.hasItems && b.selectedItem.isExpanded) {\n                    b.collapseItem(l);\n                  } else {\n                    var e = b._parentItem(b.selectedItem);\n\n                    if (e != null) {\n                      b.selectItem(e.element, \"keyboard\");\n                      b.ensureVisible(e.element);\n                    }\n                  }\n                }\n\n                if (s == 39 && !b.rtl || s == 37 && b.rtl) {\n                  if (b.selectedItem.hasItems) {\n                    if (!b.selectedItem.isExpanded) {\n                      b.expandItem(l);\n                    } else {\n                      var c = b._nextVisibleItem(b.selectedItem);\n\n                      if (c != null) {\n                        b.selectItem(c.element, \"keyboard\");\n                        b.ensureVisible(c.element);\n                      }\n                    }\n                  }\n                }\n\n                return false;\n\n              case 13:\n                if (b.selectedItem.hasItems) {\n                  if (b.selectedItem.isExpanded) {\n                    b.collapseItem(l);\n                  } else {\n                    b.expandItem(l);\n                  }\n                }\n\n                return false;\n\n              case 36:\n                b.selectItem(b._firstItem().element, \"keyboard\");\n                b.ensureVisible(b._firstItem().element);\n                return false;\n\n              case 35:\n                b.selectItem(b._lastItem().element, \"keyboard\");\n                b.ensureVisible(b._lastItem().element);\n                return false;\n\n              case 38:\n                var p = b._prevVisibleItem(b.selectedItem);\n\n                if (p != null) {\n                  b.selectItem(p.element, \"keyboard\");\n                  b.ensureVisible(p.element);\n                }\n\n                return false;\n\n              case 40:\n                var c = b._nextVisibleItem(b.selectedItem);\n\n                if (c != null) {\n                  b.selectItem(c.element, \"keyboard\");\n                  b.ensureVisible(c.element);\n                }\n\n                return false;\n            }\n          }\n        }\n      });\n    },\n    _firstItem: function () {\n      var e = null;\n      var d = this;\n      var g = this.host.find(\"ul:first\");\n      var f = a(g).find(\"li\");\n\n      for (var c = 0; c <= f.length - 1; c++) {\n        var b = f[c];\n        e = this.itemMapping[\"id\" + b.id].item;\n\n        if (d._isVisible(e)) {\n          return e;\n        }\n      }\n\n      return null;\n    },\n    _lastItem: function () {\n      var e = null;\n      var d = this;\n      var g = this.host.find(\"ul:first\");\n      var f = a(g).find(\"li\");\n\n      for (var c = f.length - 1; c >= 0; c--) {\n        var b = f[c];\n        e = this.itemMapping[\"id\" + b.id].item;\n\n        if (d._isVisible(e)) {\n          return e;\n        }\n      }\n\n      return null;\n    },\n    _parentItem: function (d) {\n      if (d == null || d == undefined) {\n        return null;\n      }\n\n      var c = d.parentElement;\n\n      if (!c) {\n        return null;\n      }\n\n      var b = null;\n      a.each(this.items, function () {\n        if (this.element == c) {\n          b = this;\n          return false;\n        }\n      });\n      return b;\n    },\n    _nextVisibleItem: function (c) {\n      if (c == null || c == undefined) {\n        return null;\n      }\n\n      var b = c;\n\n      while (b != null) {\n        b = b.nextItem;\n\n        if (this._isVisible(b) && !b.disabled) {\n          return b;\n        }\n      }\n\n      return null;\n    },\n    _prevVisibleItem: function (c) {\n      if (c == null || c == undefined) {\n        return null;\n      }\n\n      var b = c;\n\n      while (b != null) {\n        b = b.prevItem;\n\n        if (this._isVisible(b) && !b.disabled) {\n          return b;\n        }\n      }\n\n      return null;\n    },\n    _isVisible: function (c) {\n      if (c == null || c == undefined) {\n        return false;\n      }\n\n      if (!this._isElementVisible(c.element)) {\n        return false;\n      }\n\n      var b = this._parentItem(c);\n\n      if (b == null) {\n        return true;\n      }\n\n      if (b != null) {\n        if (!this._isElementVisible(b.element)) {\n          return false;\n        }\n\n        if (b.isExpanded) {\n          while (b != null) {\n            b = this._parentItem(b);\n\n            if (b != null && !this._isElementVisible(b.element)) {\n              return false;\n            }\n\n            if (b != null && !b.isExpanded) {\n              return false;\n            }\n          }\n        } else {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    _getItemsOnPage: function () {\n      var d = 0;\n      var c = this.panel.jqxPanel(\"getVScrollPosition\");\n      var b = parseInt(this.host.height());\n      var f = 0;\n\n      var e = this._firstItem();\n\n      if (parseInt(a(e.element).height()) > 0) {\n        while (f <= b) {\n          f += parseInt(a(e.element).outerHeight());\n          d++;\n        }\n      }\n\n      return d;\n    },\n    _isElementVisible: function (b) {\n      if (b == null) {\n        return false;\n      }\n\n      if (a(b).css(\"display\") != \"none\" && a(b).css(\"visibility\") != \"hidden\") {\n        return true;\n      }\n\n      return false;\n    },\n    refresh: function (c) {\n      if (this.width != null && this.width.toString().indexOf(\"px\") != -1) {\n        this.host.width(this.width);\n      } else {\n        if (this.width != undefined && !isNaN(this.width)) {\n          this.host.width(this.width);\n        }\n      }\n\n      if (this.height != null && this.height.toString().indexOf(\"px\") != -1) {\n        this.host.height(this.height);\n      } else {\n        if (this.height != undefined && !isNaN(this.height)) {\n          this.host.height(this.height);\n        }\n      }\n\n      if (this.panel) {\n        if (this.width != null && this.width.toString().indexOf(\"%\") != -1) {\n          var b = this;\n          this.panel.jqxPanel(\"width\", \"100%\");\n          b.removeHandler(a(window), \"resize.jqxtree\" + b.element.id);\n          b.addHandler(a(window), \"resize.jqxtree\" + b.element.id, function () {\n            b._calculateWidth();\n          });\n        } else {\n          this.panel.jqxPanel(\"width\", this.host.width());\n        }\n\n        this.panel.jqxPanel(\"_arrange\");\n      }\n\n      this._calculateWidth();\n\n      if (a.jqx.isHidden(this.host)) {\n        var b = this;\n\n        if (this._hiddenTimer) {\n          clearInterval(this._hiddenTimer);\n        }\n\n        this._hiddenTimer = setInterval(function () {\n          if (!a.jqx.isHidden(b.host)) {\n            clearInterval(b._hiddenTimer);\n\n            b._calculateWidth();\n          }\n        }, 100);\n      }\n\n      if (c != true) {\n        if (this.checkboxes) {\n          this._updateCheckLayout(null);\n        }\n      }\n    },\n    resize: function (c, b) {\n      this.width = c;\n      this.height = b;\n      this.refresh();\n    },\n    loadItems: function (c) {\n      if (c == null) {\n        return;\n      }\n\n      var b = this;\n      this.items = new Array();\n      var d = \"<ul>\";\n      a.map(c, function (e) {\n        if (e == undefined) {\n          return null;\n        }\n\n        d += b._parseItem(e);\n      });\n      d += \"</ul>\";\n      return d;\n    },\n    _parseItem: function (m) {\n      var g = \"\";\n\n      if (m == undefined) {\n        return null;\n      }\n\n      var j = m.label;\n      var l = m.value;\n\n      if (!m.label && m.html) {\n        j = m.html;\n      }\n\n      if (this.displayMember != undefined && this.displayMember != \"\") {\n        j = m[this.displayMember];\n      }\n\n      if (this.valueMember != undefined && this.valueMember != \"\") {\n        l = m[this.valueMember];\n      }\n\n      if (!j) {\n        j = \"Item\";\n      }\n\n      if (typeof m === \"string\") {\n        j = m;\n      }\n\n      var h = false;\n\n      if (m.expanded != undefined && m.expanded) {\n        h = true;\n      }\n\n      var f = false;\n\n      if (m.locked != undefined && m.locked) {\n        f = true;\n      }\n\n      var d = false;\n\n      if (m.selected != undefined && m.selected) {\n        d = true;\n      }\n\n      var e = false;\n\n      if (m.disabled != undefined && m.disabled) {\n        e = true;\n      }\n\n      var k = false;\n\n      if (m.checked != undefined && m.checked) {\n        k = true;\n      }\n\n      var i = m.icon;\n      var c = m.iconsize;\n      g += \"<li\";\n\n      if (h) {\n        g += ' item-expanded=\"true\" ';\n      }\n\n      if (f) {\n        g += ' item-locked=\"true\" ';\n      }\n\n      if (e) {\n        g += ' item-disabled=\"true\" ';\n      }\n\n      if (d) {\n        g += ' item-selected=\"true\" ';\n      }\n\n      if (c) {\n        g += ' item-iconsize=\"' + m.iconsize + '\" ';\n      }\n\n      if (i != null && i != undefined) {\n        g += ' item-icon=\"' + i + '\" ';\n      }\n\n      if (m.label && !m.html) {\n        g += ' item-label=\"' + j + '\" ';\n      }\n\n      if (l != null) {\n        g += ' item-value=\"' + l + '\" ';\n      }\n\n      if (m.checked != undefined) {\n        g += ' item-checked=\"' + k + '\" ';\n      }\n\n      var b = \"\";\n\n      if (m.id != undefined) {\n        b = m.id;\n        g += ' id=\"' + b + '\" ';\n      } else {\n        b = this.createID();\n        g += ' id=\"' + b + '\" ';\n      }\n\n      g += \">\" + j;\n\n      if (m.items) {\n        g += this.loadItems(m.items);\n      } else {\n        if (this.itemsMember != undefined && this.itemsMember != \"\") {\n          if (m[this.itemsMember]) {\n            g += this.loadItems(m[this.itemsMember]);\n          }\n        }\n      }\n\n      if (!this._valueList) {\n        this._valueList = new Array();\n      }\n\n      this._valueList[b] = m.value;\n      g += \"</li>\";\n      return g;\n    },\n    ensureVisible: function (f) {\n      if (f == null || f == undefined) {\n        return;\n      }\n\n      if (this.panel) {\n        var c = this.panel.jqxPanel(\"getVScrollPosition\");\n        var g = this.panel.jqxPanel(\"getHScrollPosition\");\n        var b = parseInt(this.host.height());\n        var e = a(f).find(\".jqx-tree-item:first\");\n        var h = a(e).position().top;\n\n        if (c === 0 && h === 0) {\n          return;\n        }\n\n        var d = this.panel.jqxPanel(\"hScrollBar\").outerHeight();\n\n        if (h <= c || h >= b + c) {\n          this.panel.jqxPanel(\"scrollTo\", g, h - b + a(e).outerHeight() + d);\n        }\n      }\n    },\n    _syncItems: function (c) {\n      this._visibleItems = new Array();\n      var b = this;\n      a.each(c, function () {\n        var e = a(this);\n\n        if (e.css(\"display\") != \"none\") {\n          var d = e.outerHeight();\n\n          if (e.height() > 0) {\n            var f = parseInt(e.offset().top);\n            b._visibleItems[b._visibleItems.length] = {\n              element: this,\n              top: f,\n              height: d,\n              bottom: f + d\n            };\n          }\n        }\n      });\n    },\n    hitTest: function (h, g) {\n      var d = this;\n      var b = this;\n      var f = null;\n      var e = this.host.find(\".jqx-item\");\n\n      this._syncItems(e);\n\n      if (b._visibleItems) {\n        var c = parseInt(b.host.offset().left);\n        var i = b.host.outerWidth();\n        a.each(b._visibleItems, function (k) {\n          if (h >= c && h < c + i) {\n            if (this.top + 5 < g && g < this.top + this.height) {\n              var j = a(this.element).parents(\"li:first\");\n\n              if (j.length > 0) {\n                f = b.getItem(j[0]);\n\n                if (f != null) {\n                  f.height = this.height;\n                  f.top = this.top;\n                  return false;\n                }\n              }\n            }\n          }\n        });\n      }\n\n      return f;\n    },\n    addBefore: function (b, d, c) {\n      return this.addBeforeAfter(b, d, true, c);\n    },\n    addAfter: function (b, d, c) {\n      return this.addBeforeAfter(b, d, false, c);\n    },\n    addBeforeAfter: function (n, q, p, m) {\n      var k = this;\n      var l = new Array();\n\n      if (q && q.treeInstance != undefined) {\n        q = q.element;\n      }\n\n      if (!a.isArray(n)) {\n        l[0] = n;\n      } else {\n        l = n;\n      }\n\n      var g = \"\";\n      var o = this;\n      a.each(l, function () {\n        g += o._parseItem(this);\n      });\n      var b = a(g);\n\n      if (k.element.innerHTML.indexOf(\"UL\")) {\n        var h = k.host.find(\"ul:first\");\n      }\n\n      if (q == undefined && q == null) {\n        h.append(b);\n      } else {\n        if (p) {\n          a(q).before(b);\n        } else {\n          a(q).after(b);\n        }\n      }\n\n      var d = b;\n\n      for (var i = 0; i < d.length; i++) {\n        this._createItem(d[i]);\n\n        var c = a(d[i]).find(\"li\");\n\n        if (c.length > 0) {\n          for (var f = 0; f < c.length; f++) {\n            this._createItem(c[f]);\n          }\n        }\n      }\n\n      var e = function (j) {\n        o._refreshMapping(false);\n\n        o._updateItemsNavigation();\n\n        if (j && o.allowDrag && o._enableDragDrop) {\n          o._enableDragDrop();\n        }\n\n        if (o.selectedItem != null) {\n          a(o.selectedItem.titleElement).addClass(o.toThemeProperty(\"jqx-fill-state-pressed\"));\n          a(o.selectedItem.titleElement).addClass(o.toThemeProperty(\"jqx-tree-item-selected\"));\n        }\n      };\n\n      if (m == false) {\n        e(true);\n\n        this._raiseEvent(\"4\", {\n          items: this.getItems()\n        });\n\n        return;\n      }\n\n      e(false);\n\n      o._render();\n\n      this._raiseEvent(\"4\", {\n        items: this.getItems()\n      });\n\n      if (o.checkboxes) {\n        o._updateCheckLayout(null);\n      }\n    },\n    addTo: function (n, g, f) {\n      var b = this;\n      var i = new Array();\n\n      if (g && g.treeInstance != undefined) {\n        g = g.element;\n      }\n\n      if (!a.isArray(n)) {\n        i[0] = n;\n      } else {\n        i = n;\n      }\n\n      var m = \"\";\n      var t = this;\n      a.each(i, function () {\n        m += t._parseItem(this);\n      });\n      var c = a(m);\n\n      if (b.element.innerHTML.indexOf(\"UL\")) {\n        var q = b.host.find(\"ul:first\");\n      }\n\n      if (g == undefined && g == null) {\n        q.append(c);\n      } else {\n        g = a(g);\n        var k = g.find(\"ul:first\");\n\n        if (k.length == 0) {\n          var s = a(\"<ul></ul>\");\n          a(g).append(s);\n          k = g.find(\"ul:first\");\n          var r = b.itemMapping[\"id\" + g[0].id].item;\n          r.subtreeElement = k[0];\n          r.hasItems = true;\n          k.addClass(b.toThemeProperty(\"jqx-tree-dropdown\"));\n\n          if (t.rtl) {\n            k.addClass(b.toThemeProperty(\"jqx-tree-dropdown-rtl\"));\n          }\n\n          k.append(c);\n          var d = k.find(\"li:first\");\n          r.parentElement = d;\n        } else {\n          k.append(c);\n        }\n      }\n\n      var p = c;\n\n      for (var h = 0; h < p.length; h++) {\n        this._createItem(p[h]);\n\n        var e = a(p[h]).find(\"li\");\n\n        if (e.length > 0) {\n          for (var o = 0; o < e.length; o++) {\n            this._createItem(e[o]);\n          }\n        }\n      }\n\n      var l = function (j) {\n        t._refreshMapping(false);\n\n        t._updateItemsNavigation();\n\n        if (j && t.allowDrag && t._enableDragDrop) {\n          t._enableDragDrop();\n        }\n\n        if (t.selectedItem != null) {\n          a(t.selectedItem.titleElement).addClass(t.toThemeProperty(\"jqx-fill-state-pressed\"));\n          a(t.selectedItem.titleElement).addClass(t.toThemeProperty(\"jqx-tree-item-selected\"));\n        }\n      };\n\n      if (f == false) {\n        l(true);\n\n        this._raiseEvent(\"4\", {\n          items: this.getItems()\n        });\n\n        return;\n      }\n\n      l(false);\n\n      t._render();\n\n      if (t.checkboxes) {\n        t._updateCheckLayout(null);\n      }\n\n      this._raiseEvent(\"4\", {\n        items: this.getItems()\n      });\n    },\n    updateItem: function (e, i) {\n      var h = e.treeInstance != undefined ? e : this.getItem(e);\n\n      if (!h) {\n        var d = e;\n        e = i;\n        i = d;\n        var h = e.treeInstance != undefined ? e : this.getItem(e);\n      }\n\n      if (h) {\n        if (typeof i === \"string\") {\n          i = {\n            label: i\n          };\n        }\n\n        if (i.value) {\n          h.value = i.value;\n        }\n\n        if (i.label) {\n          h.label = i.label;\n          a.jqx.utilities.html(a(h.titleElement), i.label);\n          var b = a.jqx.browser.msie && a.jqx.browser.version < 8;\n\n          if (b) {\n            a(document.body).append(this._measureItem);\n\n            this._measureItem.html(a(h.titleElement).text());\n\n            var g = this._measureItem.width();\n\n            if (h.icon) {\n              g += 20;\n            }\n\n            if (a(a(h.titleElement).find(\"img\")).length > 0) {\n              g += 20;\n            }\n\n            a(h.titleElement).css(\"max-width\", g + \"px\");\n\n            this._measureItem.remove();\n          }\n        }\n\n        if (i.icon) {\n          if (a(h.element).children(\".itemicon\").length > 0) {\n            a(h.element).find(\".itemicon\")[0].src = i.icon;\n          } else {\n            var c = i.iconsize;\n\n            if (!c) {\n              c = 16;\n            }\n\n            var f = a('<img width=\"' + c + '\" height=\"' + c + '\" style=\"float: left;\" class=\"itemicon\" src=\"' + i.icon + '\"/>');\n            a(h.titleElement).prepend(f);\n            f.css(\"margin-right\", \"6px\");\n\n            if (this.rtl) {\n              f.css(\"margin-right\", \"0px\");\n              f.css(\"margin-left\", \"6px\");\n              f.css(\"float\", \"right\");\n            }\n          }\n        }\n\n        if (i.expanded) {\n          this.expandItem(h);\n        }\n\n        if (i.disabled) {\n          this.disableItem(h);\n        }\n\n        if (i.selected) {\n          this.selectItem(h);\n        }\n\n        return true;\n      }\n\n      return false;\n    },\n    removeItem: function (b, d) {\n      if (b == undefined || b == null) {\n        return;\n      }\n\n      if (b.treeInstance != undefined) {\n        b = b.element;\n      }\n\n      var e = this;\n      var h = b.id;\n      var c = -1;\n      var f = this.getItem(b);\n\n      if (f) {\n        c = this.items.indexOf(f);\n\n        if (c != -1) {\n          (function g(p) {\n            var n = -1;\n            n = this.items.indexOf(p);\n\n            if (n != -1) {\n              this.items.splice(n, 1);\n            }\n\n            var k = a(p.element).find(\"li\");\n            var j = k.length;\n            var o = this;\n            var l = new Array();\n\n            if (j > 0) {\n              a.each(k, function (i) {\n                var q = o.itemMapping[\"id\" + this.id].item;\n                l.push(q);\n              });\n\n              for (var m = 0; m < l.length; m++) {\n                g.apply(this, [l[m]]);\n              }\n            }\n          }).apply(this, [f]);\n        }\n      }\n\n      if (this.host.find(\"#\" + b.id).length > 0) {\n        a(b).remove();\n      }\n\n      if (d == false) {\n        this._raiseEvent(\"5\");\n\n        return;\n      }\n\n      e._updateItemsNavigation();\n\n      if (e.allowDrag && e._enableDragDrop) {\n        e._render(true, false);\n      } else {\n        e._render();\n      }\n\n      if (e.selectedItem != null) {\n        if (e.selectedItem.element == b) {\n          a(e.selectedItem.titleElement).removeClass(e.toThemeProperty(\"jqx-fill-state-pressed\"));\n          a(e.selectedItem.titleElement).removeClass(e.toThemeProperty(\"jqx-tree-item-selected\"));\n          e.selectedItem = null;\n        }\n      }\n\n      this._raiseEvent(\"5\");\n\n      if (e.checkboxes) {\n        e._updateCheckLayout(null);\n      }\n    },\n    clear: function () {\n      this.items = new Array();\n      this.itemMapping = new Array();\n      var b = this.host.find(\"ul:first\");\n\n      if (b.length > 0) {\n        b[0].innerHTML = \"\";\n      }\n\n      this.selectedItem = null;\n    },\n    disableItem: function (b) {\n      if (b == null) {\n        return false;\n      }\n\n      if (b.treeInstance != undefined) {\n        b = b.element;\n      }\n\n      var c = this;\n      a.each(c.items, function () {\n        var d = this;\n\n        if (d.element == b) {\n          d.disabled = true;\n          a(d.titleElement).addClass(c.toThemeProperty(\"jqx-fill-state-disabled\"));\n          a(d.titleElement).addClass(c.toThemeProperty(\"jqx-tree-item-disabled\"));\n\n          if (c.checkboxes && d.checkBoxElement) {\n            a(d.checkBoxElement).jqxCheckBox({\n              disabled: true\n            });\n          }\n\n          return false;\n        }\n      });\n    },\n    _updateInputSelection: function () {\n      if (this.input) {\n        if (this.selectedItem == null) {\n          this.input.val(\"\");\n        } else {\n          var c = this.selectItem.value;\n\n          if (c == null) {\n            c = this.selectedItem.label;\n          }\n\n          this.input.val(c);\n        }\n\n        if (this.checkboxes) {\n          var b = this.getCheckedItems();\n\n          if (this.submitCheckedItems) {\n            var f = \"\";\n\n            for (var d = 0; d < b.length; d++) {\n              var e = b[d].value;\n\n              if (e == null) {\n                e = b[d].label;\n              }\n\n              if (d == b.length - 1) {\n                f += e;\n              } else {\n                f += e + \",\";\n              }\n            }\n\n            this.input.val(f);\n          }\n        }\n      }\n    },\n    getCheckedItems: function () {\n      var b = new Array();\n      var c = this;\n      a.each(c.items, function () {\n        var d = this;\n\n        if (d.checked) {\n          b.push(d);\n        }\n      });\n      return b;\n    },\n    getUncheckedItems: function () {\n      var b = new Array();\n      var c = this;\n      a.each(c.items, function () {\n        var d = this;\n\n        if (!d.checked) {\n          b.push(d);\n        }\n      });\n      return b;\n    },\n    checkAll: function () {\n      var b = this;\n      a.each(b.items, function () {\n        var c = this;\n\n        if (!c.disabled) {\n          c.checked = true;\n          a(c.checkBoxElement).jqxCheckBox(\"_setState\", true);\n        }\n      });\n\n      this._raiseEvent(\"6\", {\n        element: this,\n        checked: true\n      });\n    },\n    uncheckAll: function () {\n      var b = this;\n      a.each(b.items, function () {\n        var c = this;\n\n        if (!c.disabled) {\n          c.checked = false;\n          a(c.checkBoxElement).jqxCheckBox(\"_setState\", false);\n        }\n      });\n\n      this._raiseEvent(\"6\", {\n        element: this,\n        checked: false\n      });\n    },\n    checkItem: function (d, f, b) {\n      if (d == null) {\n        return false;\n      }\n\n      if (f === undefined) {\n        f = true;\n      }\n\n      if (d.treeInstance != undefined) {\n        d = d.element;\n      }\n\n      var e = this;\n      var c = false;\n      var g = null;\n      a.each(e.items, function () {\n        var h = this;\n\n        if (h.element == d && !h.disabled) {\n          c = true;\n          h.checked = f;\n          g = h;\n          a(h.checkBoxElement).jqxCheckBox({\n            checked: f\n          });\n          return false;\n        }\n      });\n\n      if (c) {\n        this._raiseEvent(\"6\", {\n          element: d,\n          checked: f\n        });\n\n        this._updateInputSelection();\n      }\n\n      if (b == undefined) {\n        if (g) {\n          if (this.hasThreeStates) {\n            this.checkItems(g, g);\n          }\n        }\n      }\n    },\n    uncheckItem: function (b) {\n      this.checkItem(b, false);\n    },\n    enableItem: function (b) {\n      if (b == null) {\n        return false;\n      }\n\n      if (b.treeInstance != undefined) {\n        b = b.element;\n      }\n\n      var c = this;\n      a.each(c.items, function () {\n        var d = this;\n\n        if (d.element == b) {\n          d.disabled = false;\n          a(d.titleElement).removeClass(c.toThemeProperty(\"jqx-fill-state-disabled\"));\n          a(d.titleElement).removeClass(c.toThemeProperty(\"jqx-tree-item-disabled\"));\n\n          if (c.checkboxes && d.checkBoxElement) {\n            a(d.checkBoxElement).jqxCheckBox({\n              disabled: false\n            });\n          }\n\n          return false;\n        }\n      });\n    },\n    enableAll: function () {\n      var b = this;\n      a.each(b.items, function () {\n        var c = this;\n        c.disabled = false;\n        a(c.titleElement).removeClass(b.toThemeProperty(\"jqx-tree-item-disabled\"));\n        a(c.titleElement).removeClass(b.toThemeProperty(\"jqx-fill-state-disabled\"));\n\n        if (b.checkboxes && c.checkBoxElement) {\n          a(c.checkBoxElement).jqxCheckBox({\n            disabled: false\n          });\n        }\n      });\n    },\n    lockItem: function (b) {\n      if (b == null) {\n        return false;\n      }\n\n      var c = this;\n      a.each(c.items, function () {\n        var d = this;\n\n        if (d.element == b) {\n          d.locked = true;\n          return false;\n        }\n      });\n    },\n    unlockItem: function (b) {\n      if (b == null) {\n        return false;\n      }\n\n      var c = this;\n      a.each(c.items, function () {\n        var d = this;\n\n        if (d.element == b) {\n          d.locked = false;\n          return false;\n        }\n      });\n    },\n    getItems: function () {\n      return this.items;\n    },\n    getItem: function (b) {\n      if (b == null || b == undefined) {\n        return null;\n      }\n\n      if (this.itemMapping[\"id\" + b.id]) {\n        var c = this.itemMapping[\"id\" + b.id].item;\n        return c;\n      }\n\n      return null;\n    },\n    isExpanded: function (b) {\n      if (b == null || b == undefined) {\n        return false;\n      }\n\n      var c = this.itemMapping[\"id\" + b.id].item;\n\n      if (c != null) {\n        return c.isExpanded;\n      }\n\n      return false;\n    },\n    isSelected: function (b) {\n      if (b == null || b == undefined) {\n        return false;\n      }\n\n      var c = this.itemMapping[\"id\" + b.id].item;\n\n      if (c != null) {\n        return c == this.selectedItem;\n      }\n\n      return false;\n    },\n    getPrevItem: function (c) {\n      var d = this.getItem(c);\n\n      if (c.treeInstance != undefined) {\n        d = c;\n      }\n\n      var b = this._prevVisibleItem(d);\n\n      return b;\n    },\n    getNextItem: function (c) {\n      var d = this.getItem(c);\n\n      if (c.treeInstance != undefined) {\n        d = c;\n      }\n\n      var b = this._nextVisibleItem(d);\n\n      return b;\n    },\n    getSelectedItem: function (b) {\n      return this.selectedItem;\n    },\n    val: function (d) {\n      if (arguments.length == 0 || typeof d == \"object\") {\n        return this.selectedItem;\n      }\n\n      if (typeof d == \"string\") {\n        var b = this.host.find(\"#\" + d);\n\n        if (b.length > 0) {\n          var c = this.getItem(b[0]);\n          this.selectItem(c);\n        }\n      } else {\n        var c = this.getItem(d);\n        this.selectItem(c);\n      }\n    },\n    getActiveDescendant: function () {\n      if (this.selectedItem) {\n        return this.selectedItem.element.id;\n      }\n\n      return \"\";\n    },\n    clearSelection: function () {\n      this.selectItem(null);\n    },\n    selectItem: function (b, c) {\n      if (this.disabled) {\n        return;\n      }\n\n      var d = this;\n\n      if (b && b.treeInstance != undefined) {\n        b = b.element;\n      }\n\n      if (b == null || b == undefined) {\n        if (d.selectedItem != null) {\n          a(d.selectedItem.titleElement).removeClass(d.toThemeProperty(\"jqx-fill-state-pressed\"));\n          a(d.selectedItem.titleElement).removeClass(d.toThemeProperty(\"jqx-tree-item-selected\"));\n          d.selectedItem = null;\n        }\n\n        return;\n      }\n\n      if (this.selectedItem != null && this.selectedItem.element == b) {\n        return;\n      }\n\n      var e = this.selectedItem != null ? this.selectedItem.element : null;\n\n      if (e) {\n        a(e).removeAttr(\"aria-selected\");\n      }\n\n      a.each(d.items, function () {\n        var f = this;\n        this.selected = false;\n\n        if (!f.disabled) {\n          if (f.element == b) {\n            if (d.selectedItem == null || d.selectedItem != null && d.selectedItem.titleElement != f.titleElement) {\n              if (d.selectedItem != null) {\n                a(d.selectedItem.titleElement).removeClass(d.toThemeProperty(\"jqx-fill-state-pressed\"));\n                a(d.selectedItem.titleElement).removeClass(d.toThemeProperty(\"jqx-tree-item-selected\"));\n              }\n\n              a(f.titleElement).addClass(d.toThemeProperty(\"jqx-fill-state-pressed\"));\n              a(f.titleElement).addClass(d.toThemeProperty(\"jqx-tree-item-selected\"));\n              d.selectedItem = f;\n              this.selected = true;\n              a(f.element).attr(\"aria-selected\", \"true\");\n              a.jqx.aria(d, \"aria-activedescendant\", f.element.id);\n            }\n          }\n        }\n      });\n\n      this._updateInputSelection();\n\n      if (!c) {\n        c = null;\n      }\n\n      this._raiseEvent(\"2\", {\n        element: b,\n        prevElement: e,\n        type: c\n      });\n    },\n    collapseAll: function () {\n      this.isUpdating = true;\n      var d = this;\n      var b = d.items;\n      var c = this.animationHideDuration;\n      this.animationHideDuration = 0;\n      a.each(b, function () {\n        var e = this;\n\n        if (e.isExpanded == true) {\n          d._collapseItem(d, e);\n        }\n      });\n      setTimeout(function () {\n        d.isUpdating = false;\n\n        d._calculateWidth();\n      }, this.animationHideDuration);\n      this.animationHideDuration = c;\n    },\n    expandAll: function () {\n      var c = this;\n      this.isUpdating = true;\n      var b = this.animationShowDuration;\n      this.animationShowDuration = 0;\n      a.each(this.items, function () {\n        var d = this;\n\n        if (d.hasItems) {\n          c._expandItem(c, d);\n        }\n      });\n      setTimeout(function () {\n        c.isUpdating = false;\n\n        c._calculateWidth();\n      }, this.animationShowDuration);\n      this.animationShowDuration = b;\n    },\n    collapseItem: function (b) {\n      if (b == null) {\n        return false;\n      }\n\n      if (b.treeInstance != undefined) {\n        b = b.element;\n      }\n\n      var c = this;\n      a.each(this.items, function () {\n        var d = this;\n\n        if (d.isExpanded == true && d.element == b) {\n          c._collapseItem(c, d);\n\n          return false;\n        }\n      });\n      return true;\n    },\n    expandItem: function (b) {\n      if (b == null) {\n        return false;\n      }\n\n      if (b.treeInstance != undefined) {\n        b = b.element;\n      }\n\n      var c = this;\n      a.each(c.items, function () {\n        var d = this;\n\n        if (d.isExpanded == false && d.element == b && !d.disabled && !d.locked) {\n          c._expandItem(c, d);\n\n          if (d.parentElement) {\n            c.expandItem(d.parentElement);\n          }\n        }\n      });\n      return true;\n    },\n    _getClosedSubtreeOffset: function (c) {\n      var b = a(c.subtreeElement);\n      var e = -b.outerHeight();\n      var d = -b.outerWidth();\n      d = 0;\n      return {\n        left: d,\n        top: e\n      };\n    },\n    _collapseItem: function (g, k, d, b) {\n      if (g == null || k == null) {\n        return false;\n      }\n\n      if (k.disabled) {\n        return false;\n      }\n\n      if (g.disabled) {\n        return false;\n      }\n\n      if (g.locked) {\n        return false;\n      }\n\n      var e = a(k.subtreeElement);\n\n      var l = this._getClosedSubtreeOffset(k);\n\n      var h = l.top;\n      var c = l.left;\n      var j = a(k.element);\n      var f = g.animationHideDelay;\n      f = 0;\n\n      if (e.data(\"timer\").show != null) {\n        clearTimeout(e.data(\"timer\").show);\n        e.data(\"timer\").show = null;\n      }\n\n      var i = function () {\n        k.isExpanded = false;\n\n        if (g.checkboxes) {\n          var n = e.find(\".chkbox\");\n          n.stop();\n          n.css(\"opacity\", 1);\n          e.find(\".chkbox\").animate({\n            opacity: 0\n          }, 50);\n        }\n\n        var m = a(k.arrow);\n\n        g._arrowStyle(m, \"\", k.isExpanded);\n\n        e.slideUp(g.animationHideDuration, function () {\n          k.isCollapsing = false;\n\n          g._calculateWidth();\n\n          var o = a(k.arrow);\n\n          g._arrowStyle(o, \"\", k.isExpanded);\n\n          e.hide();\n\n          g._raiseEvent(\"1\", {\n            element: k.element\n          });\n        });\n      };\n\n      if (f > 0) {\n        e.data(\"timer\").hide = setTimeout(function () {\n          i();\n        }, f);\n      } else {\n        i();\n      }\n    },\n    _expandItem: function (g, j) {\n      if (g == null || j == null) {\n        return false;\n      }\n\n      if (j.isExpanded) {\n        return false;\n      }\n\n      if (j.locked) {\n        return false;\n      }\n\n      if (j.disabled) {\n        return false;\n      }\n\n      if (g.disabled) {\n        return false;\n      }\n\n      var e = a(j.subtreeElement);\n\n      if (e.data(\"timer\") != null && e.data(\"timer\").hide != null) {\n        clearTimeout(e.data(\"timer\").hide);\n      }\n\n      var i = a(j.element);\n      var h = 0;\n      var d = 0;\n\n      if (parseInt(e.css(\"top\")) == h) {\n        j.isExpanded = true;\n        return;\n      }\n\n      var c = a(j.arrow);\n\n      g._arrowStyle(c, \"\", j.isExpanded);\n\n      if (g.checkboxes) {\n        var f = e.find(\".chkbox\");\n        f.stop();\n        f.css(\"opacity\", 0);\n        f.animate({\n          opacity: 1\n        }, g.animationShowDuration);\n      }\n\n      var c = a(j.arrow);\n\n      g._arrowStyle(c, \"\", true);\n\n      e.slideDown(g.animationShowDuration, g.easing, function () {\n        var k = a(j.arrow);\n        j.isExpanded = true;\n\n        g._arrowStyle(k, \"\", j.isExpanded);\n\n        j.isExpanding = false;\n\n        g._raiseEvent(\"0\", {\n          element: j.element\n        });\n\n        g._calculateWidth();\n      });\n\n      if (g.checkboxes) {\n        g._updateCheckItemLayout(j);\n\n        if (j.subtreeElement) {\n          var b = a(j.subtreeElement).find(\"li\");\n          a.each(b, function () {\n            var k = g.getItem(this);\n\n            if (k != null) {\n              g._updateCheckItemLayout(k);\n            }\n          });\n        }\n      }\n    },\n    _calculateWidth: function () {\n      var f = this;\n      var g = this.checkboxes ? 20 : 0;\n      var e = 0;\n\n      if (this.isUpdating) {\n        return;\n      }\n\n      a.each(this.items, function () {\n        var h = a(this.element).height();\n\n        if (h != 0) {\n          var k = a(this.titleElement).outerWidth() + 10 + g + (1 + this.level) * 20;\n          e = Math.max(e, k);\n\n          if (this.hasItems) {\n            var i = parseInt(a(this.titleElement).css(\"padding-top\"));\n\n            if (isNaN(i)) {\n              i = 0;\n            }\n\n            i = i * 2;\n            i += 2;\n            var j = (i + a(this.titleElement).height()) / 2 - 17 / 2;\n\n            if (a.jqx.browser.msie && a.jqx.browser.version < 9) {\n              a(this.arrow).css(\"margin-top\", \"3px\");\n            } else {\n              if (parseInt(j) >= 0) {\n                a(this.arrow).css(\"margin-top\", parseInt(j) + \"px\");\n              }\n            }\n          }\n        }\n      });\n\n      if (this.toggleIndicatorSize > 16) {\n        e = e + this.toggleIndicatorSize - 16;\n      }\n\n      if (f.panel) {\n        if (e > this.host.width()) {\n          var b = e - this.host.width();\n          var d = f.panel.jqxPanel(\"vScrollBar\").css(\"visibility\") !== \"hidden\" ? 10 : 0;\n          b += d;\n          f.panel.jqxPanel({\n            horizontalScrollBarMax: b\n          });\n        } else {\n          f.panel.jqxPanel({\n            horizontalScrollBarMax: 0\n          });\n        }\n      }\n\n      this.host.find(\"ul:first\").width(e);\n      var c = this.host.width() - 30;\n\n      if (c > 0) {\n        this.host.find(\"ul:first\").css(\"min-width\", c);\n      }\n\n      if (f.panel) {\n        f.panel.jqxPanel(\"_arrange\");\n      }\n    },\n    _arrowStyle: function (c, h, b) {\n      var e = this;\n\n      if (c.length > 0) {\n        c.removeClass();\n        var g = \"\";\n\n        if (h == \"hover\") {\n          g = \"-\" + h;\n        }\n\n        var f = b ? \"-expand\" : \"-collapse\";\n        var d = \"jqx-tree-item-arrow\" + f + g;\n        c.addClass(e.toThemeProperty(d));\n\n        if (!this.rtl) {\n          var f = !b ? \"-right\" : \"-down\";\n          c.addClass(e.toThemeProperty(\"jqx-icon-arrow\" + f + \"\"));\n        }\n\n        if (this.rtl) {\n          c.addClass(e.toThemeProperty(d + \"-rtl\"));\n          var f = !b ? \"-left\" : \"-down\";\n          c.addClass(e.toThemeProperty(\"jqx-icon-arrow\" + f + \"\"));\n        }\n      }\n    },\n    _initialize: function (f, c) {\n      var e = this;\n      var d = 0;\n      this.host.addClass(e.toThemeProperty(\"jqx-widget\"));\n      this.host.addClass(e.toThemeProperty(\"jqx-widget-content\"));\n      this.host.addClass(e.toThemeProperty(\"jqx-tree\"));\n\n      this._updateDisabledState();\n\n      var b = a.jqx.browser.msie && a.jqx.browser.version < 8;\n      a.each(this.items, function () {\n        var m = this;\n        var g = a(m.element);\n        var k = null;\n\n        if (e.checkboxes && !m.hasItems && m.checkBoxElement) {\n          a(m.checkBoxElement).css(\"margin-left\", \"0px\");\n        }\n\n        if (!b) {\n          if (!m.hasItems) {\n            if (!e.rtl) {\n              m.element.style.marginLeft = parseInt(e.toggleIndicatorSize) + \"px\";\n            } else {\n              m.element.style.marginRight = parseInt(e.toggleIndicatorSize) + \"px\";\n            }\n\n            var j = a(m.arrow);\n\n            if (j.length > 0) {\n              j.remove();\n              m.arrow = null;\n            }\n\n            return true;\n          } else {\n            if (!e.rtl) {\n              m.element.style.marginLeft = \"0px\";\n            } else {\n              m.element.style.marginRight = \"0px\";\n            }\n          }\n        } else {\n          if (!m.hasItems && a(m.element).find(\"ul\").length > 0) {\n            a(m.element).find(\"ul\").remove();\n          }\n        }\n\n        var j = a(m.arrow);\n\n        if (j.length > 0) {\n          j.remove();\n        }\n\n        var k = a('<span style=\"height: 17px; border: none; background-color: transparent;\" id=\"arrow' + g[0].id + '\"></span>');\n        k.prependTo(g);\n\n        if (!e.rtl) {\n          k.css(\"float\", \"left\");\n        } else {\n          k.css(\"float\", \"right\");\n        }\n\n        k.css(\"clear\", \"both\");\n        k.width(e.toggleIndicatorSize);\n\n        e._arrowStyle(k, \"\", m.isExpanded);\n\n        var l = parseInt(a(this.titleElement).css(\"padding-top\"));\n\n        if (isNaN(l)) {\n          l = 0;\n        }\n\n        l = l * 2;\n        l += 2;\n        var n = (l + a(this.titleElement).height()) / 2 - 17 / 2;\n\n        if (a.jqx.browser.msie && a.jqx.browser.version < 9) {\n          k.css(\"margin-top\", \"3px\");\n        } else {\n          if (parseInt(n) >= 0) {\n            k.css(\"margin-top\", parseInt(n) + \"px\");\n          }\n        }\n\n        g.addClass(e.toThemeProperty(\"jqx-disableselect\"));\n        k.addClass(e.toThemeProperty(\"jqx-disableselect\"));\n        var h = \"click\";\n        var i = e.isTouchDevice();\n\n        if (i) {\n          h = a.jqx.mobile.getTouchEventName(\"touchend\");\n        }\n\n        e.addHandler(k, h, function () {\n          if (!m.isExpanded) {\n            e._expandItem(e, m);\n          } else {\n            e._collapseItem(e, m);\n          }\n\n          return false;\n        });\n        e.addHandler(k, \"selectstart\", function () {\n          return false;\n        });\n        e.addHandler(k, \"mouseup\", function () {\n          if (!i) {\n            return false;\n          }\n        });\n        m.hasItems = a(m.element).find(\"li\").length > 0;\n        m.arrow = k[0];\n\n        if (!m.hasItems) {\n          k.css(\"visibility\", \"hidden\");\n        }\n\n        g.css(\"float\", \"none\");\n      });\n    },\n    _getOffset: function (b) {\n      var f = a(window).scrollTop();\n      var h = a(window).scrollLeft();\n      var c = a.jqx.mobile.isSafariMobileBrowser();\n      var g = a(b).offset();\n      var e = g.top;\n      var d = g.left;\n\n      if (c != null && c) {\n        return {\n          left: d - h,\n          top: e - f\n        };\n      } else {\n        return a(b).offset();\n      }\n    },\n    _renderHover: function (c, e, b) {\n      var d = this;\n\n      if (!b) {\n        var f = a(e.titleElement);\n        d.addHandler(f, \"mouseenter\", function () {\n          if (!e.disabled && d.enableHover && !d.disabled) {\n            f.addClass(d.toThemeProperty(\"jqx-fill-state-hover\"));\n            f.addClass(d.toThemeProperty(\"jqx-tree-item-hover\"));\n          }\n        });\n        d.addHandler(f, \"mouseleave\", function () {\n          if (!e.disabled && d.enableHover && !d.disabled) {\n            f.removeClass(d.toThemeProperty(\"jqx-fill-state-hover\"));\n            f.removeClass(d.toThemeProperty(\"jqx-tree-item-hover\"));\n          }\n        });\n      }\n    },\n    _updateDisabledState: function () {\n      if (this.disabled) {\n        this.host.addClass(this.toThemeProperty(\"jqx-fill-state-disabled\"));\n      } else {\n        this.host.removeClass(this.toThemeProperty(\"jqx-fill-state-disabled\"));\n      }\n    },\n    _addInput: function () {\n      if (this.input == null) {\n        var b = this.host.attr(\"name\");\n\n        if (b) {\n          this.host.attr(\"name\", \"\");\n        }\n\n        this.input = a(\"<input type='hidden'/>\");\n        this.host.append(this.input);\n        this.input.attr(\"name\", b);\n\n        this._updateInputSelection();\n      }\n    },\n    render: function () {\n      this._updateItemsNavigation();\n\n      this._render();\n    },\n    _render: function (f, i) {\n      if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n        var g = this;\n        a.each(this.items, function () {\n          var m = a(this.element);\n          var o = m.parent();\n          var l = parseInt(this.titleElement.css(\"margin-left\")) + this.titleElement[0].scrollWidth + 13;\n          m.css(\"min-width\", l);\n          var n = parseInt(o.css(\"min-width\"));\n\n          if (isNaN(n)) {\n            n = 0;\n          }\n\n          var k = m.css(\"min-width\");\n\n          if (n < parseInt(m.css(\"min-width\"))) {\n            o.css(\"min-width\", k);\n          }\n\n          this.titleElement[0].style.width = null;\n        });\n      }\n\n      var h = 1000;\n      var c = [5, 5];\n      var g = this;\n      a.data(g.element, \"animationHideDelay\", g.animationHideDelay);\n      a.data(document.body, \"treeel\", this);\n\n      this._initialize();\n\n      var d = this.isTouchDevice();\n\n      if (d && this.toggleMode == \"dblclick\") {\n        this.toggleMode = \"click\";\n      }\n\n      if (f == undefined || f == true) {\n        a.each(this.items, function () {\n          g._updateItemEvents(g, this);\n        });\n      }\n\n      if (this.allowDrag && this._enableDragDrop && (i == undefined || i == true)) {\n        this._enableDragDrop();\n      }\n\n      this._addInput();\n\n      if (this.host.jqxPanel) {\n        if (this.host.find(\"#panel\" + this.element.id).length > 0) {\n          this.panel.jqxPanel({\n            touchMode: this.touchMode\n          });\n          this.panel.jqxPanel(\"refresh\");\n          return;\n        }\n\n        this.host.find(\"ul:first\").wrap('<div style=\"background-color: transparent; overflow: hidden; width: 100%; height: 100%;\" id=\"panel' + this.element.id + '\"></div>');\n        var b = this.host.find(\"div:first\");\n        var j = \"fixed\";\n\n        if (this.height == null || this.height == \"auto\") {\n          j = \"verticalwrap\";\n        }\n\n        if (this.width == null || this.width == \"auto\") {\n          if (j == \"fixed\") {\n            j = \"horizontalwrap\";\n          } else {\n            j = \"wrap\";\n          }\n        }\n\n        b.jqxPanel({\n          rtl: this.rtl,\n          theme: this.theme,\n          width: \"100%\",\n          height: \"100%\",\n          touchMode: this.touchMode,\n          sizeMode: j\n        });\n\n        if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n          b.jqxPanel(\"content\").css(\"left\", \"0px\");\n        }\n\n        b.data({\n          nestedWidget: true\n        });\n\n        if (this.height == null || this.height != null && this.height.toString().indexOf(\"%\") != -1) {\n          if (this.isTouchDevice()) {\n            this.removeHandler(b, a.jqx.mobile.getTouchEventName(\"touchend\") + \".touchScroll touchcancel.touchScroll\");\n            this.removeHandler(b, a.jqx.mobile.getTouchEventName(\"touchmove\") + \".touchScroll\");\n            this.removeHandler(b, a.jqx.mobile.getTouchEventName(\"touchstart\") + \".touchScroll\");\n          }\n        }\n\n        var e = a.data(b[0], \"jqxPanel\").instance;\n\n        if (e != null) {\n          this.vScrollInstance = e.vScrollInstance;\n          this.hScrollInstance = e.hScrollInstance;\n        }\n\n        this.panelInstance = e;\n\n        if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n          this.host.attr(\"hideFocus\", true);\n          this.host.find(\"div\").attr(\"hideFocus\", true);\n          this.host.find(\"ul\").attr(\"hideFocus\", true);\n        }\n\n        b[0].className = \"\";\n        this.panel = b;\n      }\n\n      this._raiseEvent(\"3\", this);\n    },\n    focus: function () {\n      try {\n        this.host.focus();\n      } catch (b) {}\n    },\n    _updateItemEvents: function (h, j) {\n      var b = this.isTouchDevice();\n\n      if (b) {\n        this.toggleMode = a.jqx.mobile.getTouchEventName(\"touchend\");\n      }\n\n      var i = a(j.element);\n\n      if (h.enableRoundedCorners) {\n        i.addClass(h.toThemeProperty(\"jqx-rc-all\"));\n      }\n\n      var e = !b ? \"mousedown\" : a.jqx.mobile.getTouchEventName(\"touchend\");\n\n      if (h.touchMode === true) {\n        h.removeHandler(a(j.checkBoxElement), \"mousedown\");\n      }\n\n      h.removeHandler(a(j.checkBoxElement), e);\n      h.addHandler(a(j.checkBoxElement), e, function (k) {\n        if (!h.disabled) {\n          if (!this.treeItem.disabled) {\n            this.treeItem.checked = !this.treeItem.checked;\n            h.checkItem(this.treeItem.element, this.treeItem.checked, \"tree\");\n\n            if (h.hasThreeStates) {\n              h.checkItems(this.treeItem, this.treeItem);\n            }\n          }\n        }\n\n        return false;\n      });\n      var c = a(j.titleElement);\n      h.removeHandler(i);\n      var f = this.allowDrag && this._enableDragDrop;\n\n      if (!f) {\n        h.removeHandler(c);\n      } else {\n        h.removeHandler(c, \"mousedown.item\");\n        h.removeHandler(c, \"click\");\n        h.removeHandler(c, \"dblclick\");\n        h.removeHandler(c, \"mouseenter\");\n        h.removeHandler(c, \"mouseleave\");\n      }\n\n      h._renderHover(i, j, b);\n\n      var d = a(j.subtreeElement);\n\n      if (d.length > 0) {\n        var g = j.isExpanded ? \"block\" : \"none\";\n        d.css({\n          overflow: \"hidden\",\n          display: g\n        });\n        d.data(\"timer\", {});\n      }\n\n      h.addHandler(c, \"selectstart\", function (k) {\n        return false;\n      });\n\n      if (a.jqx.browser.opera) {\n        h.addHandler(c, \"mousedown.item\", function (k) {\n          return false;\n        });\n      }\n\n      if (h.toggleMode != \"click\") {\n        h.addHandler(c, \"click\", function (k) {\n          h.selectItem(j.element, \"mouse\");\n\n          if (h.panel != null) {\n            h.panel.jqxPanel({\n              focused: true\n            });\n          }\n\n          c.focus();\n\n          h._raiseEvent(\"9\", {\n            element: j.element\n          });\n        });\n      }\n\n      h.addHandler(c, h.toggleMode, function (k) {\n        if (d.length > 0) {\n          clearTimeout(d.data(\"timer\").hide);\n        }\n\n        if (h.panel != null) {\n          h.panel.jqxPanel({\n            focused: true\n          });\n        }\n\n        h.selectItem(j.element, \"mouse\");\n\n        if (j.isExpanding == undefined) {\n          j.isExpanding = false;\n        }\n\n        if (j.isCollapsing == undefined) {\n          j.isCollapsing = false;\n        }\n\n        if (d.length > 0) {\n          if (!j.isExpanded) {\n            if (false == j.isExpanding) {\n              j.isExpanding = true;\n\n              h._expandItem(h, j);\n            }\n          } else {\n            if (false == j.isCollapsing) {\n              j.isCollapsing = true;\n\n              h._collapseItem(h, j, true);\n            }\n          }\n\n          return false;\n        }\n      });\n    },\n    isTouchDevice: function () {\n      if (this._isTouchDevice != undefined) {\n        return this._isTouchDevice;\n      }\n\n      var b = a.jqx.mobile.isTouchDevice();\n\n      if (this.touchMode == true) {\n        b = true;\n      } else {\n        if (this.touchMode == false) {\n          b = false;\n        }\n      }\n\n      this._isTouchDevice = b;\n      return b;\n    },\n    createID: function () {\n      return a.jqx.utilities.createId();\n    },\n    createTree: function (b) {\n      if (b == null) {\n        return;\n      }\n\n      var d = this;\n      var f = a(b).find(\"li\");\n      var c = 0;\n      this.items = new Array();\n      this.itemMapping = new Array();\n      a(b).addClass(d.toThemeProperty(\"jqx-tree-dropdown-root\"));\n\n      if (this.rtl) {\n        a(b).addClass(d.toThemeProperty(\"jqx-tree-dropdown-root-rtl\"));\n      }\n\n      if (this.rtl || a.jqx.browser.msie && a.jqx.browser.version < 8) {\n        this._measureItem = a(\"<span style='position: relative; visibility: hidden;'></span>\");\n\n        this._measureItem.addClass(this.toThemeProperty(\"jqx-widget\"));\n\n        this._measureItem.addClass(this.toThemeProperty(\"jqx-fill-state-normal\"));\n\n        this._measureItem.addClass(this.toThemeProperty(\"jqx-tree-item\"));\n\n        this._measureItem.addClass(this.toThemeProperty(\"jqx-item\"));\n\n        a(document.body).append(this._measureItem);\n      }\n\n      if (a.jqx.browser.msie && a.jqx.browser.version < 8) {}\n\n      for (var e = 0; e < f.length; e++) {\n        this._createItem(f[e]);\n      }\n\n      if (this.rtl || a.jqx.browser.msie && a.jqx.browser.version < 8) {\n        this._measureItem.remove();\n      }\n\n      this._updateItemsNavigation();\n\n      this._updateCheckStates();\n    },\n    _updateCheckLayout: function (c) {\n      var b = this;\n\n      if (!this.checkboxes) {\n        return;\n      }\n\n      a.each(this.items, function () {\n        if (this.level == c || c == undefined) {\n          b._updateCheckItemLayout(this);\n        }\n      });\n    },\n    _updateCheckItemLayout: function (b) {\n      if (this.checkboxes) {\n        if (a(b.titleElement).css(\"display\") != \"none\") {\n          var c = a(b.checkBoxElement);\n          var d = a(b.titleElement).outerHeight() / 2 - 1 - parseInt(this.checkSize) / 2;\n          c.css(\"margin-top\", d);\n\n          if (!this.rtl) {\n            if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n              b.titleElement.css(\"margin-left\", parseInt(this.checkSize) + 25);\n            } else {\n              if (b.hasItems) {\n                c.css(\"margin-left\", this.toggleIndicatorSize);\n              }\n            }\n          }\n        }\n      }\n    },\n    _updateCheckStates: function () {\n      var b = this;\n\n      if (b.hasThreeStates) {\n        a.each(this.items, function () {\n          b._updateCheckState(this);\n        });\n      } else {\n        a.each(this.items, function () {\n          if (this.checked == null) {\n            b.checkItem(this.element, false, \"tree\");\n          }\n        });\n      }\n    },\n    _updateCheckState: function (e) {\n      if (e == null || e == undefined) {\n        return;\n      }\n\n      var d = this;\n      var c = 0;\n      var f = false;\n      var b = 0;\n      var g = a(e.element).find(\"li\");\n      b = g.length;\n\n      if (e.checked && b > 0) {\n        a.each(g, function (h) {\n          var j = d.itemMapping[\"id\" + this.id].item;\n          var i = j.element.getAttribute(\"item-checked\");\n\n          if (i == undefined || i == null || i == \"true\" || i == true) {\n            d.checkItem(j.element, true, \"tree\");\n          }\n        });\n      }\n\n      a.each(g, function (h) {\n        var i = d.itemMapping[\"id\" + this.id].item;\n\n        if (i.checked != false) {\n          if (i.checked == null) {\n            f = true;\n          }\n\n          c++;\n        }\n      });\n\n      if (b > 0) {\n        if (c == b) {\n          this.checkItem(e.element, true, \"tree\");\n        } else {\n          if (c > 0) {\n            this.checkItem(e.element, null, \"tree\");\n          } else {\n            this.checkItem(e.element, false, \"tree\");\n          }\n        }\n      }\n    },\n    _updateItemsNavigation: function () {\n      var g = this.host.find(\"ul:first\");\n      var f = a(g).find(\"li\");\n      var c = 0;\n\n      for (var d = 0; d < f.length; d++) {\n        var b = f[d];\n\n        if (this.itemMapping[\"id\" + b.id]) {\n          var e = this.itemMapping[\"id\" + b.id].item;\n\n          if (!e) {\n            continue;\n          }\n\n          e.prevItem = null;\n          e.nextItem = null;\n\n          if (d > 0) {\n            if (this.itemMapping[\"id\" + f[d - 1].id]) {\n              e.prevItem = this.itemMapping[\"id\" + f[d - 1].id].item;\n            }\n          }\n\n          if (d < f.length - 1) {\n            if (this.itemMapping[\"id\" + f[d + 1].id]) {\n              e.nextItem = this.itemMapping[\"id\" + f[d + 1].id].item;\n            }\n          }\n        }\n      }\n    },\n    _applyTheme: function (e, h) {\n      var f = this;\n      this.host.removeClass(\"jqx-tree-\" + e);\n      this.host.removeClass(\"jqx-widget-\" + e);\n      this.host.removeClass(\"jqx-widget-content-\" + e);\n      this.host.addClass(f.toThemeProperty(\"jqx-tree\"));\n      this.host.addClass(f.toThemeProperty(\"jqx-widget\"));\n      var b = this.host.find(\"ul:first\");\n      a(b).removeClass(f.toThemeProperty(\"jqx-tree-dropdown-root-\" + e));\n      a(b).addClass(f.toThemeProperty(\"jqx-tree-dropdown-root\"));\n\n      if (this.rtl) {\n        a(b).removeClass(f.toThemeProperty(\"jqx-tree-dropdown-root-rtl-\" + e));\n        a(b).addClass(f.toThemeProperty(\"jqx-tree-dropdown-root-rtl\"));\n      }\n\n      var g = a(b).find(\"li\");\n\n      for (var d = 0; d < g.length; d++) {\n        var c = g[d];\n        a(c).children().each(function () {\n          if (this.tagName == \"ul\" || this.tagName == \"UL\") {\n            a(this).removeClass(f.toThemeProperty(\"jqx-tree-dropdown-\" + e));\n            a(this).addClass(f.toThemeProperty(\"jqx-tree-dropdown\"));\n\n            if (f.rtl) {\n              a(this).removeClass(f.toThemeProperty(\"jqx-tree-dropdown-rtl-\" + e));\n              a(this).addClass(f.toThemeProperty(\"jqx-tree-dropdown-rtl\"));\n            }\n\n            return false;\n          }\n        });\n      }\n\n      a.each(this.items, function () {\n        var k = this;\n        var j = a(k.element);\n        j.removeClass(f.toThemeProperty(\"jqx-tree-item-li-\" + e));\n        j.addClass(f.toThemeProperty(\"jqx-tree-item-li\"));\n\n        if (this.rtl) {\n          j.removeClass(f.toThemeProperty(\"jqx-tree-item-li-\" + e));\n          j.addClass(f.toThemeProperty(\"jqx-tree-item-li\"));\n        }\n\n        a(k.titleElement).removeClass(f.toThemeProperty(\"jqx-tree-item-\" + e));\n        a(k.titleElement).addClass(f.toThemeProperty(\"jqx-tree-item\"));\n        a(k.titleElement).removeClass(\"jqx-item-\" + e);\n        a(k.titleElement).addClass(f.toThemeProperty(\"jqx-item\"));\n        var i = a(k.arrow);\n\n        if (i.length > 0) {\n          f._arrowStyle(i, \"\", k.isExpanded);\n        }\n\n        if (k.checkBoxElement) {\n          a(k.checkBoxElement).jqxCheckBox({\n            theme: h\n          });\n        }\n\n        if (f.enableRoundedCorners) {\n          j.removeClass(\"jqx-rc-all-\" + e);\n          j.addClass(f.toThemeProperty(\"jqx-rc-all\"));\n        }\n      });\n\n      if (this.host.jqxPanel) {\n        this.panel.jqxPanel({\n          theme: h\n        });\n      }\n    },\n    _refreshMapping: function (f, p) {\n      var e = this.host.find(\"li\");\n      var b = new Array();\n      var o = new Array();\n      var h = a.data(document.body, \"treeItemsStorage\");\n      var k = this;\n\n      for (var i = 0; i < e.length; i++) {\n        var j = e[i];\n        var d = a(j);\n        var n = h[j.id];\n\n        if (n == null) {\n          continue;\n        }\n\n        o[o.length] = n;\n\n        if (f == undefined || f == true) {\n          this._updateItemEvents(this, n);\n        }\n\n        n.level = d.parents(\"li\").length;\n        n.treeInstance = this;\n        var m = null;\n        var g = null;\n\n        if (n.titleElement[0].className.indexOf(\"jqx-fill-state-pressed\") != -1) {\n          a(n.titleElement).removeClass(k.toThemeProperty(\"jqx-fill-state-pressed\"));\n          a(n.titleElement).removeClass(k.toThemeProperty(\"jqx-tree-item-selected\"));\n        }\n\n        var c = d.children();\n        c.each(function () {\n          if (this.tagName == \"ul\" || this.tagName == \"UL\") {\n            n.subtreeElement = this;\n            a(this).addClass(k.toThemeProperty(\"jqx-tree-dropdown\"));\n\n            if (k.rtl) {\n              a(this).addClass(k.toThemeProperty(\"jqx-tree-dropdown-rtl\"));\n            }\n\n            return false;\n          }\n        });\n        var l = d.parents();\n        l.each(function () {\n          if (this.tagName == \"li\" || this.tagName == \"LI\") {\n            g = this.id;\n            m = this;\n            return false;\n          }\n        });\n        n.parentElement = m;\n        n.parentId = g;\n        n.hasItems = a(n.element).find(\"li\").length > 0;\n\n        if (n != null) {\n          b[i] = {\n            element: j,\n            item: n\n          };\n          b[\"id\" + j.id] = b[i];\n        }\n      }\n\n      this.itemMapping = b;\n      this.items = o;\n    },\n    _createItem: function (c) {\n      if (c == null || c == undefined) {\n        return;\n      }\n\n      var q = c.id;\n\n      if (!q) {\n        q = this.createID();\n      }\n\n      var E = c;\n      var l = a(c);\n      E.id = q;\n      var g = a.data(document.body, \"treeItemsStorage\");\n\n      if (g == undefined) {\n        g = new Array();\n      }\n\n      var w = this.items.length;\n      this.items[w] = new a.jqx._jqxTree.jqxTreeItem();\n      this.treeElements[q] = this.items[w];\n      g[E.id] = this.items[w];\n      a.data(document.body, \"treeItemsStorage\", g);\n      w = this.items.length;\n      var z = 0;\n      var G = this;\n      var e = null;\n      l.attr(\"role\", \"treeitem\");\n      l.children().each(function () {\n        if (this.tagName == \"ul\" || this.tagName == \"UL\") {\n          G.items[w - 1].subtreeElement = this;\n          a(this).addClass(G.toThemeProperty(\"jqx-tree-dropdown\"));\n\n          if (G.rtl) {\n            a(this).addClass(G.toThemeProperty(\"jqx-tree-dropdown-rtl\"));\n            a(this).css(\"clear\", \"both\");\n          }\n\n          return false;\n        }\n      });\n      l.parents().each(function () {\n        if (this.tagName == \"li\" || this.tagName == \"LI\") {\n          z = this.id;\n          e = this;\n          return false;\n        }\n      });\n      var v = c.getAttribute(\"item-expanded\");\n\n      if (v == null || v == undefined || v != \"true\" && v != true) {\n        v = false;\n      } else {\n        v = true;\n      }\n\n      E.removeAttribute(\"item-expanded\");\n      var F = c.getAttribute(\"item-locked\");\n\n      if (F == null || F == undefined || F != \"true\" && F != true) {\n        F = false;\n      } else {\n        F = true;\n      }\n\n      E.removeAttribute(\"item-locked\");\n      var r = c.getAttribute(\"item-selected\");\n\n      if (r == null || r == undefined || r != \"true\" && r != true) {\n        r = false;\n      } else {\n        r = true;\n      }\n\n      E.removeAttribute(\"item-selected\");\n      var d = c.getAttribute(\"item-disabled\");\n\n      if (d == null || d == undefined || d != \"true\" && d != true) {\n        d = false;\n      } else {\n        d = true;\n      }\n\n      E.removeAttribute(\"item-disabled\");\n      var i = c.getAttribute(\"item-checked\");\n\n      if (i == null || i == undefined || i != \"true\" && i != true) {\n        i = false;\n      } else {\n        i = true;\n      }\n\n      var H = c.getAttribute(\"item-title\");\n\n      if (H == null || H == undefined || H != \"true\" && H != true) {\n        H = false;\n      }\n\n      E.removeAttribute(\"item-title\");\n      var C = c.getAttribute(\"item-icon\");\n      var s = c.getAttribute(\"item-iconsize\");\n      var j = c.getAttribute(\"item-label\");\n      var u = c.getAttribute(\"item-value\");\n      E.removeAttribute(\"item-icon\");\n      E.removeAttribute(\"item-iconsize\");\n      E.removeAttribute(\"item-label\");\n      E.removeAttribute(\"item-value\");\n      var B = this.items[w - 1];\n      B.id = q;\n\n      if (B.value == undefined) {\n        if (this._valueList && this._valueList[q]) {\n          B.value = this._valueList[q];\n        } else {\n          B.value = u;\n        }\n      }\n\n      B.icon = C;\n      B.iconsize = s;\n      B.parentId = z;\n      B.disabled = d;\n      B.parentElement = e;\n      B.element = c;\n      B.locked = F;\n      B.selected = r;\n      B.checked = i;\n      B.isExpanded = v;\n      B.treeInstance = this;\n      this.itemMapping[w - 1] = {\n        element: E,\n        item: B\n      };\n      this.itemMapping[\"id\" + E.id] = this.itemMapping[w - 1];\n      var h = false;\n      var D = false;\n      h = false;\n\n      if (this.rtl) {\n        a(B.element).css(\"float\", \"right\");\n        a(B.element).css(\"clear\", \"both\");\n      }\n\n      if (!h || !D) {\n        if (a(E.firstChild).length > 0) {\n          var s = 16;\n\n          if (B.icon) {\n            s = B.iconsize;\n\n            if (!s) {\n              s = 16;\n            }\n\n            var C = a('<img width=\"' + s + '\" height=\"' + s + '\" style=\"float: left;\" class=\"itemicon\" src=\"' + B.icon + '\"/>');\n            a(E).prepend(C);\n            C.css(\"margin-right\", \"6px\");\n\n            if (this.rtl) {\n              C.css(\"margin-right\", \"0px\");\n              C.css(\"margin-left\", \"6px\");\n              C.css(\"float\", \"right\");\n            }\n          }\n\n          var b = E.innerHTML.indexOf(\"<ul\");\n\n          if (b == -1) {\n            b = E.innerHTML.indexOf(\"<UL\");\n          }\n\n          if (b == -1) {\n            B.originalTitle = E.innerHTML;\n            E.innerHTML = '<div style=\"display: inline-block;\">' + E.innerHTML + \"</div>\";\n            B.titleElement = a(a(E)[0].firstChild);\n          } else {\n            var A = E.innerHTML.substring(0, b);\n            A = a.trim(A);\n            B.originalTitle = A;\n            A = a('<div style=\"display: inline-block;\">' + A + \"</div>\");\n            var n = a(E).find(\"ul:first\");\n            n.remove();\n            E.innerHTML = \"\";\n            a(E).prepend(A);\n            a(E).append(n);\n            B.titleElement = A;\n\n            if (this.rtl) {\n              A.css(\"float\", \"right\");\n              n.css(\"padding-right\", \"10px\");\n            }\n          }\n\n          if (s !== 16) {\n            a(B.titleElement).css(\"line-height\", s + \"px\");\n          }\n\n          if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n            a(a(E)[0].firstChild).css(\"display\", \"inline-block\");\n            var m = false;\n\n            if (this._measureItem.parents().length == 0) {\n              a(document.body).append(this._measureItem);\n              m = true;\n            }\n\n            this._measureItem.css(\"min-width\", \"20px\");\n\n            this._measureItem[0].innerHTML = a(B.titleElement).text();\n\n            var t = this._measureItem.width();\n\n            if (B.icon) {\n              t += 20;\n            }\n\n            if (a(a(B.titleElement).find(\"img\")).length > 0) {\n              t += 20;\n            }\n\n            a(a(E)[0].firstChild).css(\"max-width\", t + \"px\");\n\n            if (m) {\n              this._measureItem.remove();\n            }\n          }\n        } else {\n          B.originalTitle = \"Item\";\n          a(E).append(a(\"<span>Item</span>\"));\n          a(E.firstChild).wrap(\"<span/>\");\n          B.titleElement = a(E)[0].firstChild;\n\n          if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n            a(E.firstChild).css(\"display\", \"inline-block\");\n          }\n        }\n      }\n\n      var y = a(B.titleElement);\n      var p = this.toThemeProperty(\"jqx-rc-all\");\n\n      if (this.allowDrag) {\n        y.addClass(\"draggable\");\n      }\n\n      if (j == null || j == undefined) {\n        j = B.titleElement;\n        B.label = a.trim(y.text());\n      } else {\n        B.label = j;\n      }\n\n      a(E).addClass(this.toThemeProperty(\"jqx-tree-item-li\"));\n\n      if (this.rtl) {\n        a(E).addClass(this.toThemeProperty(\"jqx-tree-item-li-rtl\"));\n      }\n\n      p += \" \" + this.toThemeProperty(\"jqx-tree-item\") + \" \" + this.toThemeProperty(\"jqx-item\");\n\n      if (this.rtl) {\n        p += \" \" + this.toThemeProperty(\"jqx-tree-item-rtl\");\n      }\n\n      y[0].className = y[0].className + \" \" + p;\n      B.level = a(c).parents(\"li\").length;\n      B.hasItems = a(c).find(\"li\").length > 0;\n\n      if (this.rtl && B.parentElement) {\n        if (!this.checkboxes) {}\n      }\n\n      if (this.checkboxes) {\n        if (this.host.jqxCheckBox) {\n          var o = a('<div style=\"overflow: visible; position: absolute; width: 18px; height: 18px;\" tabIndex=0 class=\"chkbox\"/>');\n          o.width(parseInt(this.checkSize));\n          o.height(parseInt(this.checkSize));\n          a(E).prepend(o);\n\n          if (this.rtl) {\n            o.css(\"float\", \"right\");\n            o.css(\"position\", \"static\");\n          }\n\n          o.jqxCheckBox({\n            hasInput: false,\n            checked: B.checked,\n            boxSize: this.checkSize,\n            animationShowDelay: 0,\n            animationHideDelay: 0,\n            disabled: d,\n            theme: this.theme\n          });\n\n          if (!this.rtl) {\n            y.css(\"margin-left\", parseInt(this.checkSize) + 8);\n          } else {\n            var x = 5;\n\n            if (B.parentElement) {\n              o.css(\"margin-right\", x + 5 + \"px\");\n            } else {\n              o.css(\"margin-right\", x + \"px\");\n            }\n          }\n\n          B.checkBoxElement = o[0];\n          o[0].treeItem = B;\n          var f = y.outerHeight() / 2 - 1 - parseInt(this.checkSize) / 2;\n          o.css(\"margin-top\", f);\n\n          if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n            y.css(\"width\", \"1%\");\n            y.css(\"margin-left\", parseInt(this.checkSize) + 25);\n          } else {\n            if (B.hasItems) {\n              if (!this.rtl) {\n                o.css(\"margin-left\", this.toggleIndicatorSize);\n              }\n            }\n          }\n        } else {\n          throw new Error(\"jqxTree: Missing reference to jqxcheckbox.js.\");\n          return;\n        }\n      } else {\n        if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n          y.css(\"width\", \"1%\");\n        }\n      }\n\n      if (d) {\n        this.disableItem(B.element);\n      }\n\n      if (r) {\n        this.selectItem(B.element);\n      }\n\n      if (a.jqx.browser.msie && a.jqx.browser.version < 8) {\n        a(E).css(\"margin\", \"0px\");\n        a(E).css(\"padding\", \"0px\");\n      }\n    },\n    destroy: function () {\n      this.removeHandler(a(window), \"resize.jqxtree\" + this.element.id);\n      this.host.removeClass();\n\n      if (this.isTouchDevice()) {\n        this.removeHandler(this.panel, a.jqx.mobile.getTouchEventName(\"touchend\") + \".touchScroll touchcancel.touchScroll\");\n        this.removeHandler(this.panel, a.jqx.mobile.getTouchEventName(\"touchmove\") + \".touchScroll\");\n        this.removeHandler(this.panel, a.jqx.mobile.getTouchEventName(\"touchstart\") + \".touchScroll\");\n      }\n\n      var c = this;\n      var b = this.isTouchDevice();\n      a.each(this.items, function () {\n        var h = this;\n        var f = a(this.element);\n        var d = !b ? \"click\" : a.jqx.mobile.getTouchEventName(\"touchend\");\n        c.removeHandler(a(h.checkBoxElement), d);\n        var i = a(h.titleElement);\n        c.removeHandler(f);\n        var g = c.allowDrag && c._enableDragDrop;\n\n        if (!g) {\n          c.removeHandler(i);\n        } else {\n          c.removeHandler(i, \"mousedown.item\");\n          c.removeHandler(i, \"click\");\n          c.removeHandler(i, \"dblclick\");\n          c.removeHandler(i, \"mouseenter\");\n          c.removeHandler(i, \"mouseleave\");\n        }\n\n        var e = a(h.arrow);\n\n        if (e.length > 0) {\n          c.removeHandler(e, d);\n          c.removeHandler(e, \"selectstart\");\n          c.removeHandler(e, \"mouseup\");\n\n          if (!b) {\n            c.removeHandler(e, \"mouseenter\");\n            c.removeHandler(e, \"mouseleave\");\n          }\n\n          c.removeHandler(i, \"selectstart\");\n        }\n\n        if (a.jqx.browser.opera) {\n          c.removeHandler(i, \"mousedown.item\");\n        }\n\n        if (c.toggleMode != \"click\") {\n          c.removeHandler(i, \"click\");\n        }\n\n        c.removeHandler(i, c.toggleMode);\n      });\n\n      if (this.panel) {\n        this.panel.jqxPanel(\"destroy\");\n        this.panel = null;\n      }\n\n      this.host.remove();\n    },\n    _raiseEvent: function (g, c) {\n      if (c == undefined) {\n        c = {\n          owner: null\n        };\n      }\n\n      var d = this.events[g];\n      var e = c;\n      e.owner = this;\n      var f = new a.Event(d);\n      f.owner = this;\n      f.args = e;\n      var b = this.host.trigger(f);\n      return b;\n    },\n    propertyChangedHandler: function (d, k, b, i) {\n      if (this.isInitialized == undefined || this.isInitialized == false) {\n        return;\n      }\n\n      if (k == \"submitCheckedItems\") {\n        d._updateInputSelection();\n      }\n\n      if (k == \"disabled\") {\n        d._updateDisabledState();\n      }\n\n      if (k == \"theme\") {\n        d._applyTheme(b, i);\n      }\n\n      if (k == \"keyboardNavigation\") {\n        d.enableKeyboardNavigation = i;\n      }\n\n      if (k == \"width\" || k == \"height\") {\n        d.refresh();\n\n        d._initialize();\n\n        d._calculateWidth();\n\n        if (d.host.jqxPanel) {\n          var j = \"fixed\";\n\n          if (this.height == null || this.height == \"auto\") {\n            j = \"verticalwrap\";\n          }\n\n          if (this.width == null || this.width == \"auto\") {\n            if (j == \"fixed\") {\n              j = \"horizontalwrap\";\n            } else {\n              j = \"wrap\";\n            }\n          }\n\n          d.panel.jqxPanel({\n            sizeMode: j\n          });\n        }\n      }\n\n      if (k == \"touchMode\") {\n        d._isTouchDevice = null;\n\n        if (i) {\n          d.enableHover = false;\n        }\n\n        d._render();\n      }\n\n      if (k == \"source\" || k == \"checkboxes\") {\n        if (this.source != null) {\n          var l = [];\n          a.each(d.items, function () {\n            if (this.isExpanded) {\n              l[l.length] = {\n                label: this.label,\n                level: this.level\n              };\n            }\n          });\n          var f = d.loadItems(d.source);\n\n          if (!d.host.jqxPanel) {\n            d.element.innerHTML = f;\n          } else {\n            d.panel.jqxPanel(\"setcontent\", f);\n          }\n\n          var e = d.disabled;\n          var g = d.host.find(\"ul:first\");\n\n          if (g.length > 0) {\n            d.createTree(g[0]);\n\n            d._render();\n          }\n\n          var h = d;\n          var c = h.animationShowDuration;\n          h.animationShowDuration = 0;\n          d.disabled = false;\n\n          if (l.length > 0) {\n            a.each(d.items, function () {\n              for (var n = 0; n < l.length; n++) {\n                if (l[n].label == this.label && l[n].level == this.level) {\n                  var o = h.getItem(this.element);\n\n                  h._expandItem(h, o);\n                }\n              }\n            });\n          }\n\n          d.disabled = e;\n          h.animationShowDuration = c;\n        }\n      }\n\n      if (k == \"hasThreeStates\") {\n        d._render();\n\n        d._updateCheckStates();\n      }\n\n      if (k == \"toggleIndicatorSize\") {\n        d._updateCheckLayout();\n\n        d._render();\n      }\n    }\n  });\n})(jqxBaseFramework);\n\n(function (a) {\n  a.jqx._jqxTree.jqxTreeItem = function (e, d, b) {\n    var c = {\n      label: null,\n      id: e,\n      parentId: d,\n      parentElement: null,\n      parentItem: null,\n      disabled: false,\n      selected: false,\n      locked: false,\n      checked: false,\n      level: 0,\n      isExpanded: false,\n      hasItems: false,\n      element: null,\n      subtreeElement: null,\n      checkBoxElement: null,\n      titleElement: null,\n      arrow: null,\n      prevItem: null,\n      nextItem: null\n    };\n    return c;\n  };\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}