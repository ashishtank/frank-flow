{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-smart-modal\";\nimport * as i2 from \"src/app/shared/services/frank-doc.service\";\nimport * as i3 from \"src/app/shared/services/flow-structure.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../shared/components/button/button.component\";\n\nfunction OptionsComponent_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const attributeOption_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", attributeOption_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", attributeOption_r5 == null ? null : attributeOption_r5.name, \" \");\n  }\n}\n\nfunction OptionsComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelement(1, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r2.selectedAttribute == null ? null : ctx_r2.selectedAttribute.description, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction OptionsComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"app-button\", 13);\n    i0.ɵɵlistener(\"click\", function OptionsComponent_div_18_Template_app_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.addAttribute();\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Add \", ctx_r3.selectedAttribute == null ? null : ctx_r3.selectedAttribute.name, \"\");\n  }\n}\n\nfunction OptionsComponent_ng_container_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"label\", 14);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function OptionsComponent_ng_container_19_div_1_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const attribute_r8 = i0.ɵɵnextContext().$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.attributes[attribute_r8.key].value = $event;\n    })(\"ngModelChange\", function OptionsComponent_ng_container_19_div_1_Template_input_ngModelChange_3_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const attribute_r8 = i0.ɵɵnextContext().$implicit;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.changeAttribute(attribute_r8.key, attribute_r8);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const attribute_r8 = i0.ɵɵnextContext().$implicit;\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", attribute_r8.key, \":\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r10.attributes[attribute_r8.key].value);\n  }\n}\n\nfunction OptionsComponent_ng_container_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, OptionsComponent_ng_container_19_div_1_Template, 4, 2, \"div\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const attribute_r8 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.disabledAttributes.includes(attribute_r8.key));\n  }\n}\n\nexport let OptionsComponent = /*#__PURE__*/(() => {\n  class OptionsComponent {\n    constructor(ngxSmartModalService, frankDocService, flowStructureService) {\n      this.ngxSmartModalService = ngxSmartModalService;\n      this.frankDocService = frankDocService;\n      this.flowStructureService = flowStructureService;\n      this.attributeOptions = [];\n      this.disabledAttributes = ['line', 'startColumn', 'endColumn', 'x', 'y'];\n      this.getFrankDoc();\n    }\n\n    getFrankDoc() {\n      this.frankDocService.getFrankDoc().subscribe(frankDoc => this.frankDoc = frankDoc);\n    }\n\n    onDataAdded() {\n      this.node = this.ngxSmartModalService.getModalData('optionsModal');\n      this.getAttributesForNode();\n    }\n\n    getAttributesForNode() {\n      var _a, _b, _c, _d;\n\n      const attributes = (_a = this.node) === null || _a === void 0 ? void 0 : _a.getAttributes();\n      this.nodeName = (_b = this.node) === null || _b === void 0 ? void 0 : _b.getName();\n\n      if (attributes) {\n        this.attributes = attributes;\n      }\n\n      const nodeType = (_c = this.node) === null || _c === void 0 ? void 0 : _c.getType();\n\n      if (nodeType && this.frankDoc) {\n        const element = this.frankDoc.elements.find( // TODO: + Pipe might not be needed with the frankDoc.\n        node => node.name === nodeType || node.name + 'Pipe' === nodeType);\n        this.nodeDescription = element === null || element === void 0 ? void 0 : element.descriptionHeader;\n        this.attributeOptions = [];\n        (_d = element === null || element === void 0 ? void 0 : element.attributes) === null || _d === void 0 ? void 0 : _d.forEach(attribute => {\n          this.attributeOptions.push(attribute);\n        });\n      }\n    }\n\n    getUpdatedAttributes() {\n      var _a;\n\n      const nodeType = (_a = this.node) === null || _a === void 0 ? void 0 : _a.getType();\n      const nodeName = this.nodeName;\n      const structure = this.flowStructureService.getStructure();\n\n      if ((nodeType === null || nodeType === void 0 ? void 0 : nodeType.match(/Pipe/)) && nodeName) {\n        return structure.pipes.find(pipe => pipe.name === nodeName);\n      } else {\n        return null;\n      }\n    }\n\n    addAttribute() {\n      this.flowStructureService.createAttribute(this.selectedAttribute.name, this.newAttributeValue, this.attributes, false);\n    }\n\n    changeAttribute(key, attribute) {\n      this.flowStructureService.refreshStructure();\n      setTimeout(() => {\n        const attributeList = this.getUpdatedAttributes();\n\n        if (attributeList) {\n          if (key === 'name') {\n            this.nodeName = attribute.value.value;\n          }\n\n          this.flowStructureService.editAttribute(key, attribute.value.value, attributeList.attributes);\n        }\n      });\n    }\n\n    debounce(func, wait) {\n      let timeout;\n      return () => {\n        if (timeout) {\n          clearTimeout(timeout);\n        }\n\n        timeout = setTimeout(() => func.apply(this, arguments), wait);\n      };\n    }\n\n    customTrackBy(index, obj) {\n      return index;\n    }\n\n  }\n\n  OptionsComponent.ɵfac = function OptionsComponent_Factory(t) {\n    return new (t || OptionsComponent)(i0.ɵɵdirectiveInject(i1.NgxSmartModalService), i0.ɵɵdirectiveInject(i2.FrankDocService), i0.ɵɵdirectiveInject(i3.FlowStructureService));\n  };\n\n  OptionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OptionsComponent,\n    selectors: [[\"app-options\"]],\n    decls: 21,\n    vars: 12,\n    consts: [[\"customClass\", \"nsm-centered\", \"identifier\", \"optionsModal\", 1, \"optionsModal\", 3, \"onDataAdded\"], [\"optionsModal\", \"\"], [1, \"input-row\"], [3, \"ngModel\", \"ngModelChange\"], [\"selected\", \"\", \"disabled\", \"\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"newAttribute\", \"type\", \"text\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [\"class\", \"input-row input-description\", 4, \"ngIf\"], [\"class\", \"input-row\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngValue\"], [1, \"input-row\", \"input-description\"], [3, \"innerHTML\"], [3, \"click\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function OptionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ngx-smart-modal\", 0, 1);\n        i0.ɵɵlistener(\"onDataAdded\", function OptionsComponent_Template_ngx_smart_modal_onDataAdded_0_listener() {\n          return ctx.onDataAdded();\n        });\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵelementStart(3, \"h1\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"h2\");\n        i0.ɵɵtext(8, \"Attributes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵtext(10, \"Add a new attribute\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 2);\n        i0.ɵɵelementStart(12, \"select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function OptionsComponent_Template_select_ngModelChange_12_listener($event) {\n          return ctx.selectedAttribute = $event;\n        });\n        i0.ɵɵelementStart(13, \"option\", 4);\n        i0.ɵɵtext(14, \"Choose an attribute\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, OptionsComponent_option_15_Template, 2, 2, \"option\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function OptionsComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.newAttributeValue = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, OptionsComponent_div_17_Template, 2, 1, \"div\", 7);\n        i0.ɵɵtemplate(18, OptionsComponent_div_18_Template, 3, 1, \"div\", 8);\n        i0.ɵɵtemplate(19, OptionsComponent_ng_container_19_Template, 2, 1, \"ng-container\", 9);\n        i0.ɵɵpipe(20, \"keyvalue\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.node == null ? null : ctx.node.getName());\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.nodeDescription);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedAttribute);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.attributeOptions);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.newAttributeValue)(\"placeholder\", ctx.selectedAttribute == null ? null : ctx.selectedAttribute.default);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedAttribute);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.newAttributeValue);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(20, 10, ctx.attributes))(\"ngForTrackBy\", ctx.customTrackBy);\n      }\n    },\n    directives: [i1.NgxSmartModalComponent, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i5.NgForOf, i4.DefaultValueAccessor, i5.NgIf, i6.ButtonComponent],\n    pipes: [i5.KeyValuePipe],\n    styles: [\".optionsModal[_ngcontent-%COMP%]     .nsm-content{width:30vw}\"]\n  });\n  return OptionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}