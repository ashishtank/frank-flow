{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../settings/settings.service\";\nimport * as i2 from \"../../shared/services/code.service\";\nimport * as i3 from \"jqwidgets-ng/jqxdropdownbutton\";\nimport * as i4 from \"../../shared/components/file-tree/file-tree.component\";\nimport * as i5 from \"@angular/common\";\nconst _c0 = [\"treeReference\"];\nconst _c1 = [\"dropDownButtonReference\"];\n\nconst _c2 = function (a0, a1) {\n  return {\n    light: a0,\n    dark: a1\n  };\n};\n\nexport let SelectorComponent = /*#__PURE__*/(() => {\n  class SelectorComponent {\n    constructor(settingsService, codeService) {\n      this.settingsService = settingsService;\n      this.codeService = codeService;\n      this.fileMatch = /^.+\\.xml$/g;\n    }\n\n    ngAfterViewInit() {\n      this.getSettings();\n      this.getCurrentFile();\n    }\n\n    getSettings() {\n      setTimeout(() => {\n        this.settingsService.getSettings().subscribe(settings => this.settings = settings);\n      });\n    }\n\n    getCurrentFile() {\n      this.codeService.curFileObservable.subscribe({\n        next: currentFile => {\n          this.currentFile = currentFile;\n\n          if (currentFile.path) {\n            this.setDropDownLabel(currentFile.configuration + ': ' + currentFile.path);\n          }\n        }\n      });\n    }\n\n    setDropDownLabel(label) {\n      const dropDownContent = '<div style=\"position: relative; margin-left: 5px; line-height: 32px\">' + label + '</div>';\n      this.dropDownButton.setContent(dropDownContent);\n    }\n\n  }\n\n  SelectorComponent.ɵfac = function SelectorComponent_Factory(t) {\n    return new (t || SelectorComponent)(i0.ɵɵdirectiveInject(i1.SettingsService), i0.ɵɵdirectiveInject(i2.CodeService));\n  };\n\n  SelectorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SelectorComponent,\n    selectors: [[\"app-selector\"]],\n    viewQuery: function SelectorComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tree = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropDownButton = _t.first);\n      }\n    },\n    decls: 3,\n    vars: 9,\n    consts: [[3, \"height\", \"width\"], [\"dropDownButtonReference\", \"\"], [1, \"root\", 3, \"fileMatch\", \"height\", \"ngClass\", \"width\"]],\n    template: function SelectorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"jqxDropDownButton\", 0, 1);\n        i0.ɵɵelement(2, \"app-file-tree\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n\n        i0.ɵɵproperty(\"height\", 32)(\"width\", \"100%\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"fileMatch\", ctx.fileMatch)(\"height\", 512)(\"ngClass\", i0.ɵɵpureFunction2(6, _c2, !(ctx.settings == null ? null : ctx.settings.darkMode), ctx.settings == null ? null : ctx.settings.darkMode))(\"width\", _r0.elementRef == null ? null : _r0.elementRef.nativeElement.offsetWidth);\n      }\n    },\n    directives: [i3.jqxDropDownButtonComponent, i4.FileTreeComponent, i5.NgClass],\n    styles: [\"jqxDropDownButton[_ngcontent-%COMP%]{width:100%}\"]\n  });\n  return SelectorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}