{"ast":null,"code":"import { ModeType } from './header/modes/modeType.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./header/modes/mode.service\";\nimport * as i2 from \"./header/settings/settings.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./header/header.component\";\nimport * as i5 from \"./editor/editor.component\";\nimport * as i6 from \"./flow/flow.component\";\n\nfunction AppComponent_app_flow_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-flow\");\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"shareSpace\", ctx_r0.mode.is(ctx_r0.modeType.hybridMode))(\"useAllSpace\", ctx_r0.mode.is(ctx_r0.modeType.flowMode));\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    light: a0,\n    dark: a1\n  };\n};\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(modeService, settingsService) {\n      this.modeService = modeService;\n      this.settingsService = settingsService;\n      this.modeType = ModeType;\n    }\n\n    ngOnInit() {\n      this.getMode();\n      this.getSettings();\n    }\n\n    getMode() {\n      this.modeService.getMode().subscribe(mode => this.mode = mode);\n    }\n\n    getSettings() {\n      this.settingsService.getSettings().subscribe(settings => this.settings = settings);\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ModeService), i0.ɵɵdirectiveInject(i2.SettingsService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 5,\n    vars: 10,\n    consts: [[1, \"root\", 3, \"ngClass\"], [1, \"main-container\"], [3, \"hidden\"], [3, \"shareSpace\", \"useAllSpace\", 4, \"ngIf\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"app-header\");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelement(3, \"app-editor\", 2);\n        i0.ɵɵtemplate(4, AppComponent_app_flow_4_Template, 1, 4, \"app-flow\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(7, _c0, !ctx.settings.darkMode, ctx.settings.darkMode));\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassProp(\"shareSpace\", ctx.mode.is(ctx.modeType.hybridMode))(\"useAllSpace\", ctx.mode.is(ctx.modeType.editorMode));\n        i0.ɵɵproperty(\"hidden\", ctx.mode.is(ctx.modeType.flowMode));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.mode.is(ctx.modeType.flowMode) || ctx.mode.is(ctx.modeType.hybridMode));\n      }\n    },\n    directives: [i3.NgClass, i4.HeaderComponent, i5.EditorComponent, i3.NgIf, i6.FlowComponent],\n    styles: [\".root[_ngcontent-%COMP%]{height:100%;width:100%}.root[_ngcontent-%COMP%]   .main-container[_ngcontent-%COMP%]{height:calc(100% - 64px);display:flex}.root[_ngcontent-%COMP%]   .main-container[_ngcontent-%COMP%]   .useAllSpace[_ngcontent-%COMP%]{width:100%}.root[_ngcontent-%COMP%]   .main-container[_ngcontent-%COMP%]   .shareSpace[_ngcontent-%COMP%]{width:50%}[hidden][_ngcontent-%COMP%]{display:none!important}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}