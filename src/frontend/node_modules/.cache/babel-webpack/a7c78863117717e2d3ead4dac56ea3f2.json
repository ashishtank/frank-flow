{"ast":null,"code":"import { NodeComponent } from '../node.component';\nexport class Node {\n  constructor(id, name, type, top, left, attributes) {\n    this.classes = '';\n    this.id = id;\n    this.name = name;\n    this.type = type;\n    this.top = top;\n    this.left = left;\n    this.attributes = attributes;\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  getType() {\n    return this.type;\n  }\n\n  getTop() {\n    return this.top;\n  }\n\n  getLeft() {\n    return this.left;\n  }\n\n  getAttributes() {\n    return this.attributes;\n  }\n\n  setTop(top) {\n    this.top = top;\n  }\n\n  setLeft(left) {\n    this.left = left;\n  }\n\n  generateNode(rootViewContainer, factoryResolver, jsPlumb, generating) {\n    jsPlumb.ready(() => {\n      const factory = factoryResolver.resolveComponentFactory(NodeComponent);\n      const component = factory.create(rootViewContainer.injector);\n      component.instance.node = this;\n      component.instance.jsPlumbInstance = jsPlumb;\n      component.instance.generating = generating;\n      const style = `left: ${this.getLeft()}px; top: ${this.getTop()}px;`;\n      component.instance.cssClass = this.classes;\n      component.instance.style = style;\n      component.location.nativeElement.id = this.getId();\n      rootViewContainer.insert(component.hostView);\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}