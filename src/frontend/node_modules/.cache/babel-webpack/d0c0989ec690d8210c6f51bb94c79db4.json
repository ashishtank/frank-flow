{"ast":null,"code":"import { ModeType } from '../modes/modeType.enum';\nimport { SwitchWithoutSavingOption } from './options/switch-without-saving-option';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./settings.service\";\nimport * as i2 from \"ngx-smart-modal\";\nimport * as i3 from \"../../shared/components/toggle/toggle.component\";\nimport * as i4 from \"@angular/forms\";\nexport let SettingsComponent = /*#__PURE__*/(() => {\n  class SettingsComponent {\n    constructor(settingsService) {\n      this.settingsService = settingsService;\n      this.modeType = ModeType;\n      this.switchWithoutSavingOptions = SwitchWithoutSavingOption;\n    }\n\n    ngOnInit() {\n      this.getSettings();\n    }\n\n    getSettings() {\n      this.settingsService.getSettings().subscribe(settings => this.settings = settings);\n    }\n\n    setSettings() {\n      this.settingsService.setSettings(this.settings);\n    }\n\n  }\n\n  SettingsComponent.ɵfac = function SettingsComponent_Factory(t) {\n    return new (t || SettingsComponent)(i0.ɵɵdirectiveInject(i1.SettingsService));\n  };\n\n  SettingsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SettingsComponent,\n    selectors: [[\"app-settings\"]],\n    decls: 33,\n    vars: 10,\n    consts: [[\"customClass\", \"nsm-centered\", \"identifier\", \"settingsModal\", 1, \"settingsModal\"], [\"settingsModal\", \"\"], [1, \"settings-container\"], [1, \"input-row\"], [3, \"state\", \"stateChange\"], [\"for\", \"switch-without-saving-options\"], [\"id\", \"switch-without-saving-options\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\"], [\"for\", \"edit-mode\"], [\"id\", \"edit-mode\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function SettingsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ngx-smart-modal\", 0, 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"h1\");\n        i0.ɵɵtext(4, \"Settings\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelementStart(6, \"label\");\n        i0.ɵɵtext(7, \"Enable dark mode\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"app-toggle\", 4);\n        i0.ɵɵlistener(\"stateChange\", function SettingsComponent_Template_app_toggle_stateChange_8_listener() {\n          return ctx.setSettings();\n        })(\"stateChange\", function SettingsComponent_Template_app_toggle_stateChange_8_listener($event) {\n          return ctx.settings.darkMode = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 3);\n        i0.ɵɵelementStart(10, \"label\");\n        i0.ɵɵtext(11, \"Show confirmation popups\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"app-toggle\", 4);\n        i0.ɵɵlistener(\"stateChange\", function SettingsComponent_Template_app_toggle_stateChange_12_listener() {\n          return ctx.setSettings();\n        })(\"stateChange\", function SettingsComponent_Template_app_toggle_stateChange_12_listener($event) {\n          return ctx.settings.showPopups = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 3);\n        i0.ɵɵelementStart(14, \"label\", 5);\n        i0.ɵɵtext(15, \"What do you want to do with the current file when switching files?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"select\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function SettingsComponent_Template_select_ngModelChange_16_listener() {\n          return ctx.setSettings();\n        })(\"ngModelChange\", function SettingsComponent_Template_select_ngModelChange_16_listener($event) {\n          return ctx.settings.switchWithoutSaving = $event;\n        });\n        i0.ɵɵelementStart(17, \"option\", 7);\n        i0.ɵɵtext(18, \"Ask me\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"option\", 7);\n        i0.ɵɵtext(20, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"option\", 7);\n        i0.ɵɵtext(22, \"Discard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 3);\n        i0.ɵɵelementStart(24, \"label\", 8);\n        i0.ɵɵtext(25, \"Default edit mode\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"select\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function SettingsComponent_Template_select_ngModelChange_26_listener() {\n          return ctx.setSettings();\n        })(\"ngModelChange\", function SettingsComponent_Template_select_ngModelChange_26_listener($event) {\n          return ctx.settings.defaultMode = $event;\n        });\n        i0.ɵɵelementStart(27, \"option\", 7);\n        i0.ɵɵtext(28, \"Flow\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"option\", 7);\n        i0.ɵɵtext(30, \"Hybrid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"option\", 7);\n        i0.ɵɵtext(32, \"Editor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"state\", ctx.settings.darkMode);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"state\", ctx.settings.showPopups);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.settings.switchWithoutSaving);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.switchWithoutSavingOptions.ask);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.switchWithoutSavingOptions.save);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.switchWithoutSavingOptions.discard);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.settings.defaultMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.modeType.flowMode);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.modeType.hybridMode);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.modeType.editorMode);\n      }\n    },\n    directives: [i2.NgxSmartModalComponent, i3.ToggleComponent, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel, i4.NgSelectOption, i4.ɵNgSelectMultipleOption],\n    styles: [\".settingsModal[_ngcontent-%COMP%]     .nsm-content{width:30vw}\"]\n  });\n  return SettingsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}