{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../shared/services/frank-doc.service\";\nexport let PaletteService = /*#__PURE__*/(() => {\n  class PaletteService {\n    constructor(frankDocService) {\n      this.frankDocService = frankDocService;\n      this.data = new Map();\n      this.getData();\n    }\n\n    getData() {\n      this.frankDocService.getFrankDoc().subscribe({\n        next: data => this.sortData(data)\n      });\n    }\n\n    sortData(data) {\n      if (data.groups) {\n        data.groups.forEach(group => {\n          const elementTypes = this.getElementTypesInGroup(group, data);\n          const elements = this.getElementsForTypes(elementTypes, data);\n          this.data.set(group.name, elements);\n        });\n      }\n    }\n\n    getElementTypesInGroup(group, data) {\n      return group.types.map(groupType => data.types.find(type => type.name === groupType).members.map(name => ({\n        name,\n        type: groupType,\n        group: group.name\n      }))).flat(1);\n    }\n\n    getElementsForTypes(types, data) {\n      return types.map(type => ({\n        name: data.elements.find(element => element.fullName === type.name).name,\n        type\n      }));\n    }\n\n  }\n\n  PaletteService.ɵfac = function PaletteService_Factory(t) {\n    return new (t || PaletteService)(i0.ɵɵinject(i1.FrankDocService));\n  };\n\n  PaletteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PaletteService,\n    factory: PaletteService.ɵfac,\n    providedIn: 'root'\n  });\n  return PaletteService;\n})();","map":null,"metadata":{},"sourceType":"module"}