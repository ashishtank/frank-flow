{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { DefaultSettings } from './options/default-settings.model';\nimport * as i0 from \"@angular/core\";\nexport let SettingsService = /*#__PURE__*/(() => {\n  class SettingsService {\n    constructor() {\n      this.defaultSettings = new DefaultSettings();\n      const localStorageSettings = this.getSettingsLocalStorage();\n      const localStorageSettingsWithDefaults = this.addDefaultSettings(localStorageSettings);\n      this.settings = new BehaviorSubject(localStorageSettingsWithDefaults);\n    }\n\n    setSettings(settings) {\n      this.settings.next(settings);\n      localStorage.setItem('settings', JSON.stringify(settings));\n    }\n\n    getSettings() {\n      return this.settings.asObservable();\n    }\n\n    getSettingsLocalStorage() {\n      const settings = localStorage.getItem('settings');\n      return settings ? JSON.parse(settings) : this.defaultSettings;\n    }\n\n    addDefaultSettings(settings) {\n      for (const key in this.defaultSettings) {\n        if (settings[key] === undefined) {\n          settings = Object.assign(Object.assign({}, settings), {\n            [key]: this.defaultSettings[key]\n          });\n        }\n      }\n\n      return settings;\n    }\n\n  }\n\n  SettingsService.ɵfac = function SettingsService_Factory(t) {\n    return new (t || SettingsService)();\n  };\n\n  SettingsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SettingsService,\n    factory: SettingsService.ɵfac,\n    providedIn: 'root'\n  });\n  return SettingsService;\n})();","map":null,"metadata":{},"sourceType":"module"}