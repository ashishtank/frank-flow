{"ast":null,"code":"import { jsPlumb } from 'jsplumb';\nimport * as i0 from \"@angular/core\";\nexport let NodeService = /*#__PURE__*/(() => {\n  class NodeService {\n    constructor(factoryResolver) {\n      this.factoryResolver = factoryResolver;\n      this.generating = false;\n      this.jsPlumbInstance = jsPlumb.getInstance({\n        Container: 'canvas'\n      });\n    }\n\n    getInstance() {\n      return this.jsPlumbInstance;\n    }\n\n    setRootViewContainerRef(viewContainerRef) {\n      this.rootViewContainer = viewContainerRef;\n      this.jsPlumbInstance.ready(() => {\n        this.jsPlumbInstance.setContainer('canvas');\n      });\n    }\n\n    addDynamicNode(node) {\n      node.generateNode(this.rootViewContainer, this.factoryResolver, this.jsPlumbInstance, this.generating);\n    }\n\n    addConnection(connection) {\n      if (!this.generating) {\n        this.jsPlumbInstance.ready(() => {\n          this.jsPlumbInstance.connect({\n            uuids: connection.uuids\n          });\n        });\n      }\n    }\n\n    clear() {\n      this.rootViewContainer.clear();\n    }\n\n  }\n\n  NodeService.ɵfac = function NodeService_Factory(t) {\n    return new (t || NodeService)(i0.ɵɵinject(i0.ComponentFactoryResolver));\n  };\n\n  NodeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NodeService,\n    factory: NodeService.ɵfac,\n    providedIn: 'root'\n  });\n  return NodeService;\n})();","map":null,"metadata":{},"sourceType":"module"}