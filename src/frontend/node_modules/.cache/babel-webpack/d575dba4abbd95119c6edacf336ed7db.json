{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport let SearchComponent = /*#__PURE__*/(() => {\n  class SearchComponent {\n    constructor() {\n      this.termChange = new EventEmitter();\n    }\n\n    changeState() {\n      this.termChange.emit(this.term);\n    }\n\n  }\n\n  SearchComponent.ɵfac = function SearchComponent_Factory(t) {\n    return new (t || SearchComponent)();\n  };\n\n  SearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchComponent,\n    selectors: [[\"app-search\"]],\n    inputs: {\n      term: \"term\"\n    },\n    outputs: {\n      termChange: \"termChange\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"search-box\"], [\"placeholder\", \"Search\", \"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function SearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_1_listener() {\n          return ctx.changeState();\n        })(\"ngModelChange\", function SearchComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.term = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.term);\n      }\n    },\n    directives: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n    styles: [\".search-box[_ngcontent-%COMP%]{background-color:var(--bg-color);color:var(--text-color);padding:16px;border-top:2px solid var(--primary);border-bottom:2px solid var(--border-color)}\"]\n  });\n  return SearchComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}