[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "app/.external-ecmascript.js",
    "static": true,
    "longname": "app/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "app/Controller/CodeController.js",
    "content": "import CodeView from '../View/codeView/CodeView.js';\r\nimport FileTreeView from '../View/codeView/FileTreeView.js';\r\nimport FileService from '../services/FileService.js';\r\nimport XsdModel from '../Model/XsdModel';\r\nimport * as beautify from 'vkbeautify';\r\nimport XsdService from '../services/XsdService.js';\r\nimport IbisdocService from '../services/IbisdocService.js';\r\nimport FileModel from '../Model/FileModel.js';\r\n\r\nexport default class CodeController {\r\n\r\n  constructor(mainController, ibisdocModel) {\r\n    this.mainController = mainController;\r\n\r\n    this.xsdModel = new XsdModel();\r\n    this.ibisdocModel = ibisdocModel;\r\n    this.fileModel = new FileModel();\r\n\r\n    this.codeView = new CodeView(this.xsdModel);\r\n    this.fileModel.addListener(this)\r\n    this.codeView.addListener(this);\r\n\r\n    this.fileService = new FileService(this);\r\n    this.xsdService = new XsdService(this.xsdModel);\r\n    this.ibisdocService = new IbisdocService(this.ibisdocModel, this.codeView);\r\n\r\n    this.fileService.getConfigurations();\r\n    this.xsdService.getXsd();\r\n    this.ibisdocService.getIbisdoc();\r\n\r\n    this.codeView.makeEditor();\r\n    this.editor = this.codeView.editor;\r\n\r\n    this.fileTreeView = new FileTreeView(this.editor, this.fileService);\r\n    this.initListeners();\r\n  }\r\n\r\n\r\n  //_______________Event handlers_______________\r\n\r\n  initListeners() {\r\n    let cur = this;\r\n\r\n    $.contextMenu({\r\n      selector: '.folder',\r\n      zIndex: 3001,\r\n      callback: function (key, options) {\r\n        var m = \"clicked: \" + key;\r\n        window.console && console.log(m) || alert(m);\r\n        return true;\r\n      },\r\n      items: {\r\n        \"addFile\": {\r\n          name: \"Add file\", icon: \"fas fa-file\",\r\n          callback: function () {\r\n            let path = $(this).attr('data-name');\r\n            console.log('add path: ', path)\r\n            cur.fileTreeView.addFile(path);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    $.contextMenu({\r\n      selector: '.file',\r\n      zIndex: 3001,\r\n      callback: function (key, options) {\r\n        var m = \"clicked: \" + key;\r\n        window.console && console.log(m) || alert(m);\r\n        return true;\r\n      },\r\n      items: {\r\n        \"rename\": {\r\n          name: \"Rename file\", icon: \"fas fa-file\",\r\n          callback: function () {\r\n            console.log($(this).attr('data-name'));\r\n            let path = $(this).attr('data-name');\r\n            let newPath = prompt(\"new name\");\r\n            cur.fileTreeView.renameFile(path, newPath);\r\n            return true;\r\n          }\r\n        },\r\n        \"delete\": {\r\n          name: \"Delete file\", icon: \"fas fa-trash\",\r\n          callback: function () {\r\n            let path = $(this).attr('data-name');\r\n            cur.fileTreeView.deleteFile(path);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    $('#adapterSelect').on('change', function (e) {\r\n      let adapterName = $('#adapterSelect').val();\r\n      localStorage.setItem('currentAdapter', adapterName)\r\n      cur.quickGenerate();\r\n\r\n    });\r\n\r\n    $('#fileReader').on('change', function (e) {\r\n      var input = event.target;\r\n      console.log(input, input.webkitEntries);\r\n      cur.fileTreeView.makeTree(input, cur.editor);\r\n      $('#adapterSelect').css('display', 'none');\r\n    });\r\n\r\n\r\n    $('#saveFile').on('click', function (e) {\r\n      cur.saveFile();\r\n    })\r\n\r\n    $('#beautify').click(function () {\r\n      let prettyXML = beautify.xml(cur.editor.getValue(), 4);\r\n      cur.editor.getModel().setValue(prettyXML);\r\n    });\r\n\r\n    $('#addFile').click(function () {\r\n      console.log('add a file!');\r\n      cur.fileTreeView.addFile(\"FrankConfiguration/\");\r\n    })\r\n\r\n\r\n    cur.editor.onMouseDown(function (e) {\r\n      e.target.range.startLineNumber = 1;\r\n      e.target.range.startColumn = 1;\r\n      let textPossition = cur.editor.getModel().getValueInRange(e.target.range);\r\n      let adapters = textPossition.match(/<Adapter[^]*?name=\".*?\">/g);\r\n      if (adapters != null) {\r\n        let adapterName = adapters[adapters.length - 1].match(/name=\"[^]*?\"/g)[0].match(/\"[^]*?\"/g)[0].replace(/\"/g, '');\r\n        if (localStorage.getItem(\"currentAdapter\") != adapterName) {\r\n          localStorage.setItem(\"currentAdapter\", adapterName);\r\n          cur.quickGenerate();\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n    this.editor.getModel().onDidChangeContent(cur.debounce(function () {\r\n      cur.quickGenerate()\r\n    }, 250))\r\n\r\n    $('#runXsd').click(function () {\r\n      let validate = cur.validateConfiguration(),\r\n        lineNumber = 0;\r\n      cur.undoDecorations();\r\n      if (validate.errors !== null) {\r\n        console.log(validate.errors);\r\n        validate.errors.forEach(function (item, index) {\r\n          lineNumber = item.match(/:.*?:/)[0].replace(/:/g, '');\r\n          cur.decorateLine(lineNumber);\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  //_______________Custom methods to be called from handlers_______________\r\n\r\n  quickGenerate() {\r\n    let cur = this;\r\n    if (!cur.mainController.flowController.flowView.moving && !cur.mainController.flowController.flowView.adding) {\r\n      try {\r\n        $('#canvas').css('display', 'block');\r\n        $('.customErrorMessage').remove();\r\n        cur.mainController.generateFlow();\r\n      } catch (error) {\r\n        console.log(\"error\", error);\r\n        cur.mainController.flowController.flowView.modifyFlow(\"error\", error);\r\n      }\r\n    }\r\n  }\r\n\r\n  debounce(func, wait, immediate) {\r\n    var timeout;\r\n    return function () {\r\n      var context = this,\r\n        args = arguments;\r\n      var later = function () {\r\n        timeout = null;\r\n        if (!immediate) func.apply(context, args);\r\n      };\r\n      var callNow = immediate && !timeout;\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(later, wait);\r\n      if (callNow) func.apply(context, args);\r\n    };\r\n  };\r\n\r\n  saveFile() {\r\n    let zip = this.fileTreeView.zip;\r\n    var FileSaver = require('file-saver');\r\n    zip.generateAsync({\r\n      type: \"blob\"\r\n    }).then(function (myzip) {\r\n      //FileSaver.saveAs(blob, \"FrankConfiguration\");\r\n      console.log(myzip);\r\n      var fileName = 'configuration.zip';\r\n\r\n      var fd = new FormData();\r\n      const finalurl = 'http://localhost/iaf/api/configurations';\r\n      fd.append(\"datasource\", 'jdbc/frank2manual');\r\n      fd.append(\"name\", \"PROJECTNAME\");\r\n      fd.append(\"version\", '5');\r\n      fd.append(\"encoding\", 'utf-8');\r\n      fd.append(\"multiple_configs\", false);\r\n      fd.append(\"activate_config\", true);\r\n      fd.append(\"automatic_reload\", true);\r\n      fd.append(\"file\", myzip, fileName);\r\n\r\n      fetch(finalurl, {\r\n        method: 'post',\r\n        body: fd,\r\n      }).then(res => {\r\n        console.log(res)\r\n        return res.text();\r\n      }).then(re => {\r\n        console.log(re)\r\n      })      \r\n      .catch(e => {\r\n        console.log(e)\r\n      })\r\n\r\n    })\r\n  }\r\n\r\n  //_______________Methods for modifying the editor_______________\r\n\r\n  setEditorValue(value) {\r\n    this.codeView.setEditorValue(value);\r\n  }\r\n\r\n  selectPipe(name) {\r\n    this.codeView.selectPipe(name);\r\n  }\r\n  getTypes() {\r\n    return this.codeView.getTypes();\r\n  }\r\n  validateConfiguration() {\r\n    return this.codeView.validateConfigurationView.validateConfiguration();\r\n  }\r\n  decorateLine(lineNumber) {\r\n    this.codeView.validateConfigurationView.decorateLine(lineNumber);\r\n  }\r\n  undoDecorations() {\r\n    this.codeView.validateConfigurationView.undoDecorations();\r\n  }\r\n  changeName(oldWord, newWord) {\r\n    this.codeView.changeName(oldWord, newWord);\r\n  }\r\n  changePipeType(name, type, oldType) {\r\n    this.codeView.changePipeType(name, type, oldType);\r\n  }\r\n  changePossition(name, newX, newY) {\r\n    this.codeView.changePossition(name, newX, newY);\r\n  }\r\n  changeExitPossition(name, newX, newY) {\r\n    this.codeView.changeExitPossition(name, newX, newY);\r\n  }\r\n  changeAddForward(name, path) {\r\n    this.codeView.changeAddForward(name, path);\r\n  }\r\n  deleteForward(name, path) {\r\n    this.codeView.deleteForward(name, path);\r\n  }\r\n  changeAddPipe(name, possitions, className) {\r\n    this.codeView.changeAddPipe(name, possitions, className);\r\n  }\r\n  getPipes() {\r\n    return this.codeView.ibisdocJson;\r\n  }\r\n  getAttributes(name) {\r\n    return this.codeView.getAttributes(name);\r\n  }\r\n  getParameters(name) {\r\n    return this.codeView.getParameters(name);\r\n  }\r\n  changeAttribute(pipeName, attribute, attributeValue) {\r\n    this.codeView.changeAttribute(pipeName, attribute, attributeValue);\r\n  }\r\n  addAttribute(pipeName, attribute) {\r\n    this.codeView.addAttribute(pipeName, attribute);\r\n  }\r\n  deleteAttribute(pipeName, attribute) {\r\n    this.codeView.deleteAttribute(pipeName, attribute);\r\n  }\r\n  addParameter(pipeName, paramName) {\r\n    this.codeView.addParameter(pipeName, paramName);\r\n  }\r\n  deleteParameter(pipeName, paramName) {\r\n    this.codeView.deleteParameter(pipeName, paramName);\r\n  }\r\n  addParameterAttribute(pipeName, paramName, attribute) {\r\n    this.codeView.addParameterAttribute(pipeName, paramName, attribute);\r\n  }\r\n  changeParameterAttribute(pipeName, paramName, attribute, value) {\r\n    this.codeView.changeParameterAttribute(pipeName, paramName, attribute, value);\r\n  }\r\n\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/Controller/CodeController.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "CodeController",
    "memberof": "app/Controller/CodeController.js",
    "static": true,
    "longname": "app/Controller/CodeController.js~CodeController",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/Controller/CodeController.js",
    "importStyle": "CodeController",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "mainController",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#mainController",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "xsdModel",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#xsdModel",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "ibisdocModel",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#ibisdocModel",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "fileModel",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#fileModel",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "codeView",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#codeView",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "fileService",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#fileService",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "xsdService",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#xsdService",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "ibisdocService",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#ibisdocService",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "editor",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#editor",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "fileTreeView",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#fileTreeView",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "initListeners",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#initListeners",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "quickGenerate",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#quickGenerate",
    "access": "public",
    "description": null,
    "lineNumber": 160,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "debounce",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#debounce",
    "access": "public",
    "description": null,
    "lineNumber": 174,
    "undocument": true,
    "params": [
      {
        "name": "func",
        "types": [
          "*"
        ]
      },
      {
        "name": "wait",
        "types": [
          "*"
        ]
      },
      {
        "name": "immediate",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "saveFile",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#saveFile",
    "access": "public",
    "description": null,
    "lineNumber": 190,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "setEditorValue",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#setEditorValue",
    "access": "public",
    "description": null,
    "lineNumber": 229,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "selectPipe",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#selectPipe",
    "access": "public",
    "description": null,
    "lineNumber": 233,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "getTypes",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#getTypes",
    "access": "public",
    "description": null,
    "lineNumber": 236,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "validateConfiguration",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#validateConfiguration",
    "access": "public",
    "description": null,
    "lineNumber": 239,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "decorateLine",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#decorateLine",
    "access": "public",
    "description": null,
    "lineNumber": 242,
    "undocument": true,
    "params": [
      {
        "name": "lineNumber",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "undoDecorations",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#undoDecorations",
    "access": "public",
    "description": null,
    "lineNumber": 245,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "changeName",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#changeName",
    "access": "public",
    "description": null,
    "lineNumber": 248,
    "undocument": true,
    "params": [
      {
        "name": "oldWord",
        "types": [
          "*"
        ]
      },
      {
        "name": "newWord",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "changePipeType",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#changePipeType",
    "access": "public",
    "description": null,
    "lineNumber": 251,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "type",
        "types": [
          "*"
        ]
      },
      {
        "name": "oldType",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "changePossition",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#changePossition",
    "access": "public",
    "description": null,
    "lineNumber": 254,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "newX",
        "types": [
          "*"
        ]
      },
      {
        "name": "newY",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "changeExitPossition",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#changeExitPossition",
    "access": "public",
    "description": null,
    "lineNumber": 257,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "newX",
        "types": [
          "*"
        ]
      },
      {
        "name": "newY",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "changeAddForward",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#changeAddForward",
    "access": "public",
    "description": null,
    "lineNumber": 260,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "path",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "deleteForward",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#deleteForward",
    "access": "public",
    "description": null,
    "lineNumber": 263,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "path",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "changeAddPipe",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#changeAddPipe",
    "access": "public",
    "description": null,
    "lineNumber": 266,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "possitions",
        "types": [
          "*"
        ]
      },
      {
        "name": "className",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "getPipes",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#getPipes",
    "access": "public",
    "description": null,
    "lineNumber": 269,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "getAttributes",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#getAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 272,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "getParameters",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#getParameters",
    "access": "public",
    "description": null,
    "lineNumber": 275,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "changeAttribute",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#changeAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 278,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      },
      {
        "name": "attributeValue",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "addAttribute",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#addAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 281,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "deleteAttribute",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#deleteAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 284,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "addParameter",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#addParameter",
    "access": "public",
    "description": null,
    "lineNumber": 287,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "paramName",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "deleteParameter",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#deleteParameter",
    "access": "public",
    "description": null,
    "lineNumber": 290,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "paramName",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "addParameterAttribute",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#addParameterAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 293,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "paramName",
        "types": [
          "*"
        ]
      },
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "changeParameterAttribute",
    "memberof": "app/Controller/CodeController.js~CodeController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/CodeController.js~CodeController#changeParameterAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 296,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "paramName",
        "types": [
          "*"
        ]
      },
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 88,
    "kind": "file",
    "name": "app/Controller/FlowController.js",
    "content": "import FlowView from '../View/flowView/FlowView.js';\r\nimport PaletteView from '../View/paletteView/PaletteView.js';\r\n\r\nexport default class FlowController {\r\n\r\n  constructor(mainController, flowModel) {\r\n    this.canvasMarginX = 0;\r\n    this.canvasMarginY = 0;\r\n\r\n    this.mainController = mainController;\r\n    this.flowModel = flowModel;\r\n    this.flowView = new FlowView(flowModel);\r\n    this.flowView.addListener(this);\r\n    this.paletteView = new PaletteView(this);\r\n    this.paletteView.addListener(this);\r\n    this.hoverSourceWindow = false;\r\n    this.initHandlers();\r\n\r\n\r\n    localStorage.setItem(\"activityMode\", false);\r\n  }\r\n\r\n  //_______________Observer_______________\r\n  \r\n  notify(data) {\r\n    if (data == null) {\r\n      return;\r\n    };\r\n    switch (data.type) {\r\n      case \"convertConfiguration\":\r\n        this.flowModel.setTransformedXml(this.mainController.convertConfiguration());\r\n        break;\r\n      case \"getTypes\":\r\n        this.flowView.types = this.mainController.modifyCode(\"getTypes\");\r\n        break;\r\n      case \"changeName\":\r\n        this.mainController.modifyCode(\"changeName\", data);\r\n        console.log(\"name changer\")\r\n        break;\r\n      case \"changeAddPipe\":\r\n        this.mainController.modifyCode(\"changeAddPipe\", data);\r\n        break;\r\n      case \"changeAddForward\":\r\n        this.mainController.modifyCode(\"changeAddForward\", data);\r\n        break;\r\n      case \"drag\":\r\n        this.mainController.modifyCode(\"changePossition\", data);\r\n        break;\r\n      case \"dragExit\":\r\n        this.mainController.modifyCode(\"changeExitPossition\", data);\r\n        break;\r\n      case \"delete\":\r\n        this.mainController.modifyCode(\"deleteForward\", data);\r\n        break;\r\n        case \"getPipeAttributes\":\r\n        let attr = this.mainController.modifyCode(\"getAttributes\", data);\r\n        data.pipeModel.attributes = attr;\r\n        break;\r\n    }\r\n  }\r\n\r\n  //_______________Methods to be called from handlers_______________\r\n\r\n  toggleHorizontal() {\r\n    let horizontalBuild = this.flowView.horizontalBuild;\r\n    if (!horizontalBuild) {\r\n      this.flowView.horizontalBuild = true;\r\n      $('#toggleH').addClass('selectedItem');\r\n    } else {\r\n      this.flowView.horizontalBuild = false;\r\n      $('#toggleH').removeClass('selectedItem');\r\n    }\r\n    this.flowView.generateFlow(this.flowView);\r\n  }\r\n\r\n  setFullFlow() {\r\n    $('#flowContainer').addClass('fullFlowContainer');\r\n    $('#flowContainer').css('display', 'flex');\r\n    $('#monacoContainer').css('display', 'none');\r\n    $('#palette').css('display', 'flex');\r\n    $('.monaco-flow-wrapper').css('justify-content', 'flex-end');\r\n    this.flowView.customWidth = true;\r\n  }\r\n\r\n  setFullEditor() {\r\n    $('#monacoContainer').addClass('fullMonacoContainer');\r\n    $('#monacoContainer').css('display', 'flex');\r\n    $('#flowContainer').css('display', 'none');\r\n    $('#palette').css('display', 'none');\r\n  }\r\n\r\n  setHybrid() {\r\n    $('#monacoContainer').removeClass('fullMonacoContainer');\r\n    $('#flowContainer').removeClass('fullFlowContainer');\r\n    $('#palette').css('display', 'flex');\r\n    $('#monacoContainer').css('display', 'flex');\r\n    $('#flowContainer').css('display', 'flex');\r\n  }\r\n\r\n  setTheme() {\r\n    let theme = prompt('choose your theme!');\r\n    if (theme.match(/theme/gi) == null) return;\r\n\r\n    if (this.currentTheme !== null) {\r\n      $('#canvas').removeClass(this.currentTheme);\r\n    }\r\n    this.currentTheme = theme;\r\n    $('#canvas').addClass(theme);\r\n  }\r\n\r\n  //_______________Event handlers_______________\r\n\r\n  initHandlers() {\r\n    let cur = this;\r\n    let fullscreen = true;\r\n    let themeSwitch = false;\r\n    let $panzoom = $('#canvas').panzoom({\r\n      minScale: 0.5,\r\n      increment: 0.2\r\n    });\r\n\r\n\r\n\r\n\r\n    $.contextMenu({\r\n      selector: '.context-menu-one',\r\n      zIndex: 3001,\r\n      callback: function (key, options) {\r\n        var m = \"clicked: \" + key;\r\n        window.console && console.log(m) || alert(m);\r\n      },\r\n      items: {\r\n        \"flow\": {\r\n          name: \"Toggle editor\", icon: \"fas fa-compress\",\r\n          callback: function () {\r\n            if(fullscreen) {\r\n              cur.setHybrid();\r\n            } else {\r\n              cur.setFullFlow();\r\n            }\r\n            fullscreen = !fullscreen;\r\n          }\r\n        },\r\n        \"sep1\": \"---------\",\r\n        \"ActivityMode\": {\r\n          name: \"Toggle activity mode\", icon: \"fas fa-globe-americas\",\r\n          callback: function () {\r\n            if (localStorage.getItem(\"activityMode\") == \"false\") {\r\n              localStorage.setItem(\"activityMode\", \"true\");\r\n            } else {\r\n              localStorage.setItem(\"activityMode\", \"false\");\r\n            }\r\n            cur.mainController.generateFlow();\r\n            return true;\r\n          }\r\n        },\r\n        \"realign\": {\r\n          name: 'Realign flow', icon: \"fas fa-outdent\",\r\n          callback: function() {\r\n            cur.flowView.realignFlow();\r\n          }\r\n        },\r\n        \"curve\": {\r\n          name: \"Toggle curve\", icon: \"fas fa-ruler-combined\",\r\n          callback: function () {\r\n            cur.flowView.toggleConnectorType(cur.flowView);\r\n            return true;\r\n          }\r\n        },\r\n        \"horizontal\": {\r\n          name: \"Toggle flow direction\", icon: \"fas fa-ruler-horizontal\",\r\n          callback: function () {\r\n            cur.toggleHorizontal();\r\n            cur.flowView.realignFlow();\r\n            return true;\r\n          }\r\n        },\r\n        \"download\": {\r\n          name: \"Export SVG\", icon: \"fas fa-file-export\",\r\n          callback: function () {\r\n            $panzoom.panzoom('pan', 0, 0);\r\n            $panzoom.panzoom('zoom', 0, 0);\r\n            cur.flowView.getImage();\r\n            return true;\r\n          }\r\n        },\r\n        // \"editor\": {name: \"Editor\", icon: \"fas fa-file-code\",\r\n        //   callback: function() {\r\n        //     cur.setFullEditor();\r\n        //   }} \r\n      }\r\n    });\r\n\r\n\r\n    jsPlumb.on($('#canvas'), \"mouseover\", \".sourceWindow, .description\", function () {\r\n      $panzoom.panzoom(\"disable\");\r\n    });\r\n\r\n    jsPlumb.on($('#canvas'), \"mouseout\", \".sourceWindow, .description\", function () {\r\n      $panzoom.panzoom(\"enable\");\r\n      $('#flowContainer').attr('style', '');\r\n    });\r\n\r\n    $('#canvas').on(\"click\", \".sourceWindow\", function (e) {\r\n      e.preventDefault();\r\n      cur.mainController.modifyCode(\"undoDecorations\");\r\n      cur.mainController.modifyCode(\"selectPipe\", {\r\n        name: this.lastElementChild.firstElementChild.innerHTML,\r\n        type: this.firstElementChild.lastElementChild.innerHTML\r\n      })\r\n    })\r\n\r\n\r\n    //make the bottom container draggable with mouseover\r\n    jsPlumb.on($('#canvas'), \"mouseover\", \".bottomContainer\", function () {\r\n      let sourceDiv = this.parentElement;\r\n      let dragData = {\r\n        disabled: false,\r\n        containment: '#canvas',\r\n        drag: function () {\r\n          cur.flowView.moving = true;\r\n          let dragObj = {\r\n            x: $(sourceDiv).css('left'),\r\n            y: $(sourceDiv).css('top'),\r\n            name: sourceDiv.lastElementChild.firstElementChild.innerHTML\r\n          }\r\n          if ($(sourceDiv).hasClass('exit')) {\r\n            cur.flowView.modifyFlow('dragExit', dragObj);\r\n          } else {\r\n            cur.flowView.modifyFlow('drag', dragObj);\r\n          }\r\n        },\r\n        stop: function (event, ui) {\r\n          cur.flowView.moving = false;\r\n        }\r\n      }\r\n      instance.draggable(sourceDiv, dragData);\r\n      if (instance.isSourceEnabled(sourceDiv)) {\r\n        instance.toggleSourceEnabled(sourceDiv);\r\n      }\r\n      $(this).addClass(\"element-disabled\");\r\n    });\r\n\r\n\r\n    //when leaving container not draggable\r\n    jsPlumb.on($('#canvas'), \"mouseout\", \".bottomContainer\", function () {\r\n      let sourceDiv = this.parentElement;\r\n      instance.draggable(sourceDiv, {\r\n        disabled: true\r\n      });\r\n      if (!instance.isSourceEnabled(sourceDiv)) {\r\n        instance.toggleSourceEnabled(sourceDiv);\r\n      }\r\n      $(this).removeClass(\"element-disabled\");\r\n    });\r\n\r\n    //set canvas bounded to container.\r\n    var minScaleX = $('#flowContainer').innerWidth();\r\n    var minScaleY = $('#flowContainer').innerHeight();\r\n\r\n\r\n    //make sure panzoom doesn't leave the container.\r\n    $panzoom.on('panzoomend', function (e) {\r\n      var current_pullY = parseInt($('#canvas').css('transform').split(',')[5]);\r\n      var current_pullX = parseInt($('#canvas').css('transform').split(',')[4]);\r\n      if (current_pullX >= 0) {\r\n        $panzoom.panzoom('pan', 0, current_pullY);\r\n      }\r\n      if (current_pullY <= -Math.abs($('#canvas').css('height').replace('px', '')) + 1000) {\r\n        $panzoom.panzoom('pan', current_pullX, -Math.abs($('#canvas').css('height').replace('px', '')) + 1000);\r\n        console.log('y< 1000');\r\n      }\r\n      if (current_pullX <= -1540) {\r\n        $panzoom.panzoom('pan', -1540, current_pullY);\r\n        console.log('x< 1540');\r\n      }\r\n      if (current_pullY >= 0) {\r\n        $panzoom.panzoom('pan', current_pullX, 0);\r\n        console.log('y> 0');\r\n      }\r\n      $('#flowContainer').attr('style', '');\r\n    });\r\n\r\n    /*\r\n    save canvas size and update positions in generation.\r\n\r\n\r\n    int canvasSizeX = 0;\r\n    int canvasSizeY = 0;\r\n\r\n    canvasSizeX = 500;\r\n    canvasSizeY = 200;\r\n\r\n    left += canvasSizeX;\r\n    top += cansSizeY;\r\n\r\n    */\r\n\r\n    function calculateCanvasBorder(direction) {\r\n      $('#canvas').css('min-width', '+=500');\r\n      let centerX = parseInt($('#canvas').css('min-width').replace('px', '')) / 2;\r\n      console.log('centerX: ' + centerX);\r\n\r\n      $('.sourceWindow').each((index, element) => {\r\n\r\n        \r\n        $(element).css('left', '+=250')\r\n        let pipe = {\r\n          x: $(element).css('left'),\r\n          y: $(element).css('top'),\r\n          name: element.lastElementChild.firstElementChild.innerHTML\r\n        }\r\n        if ($(element).hasClass('exit')) {\r\n          cur.flowView.modifyFlow('dragExit', pipe);\r\n        } else {\r\n          cur.flowView.modifyFlow('drag', pipe);\r\n        }\r\n      });\r\n      console.log('x> 0', $('#canvas').css('min-width'));\r\n    }\r\n\r\n    //make zoom possible\r\n    $panzoom.parent().on('mousewheel.focal', function (e) {\r\n      if (!e.shiftKey) return;\r\n      e.preventDefault();\r\n      var delta = e.delta || e.originalEvent.wheelDelta;\r\n      var zoomOut = delta ? delta < 0 : e.originalEvent.deltaY > 0;\r\n      $panzoom.panzoom('zoom', zoomOut, {\r\n        increment: 0.1,\r\n        focal: e\r\n      });\r\n    });\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/Controller/FlowController.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 89,
    "kind": "class",
    "name": "FlowController",
    "memberof": "app/Controller/FlowController.js",
    "static": true,
    "longname": "app/Controller/FlowController.js~FlowController",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/Controller/FlowController.js",
    "importStyle": "FlowController",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 90,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/Controller/FlowController.js~FlowController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/FlowController.js~FlowController#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 91,
    "kind": "member",
    "name": "canvasMarginX",
    "memberof": "app/Controller/FlowController.js~FlowController",
    "static": false,
    "longname": "app/Controller/FlowController.js~FlowController#canvasMarginX",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "member",
    "name": "canvasMarginY",
    "memberof": "app/Controller/FlowController.js~FlowController",
    "static": false,
    "longname": "app/Controller/FlowController.js~FlowController#canvasMarginY",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "member",
    "name": "mainController",
    "memberof": "app/Controller/FlowController.js~FlowController",
    "static": false,
    "longname": "app/Controller/FlowController.js~FlowController#mainController",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "member",
    "name": "flowModel",
    "memberof": "app/Controller/FlowController.js~FlowController",
    "static": false,
    "longname": "app/Controller/FlowController.js~FlowController#flowModel",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "member",
    "name": "flowView",
    "memberof": "app/Controller/FlowController.js~FlowController",
    "static": false,
    "longname": "app/Controller/FlowController.js~FlowController#flowView",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "member",
    "name": "paletteView",
    "memberof": "app/Controller/FlowController.js~FlowController",
    "static": false,
    "longname": "app/Controller/FlowController.js~FlowController#paletteView",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "member",
    "name": "hoverSourceWindow",
    "memberof": "app/Controller/FlowController.js~FlowController",
    "static": false,
    "longname": "app/Controller/FlowController.js~FlowController#hoverSourceWindow",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "notify",
    "memberof": "app/Controller/FlowController.js~FlowController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/FlowController.js~FlowController#notify",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "toggleHorizontal",
    "memberof": "app/Controller/FlowController.js~FlowController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/FlowController.js~FlowController#toggleHorizontal",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "setFullFlow",
    "memberof": "app/Controller/FlowController.js~FlowController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/FlowController.js~FlowController#setFullFlow",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "setFullEditor",
    "memberof": "app/Controller/FlowController.js~FlowController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/FlowController.js~FlowController#setFullEditor",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "setHybrid",
    "memberof": "app/Controller/FlowController.js~FlowController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/FlowController.js~FlowController#setHybrid",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "setTheme",
    "memberof": "app/Controller/FlowController.js~FlowController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/FlowController.js~FlowController#setTheme",
    "access": "public",
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 104,
    "kind": "member",
    "name": "currentTheme",
    "memberof": "app/Controller/FlowController.js~FlowController",
    "static": false,
    "longname": "app/Controller/FlowController.js~FlowController#currentTheme",
    "access": "public",
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "initHandlers",
    "memberof": "app/Controller/FlowController.js~FlowController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/FlowController.js~FlowController#initHandlers",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 106,
    "kind": "file",
    "name": "app/Controller/MainController.js",
    "content": "import ConfigurationConverter from '../Converter/ConfigurationConverter.js';\r\nimport CodeController from './CodeController.js';\r\nimport FlowController from './FlowController.js';\r\nimport PipeInfoController from './PipeInfoController';\r\nimport IbisdocModel from '../Model/IbisdocModel.js'\r\nimport FlowModel from '../Model/FlowModel.js';\r\nimport CodeFacade from '../Facade/CodeFacade.js';\r\n\r\nimport '../../css/bundle.css';\r\n\r\n\r\nclass MainController {\r\n\r\n  constructor() {\r\n    this.configurationConverter = new ConfigurationConverter();\r\n    this.ibisdocModel = new IbisdocModel();\r\n    this.flowModel = new FlowModel();\r\n    this.pipeInfoController = new PipeInfoController(this, this.ibisdocModel, this.flowModel);\r\n    this.codeController = new CodeController(this, this.ibisdocModel);\r\n    this.flowController = new FlowController(this, this.flowModel);\r\n    this.codeFacade = new CodeFacade(this.codeController, this.pipeInfoController, this.flowController);\r\n\r\n    this.ibisdocModel.addListener(this);\r\n\r\n  }\r\n\r\n  //_______________CRUD methods for the code view_______________\r\n\r\n  modifyCode(type, obj) {\r\n    return this.codeFacade.modifyCode(type, obj);\r\n  }\r\n\r\n  //_______________Generation of flow_______________\r\n\r\n  convertConfiguration() {\r\n    return this.configurationConverter.convertConfiguration(this.codeController.codeView.editor);\r\n  }\r\n\r\n  generateFlow() {\r\n    this.flowController.flowView.modifyFlow(\"generate\");\r\n  }\r\n  \r\n  // setPipes(data) {\r\n  //   this.flowController.paletteView.generatePalettePipes(data[2].classes);\r\n  // }\r\n\r\n  notify(data) {\r\n    this.flowController.paletteView.generatePalettePipes(data[2].classes);\r\n  }\r\n}\r\n\r\nlet mainController = new MainController();\r\n\r\n\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/Controller/MainController.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 107,
    "kind": "class",
    "name": "MainController",
    "memberof": "app/Controller/MainController.js",
    "static": true,
    "longname": "app/Controller/MainController.js~MainController",
    "access": "public",
    "export": false,
    "importPath": "Frank!Flow/app/Controller/MainController.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/Controller/MainController.js~MainController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/MainController.js~MainController#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 109,
    "kind": "member",
    "name": "configurationConverter",
    "memberof": "app/Controller/MainController.js~MainController",
    "static": false,
    "longname": "app/Controller/MainController.js~MainController#configurationConverter",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "member",
    "name": "ibisdocModel",
    "memberof": "app/Controller/MainController.js~MainController",
    "static": false,
    "longname": "app/Controller/MainController.js~MainController#ibisdocModel",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "member",
    "name": "flowModel",
    "memberof": "app/Controller/MainController.js~MainController",
    "static": false,
    "longname": "app/Controller/MainController.js~MainController#flowModel",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "member",
    "name": "pipeInfoController",
    "memberof": "app/Controller/MainController.js~MainController",
    "static": false,
    "longname": "app/Controller/MainController.js~MainController#pipeInfoController",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 113,
    "kind": "member",
    "name": "codeController",
    "memberof": "app/Controller/MainController.js~MainController",
    "static": false,
    "longname": "app/Controller/MainController.js~MainController#codeController",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 114,
    "kind": "member",
    "name": "flowController",
    "memberof": "app/Controller/MainController.js~MainController",
    "static": false,
    "longname": "app/Controller/MainController.js~MainController#flowController",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "member",
    "name": "codeFacade",
    "memberof": "app/Controller/MainController.js~MainController",
    "static": false,
    "longname": "app/Controller/MainController.js~MainController#codeFacade",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "modifyCode",
    "memberof": "app/Controller/MainController.js~MainController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/MainController.js~MainController#modifyCode",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "type",
        "types": [
          "*"
        ]
      },
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "convertConfiguration",
    "memberof": "app/Controller/MainController.js~MainController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/MainController.js~MainController#convertConfiguration",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "generateFlow",
    "memberof": "app/Controller/MainController.js~MainController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/MainController.js~MainController#generateFlow",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "notify",
    "memberof": "app/Controller/MainController.js~MainController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/MainController.js~MainController#notify",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 120,
    "kind": "variable",
    "name": "mainController",
    "memberof": "app/Controller/MainController.js",
    "static": true,
    "longname": "app/Controller/MainController.js~mainController",
    "access": "public",
    "export": false,
    "importPath": "Frank!Flow/app/Controller/MainController.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "app/Controller/MainController.js~MainController"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 121,
    "kind": "file",
    "name": "app/Controller/PipeInfoController.js",
    "content": "import PipeInfoView from '../View/pipeInfoView/PipeInfoView.js';\r\n\r\nexport default class PipeInfoController {\r\n\r\n  constructor(mainController, ibisdocModel, flowModel) {\r\n    this.ibisdocModel = ibisdocModel;\r\n    this.mainController = mainController;\r\n    this.pipeInfoView = new PipeInfoView(flowModel);\r\n    this.ibisdocModel.addListener(this);\r\n    this.setEventListeners();\r\n  }\r\n\r\n  notify(data) {\r\n    this.pipeInfoView.generateTypes(data);\r\n  }\r\n\r\n  selectPipe(pipe) {\r\n    console.log(pipe);\r\n    console.log(this.oldName, this.oldType);\r\n    console.trace()\r\n    this.oldName = pipe.name;\r\n    this.oldType = pipe.type;\r\n    this.pipeInfoView.setPipeName(pipe.name);\r\n    this.pipeInfoView.setPipeType(pipe.type);\r\n    let attributes = this.mainController.modifyCode(\"getAttributes\", {\r\n        name: pipe.name\r\n      }),\r\n      parameters = this.mainController.modifyCode(\"getParameters\", {\r\n        name: pipe.name\r\n      });\r\n    this.pipeInfoView.generatePipeAttributes(attributes);\r\n    this.pipeInfoView.generatePipeParameters(parameters);\r\n    this.setEventListeners();\r\n  }\r\n\r\n  //_______________CRUD methods_______________\r\n\r\n  changeName(oldName, newName) {\r\n    this.mainController.modifyCode(\"changeName\", {\r\n      oldName: oldName,\r\n      newName: newName\r\n    })\r\n    this.oldName = newName;\r\n  }\r\n\r\n  changeType(type) {\r\n    let cur = this;\r\n    this.mainController.modifyCode(\"changePipeType\", {\r\n      name: cur.oldName,\r\n      type: type,\r\n      oldType: cur.oldType\r\n    })\r\n    this.oldType = type;\r\n  }\r\n\r\n  addAttribute(attribute) {\r\n    let cur = this\r\n    this.mainController.modifyCode(\"addAttribute\", {\r\n      pipeName: cur.oldName,\r\n      attribute: attribute\r\n    });\r\n    this.mainController.modifyCode(\"selectPipe\", {name: cur.oldName});\r\n  }\r\n\r\n  changeAttribute(attribute, attributeValue) {\r\n    let cur = this;\r\n    this.mainController.modifyCode('changeAttribute', {\r\n      pipeName: cur.oldName,\r\n      attribute: attribute,\r\n      attributeValue: attributeValue\r\n    })\r\n  }\r\n\r\n  deleteAttribute(attribute) {\r\n    let cur = this;\r\n    this.mainController.modifyCode('deleteAttribute', {\r\n      pipeName: cur.oldName,\r\n      attribute: attribute\r\n    });\r\n    this.mainController.modifyCode(\"selectPipe\", {name: cur.oldName});\r\n  }\r\n\r\n  addParameter(parameter) {\r\n    let cur = this;\r\n    this.mainController.modifyCode('addParameter', {\r\n      pipeName: cur.oldName,\r\n      paramName: parameter\r\n    })\r\n    this.mainController.modifyCode(\"selectPipe\", {name: cur.oldName});\r\n  }\r\n\r\n  deleteParameter(parameter) {\r\n    let cur = this;\r\n    this.mainController.modifyCode('deleteParameter', {\r\n      pipeName: cur.oldName,\r\n      paramName: parameter\r\n    })\r\n    this.mainController.modifyCode(\"selectPipe\", {name: cur.oldName});\r\n  }\r\n\r\n  addParameterAttribute(parameter, attribute) {\r\n    let cur = this;\r\n    this.mainController.modifyCode('addParameterAttribute',\r\n      {\r\n        pipeName: cur.oldName,\r\n        paramName: parameter,\r\n        attributeName: attribute\r\n      }\r\n    )\r\n    this.mainController.modifyCode(\"selectPipe\", {name: cur.oldName});\r\n  }\r\n\r\n\r\n  changeParameterAttribute(parameter, attribute, value) {\r\n    let cur = this;\r\n    this.mainController.modifyCode('changeParameterAttribute', {\r\n      pipeName: cur.oldName,\r\n      paramName: parameter,\r\n      attributeName: attribute,\r\n      value: value\r\n    })\r\n  }\r\n\r\n  //_______________event listeners_______________\r\n\r\n  setEventListeners() {\r\n    let cur = this;\r\n\r\n    $('#pipeInfoName').on('change', function() {\r\n      let newName = $(this).val();\r\n      cur.pipeInfoView.setPipeName(newName);\r\n      cur.changeName(cur.oldName, newName);\r\n    });\r\n\r\n    $('#typeSelect').on('change', function() {\r\n      let type = $(this).val()\r\n      cur.pipeInfoView.setPipeType(type);\r\n      cur.changeType(type);\r\n    });\r\n\r\n    //_______________Attributes_______________\r\n\r\n    $('#attributesInfo input').on('change', function(e) {\r\n      let attributeValue = $(e.currentTarget).val(),\r\n      attribute = $(e.currentTarget).attr('name');\r\n\r\n      cur.changeAttribute(attribute, attributeValue);\r\n    })\r\n    $('#addAttribute').off('click').on('click', function(e) {\r\n      let attributeName = prompt(\"new Attribute for \" + cur.oldName + ':', 'attribute name');\r\n      if(attributeName != null) {\r\n      cur.addAttribute(attributeName);\r\n      }\r\n    })\r\n\r\n    $('#attributesInfo .attributeWrapper button').on('click', function(e) {\r\n      let attribute = $(e.currentTarget).attr('name');\r\n      cur.deleteAttribute(attribute);\r\n    });\r\n\r\n    //_______________Parameters_______________\r\n\r\n    $('.parameterContent').on('click', function(e) {\r\n      let toolbox = e.currentTarget.nextElementSibling;\r\n      if ($(toolbox).css('display') == 'none') {\r\n        $(toolbox).css('display', 'block')\r\n      } else {\r\n        $(toolbox).css('display', 'none')\r\n      }\r\n    });\r\n\r\n    $('#addParameter').off('click').on('click', function(e) {\r\n      let parameterName = prompt(\"new parameter for \" + cur.oldName + ':', 'parameter name');\r\n      if(parameterName != null) {\r\n        cur.addParameter(parameterName);\r\n      }\r\n    })\r\n    $('#parametersInfo #parameterDelete').on('click', function(e) {\r\n      let parameterName = $(this).attr('name');\r\n      cur.deleteParameter(parameterName);\r\n    })\r\n\r\n    $('#parametersInfo .parameterToolbox i').on('click', function() {\r\n      let parameterName = $(this).attr('name'),\r\n      attributeName = prompt(\"name new attribute\");\r\n      attributeName = attributeName.replace(/\\s/g, '');\r\n      cur.addParameterAttribute(parameterName, attributeName);\r\n    })\r\n\r\n    $('#parametersInfo .paramAttributeWrapper input').on('change', function(e) {\r\n      let parameterName = $(this.parentElement).attr('name'),\r\n      attributeName = $(this).attr('id'),\r\n      value = $(this).val();\r\n      cur.changeParameterAttribute(parameterName, attributeName, value);\r\n    })\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/Controller/PipeInfoController.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 122,
    "kind": "class",
    "name": "PipeInfoController",
    "memberof": "app/Controller/PipeInfoController.js",
    "static": true,
    "longname": "app/Controller/PipeInfoController.js~PipeInfoController",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/Controller/PipeInfoController.js",
    "importStyle": "PipeInfoController",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 123,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/Controller/PipeInfoController.js~PipeInfoController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/PipeInfoController.js~PipeInfoController#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 124,
    "kind": "member",
    "name": "ibisdocModel",
    "memberof": "app/Controller/PipeInfoController.js~PipeInfoController",
    "static": false,
    "longname": "app/Controller/PipeInfoController.js~PipeInfoController#ibisdocModel",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "mainController",
    "memberof": "app/Controller/PipeInfoController.js~PipeInfoController",
    "static": false,
    "longname": "app/Controller/PipeInfoController.js~PipeInfoController#mainController",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "member",
    "name": "pipeInfoView",
    "memberof": "app/Controller/PipeInfoController.js~PipeInfoController",
    "static": false,
    "longname": "app/Controller/PipeInfoController.js~PipeInfoController#pipeInfoView",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "notify",
    "memberof": "app/Controller/PipeInfoController.js~PipeInfoController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/PipeInfoController.js~PipeInfoController#notify",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "selectPipe",
    "memberof": "app/Controller/PipeInfoController.js~PipeInfoController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/PipeInfoController.js~PipeInfoController#selectPipe",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "pipe",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "oldName",
    "memberof": "app/Controller/PipeInfoController.js~PipeInfoController",
    "static": false,
    "longname": "app/Controller/PipeInfoController.js~PipeInfoController#oldName",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "member",
    "name": "oldType",
    "memberof": "app/Controller/PipeInfoController.js~PipeInfoController",
    "static": false,
    "longname": "app/Controller/PipeInfoController.js~PipeInfoController#oldType",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "changeName",
    "memberof": "app/Controller/PipeInfoController.js~PipeInfoController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/PipeInfoController.js~PipeInfoController#changeName",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "oldName",
        "types": [
          "*"
        ]
      },
      {
        "name": "newName",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "changeType",
    "memberof": "app/Controller/PipeInfoController.js~PipeInfoController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/PipeInfoController.js~PipeInfoController#changeType",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [
      {
        "name": "type",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "addAttribute",
    "memberof": "app/Controller/PipeInfoController.js~PipeInfoController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/PipeInfoController.js~PipeInfoController#addAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "params": [
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "changeAttribute",
    "memberof": "app/Controller/PipeInfoController.js~PipeInfoController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/PipeInfoController.js~PipeInfoController#changeAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "params": [
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      },
      {
        "name": "attributeValue",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "deleteAttribute",
    "memberof": "app/Controller/PipeInfoController.js~PipeInfoController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/PipeInfoController.js~PipeInfoController#deleteAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "params": [
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "addParameter",
    "memberof": "app/Controller/PipeInfoController.js~PipeInfoController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/PipeInfoController.js~PipeInfoController#addParameter",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "params": [
      {
        "name": "parameter",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "deleteParameter",
    "memberof": "app/Controller/PipeInfoController.js~PipeInfoController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/PipeInfoController.js~PipeInfoController#deleteParameter",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "params": [
      {
        "name": "parameter",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "addParameterAttribute",
    "memberof": "app/Controller/PipeInfoController.js~PipeInfoController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/PipeInfoController.js~PipeInfoController#addParameterAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "params": [
      {
        "name": "parameter",
        "types": [
          "*"
        ]
      },
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "changeParameterAttribute",
    "memberof": "app/Controller/PipeInfoController.js~PipeInfoController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/PipeInfoController.js~PipeInfoController#changeParameterAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "params": [
      {
        "name": "parameter",
        "types": [
          "*"
        ]
      },
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "setEventListeners",
    "memberof": "app/Controller/PipeInfoController.js~PipeInfoController",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Controller/PipeInfoController.js~PipeInfoController#setEventListeners",
    "access": "public",
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 143,
    "kind": "file",
    "name": "app/Converter/ConfigurationConverter.js",
    "content": "export default class ConfigurationConverter {\r\n\r\n  // a function that converts the xml to a readable json format and then generates a flow\r\n  convertConfiguration(editor) {\r\n    let value = editor.getValue();\r\n\r\n    //replace all pipe classes with 'pipe' so all pipes can become an array of pipes.\r\n    value = value.replace(/<[^\\/][\\S]*?[^\"\\/]Pipe/g, \"<pipe\");\r\n    value = value.replace(/<[\\/][\\S]*?[^\"\\/]Pipe/g, \"</pipe\").replace(/&/g, '');\r\n    value = value.replace(/<!--[^]*?-->/g, '')\r\n    var getXml = new DOMParser();\r\n\r\n    let xml = getXml.parseFromString(value, \"text/xml\");\r\n\r\n\r\n    //check for parse error. if(childnodes > 1) it is a parse error.\r\n    if(xml.childNodes.length > 1) {\r\n      return xml.lastElementChild.firstChild.textContent;\r\n    }\r\n    let transformedXml = JSON.parse(this.xml2json(xml).replace('undefined', ''));\r\n\r\n    if(transformedXml.Configuration == null && transformedXml.Module != null) {\r\n      let module = transformedXml.Module;\r\n      transformedXml = {};\r\n      transformedXml.Configuration = module;\r\n    }\r\n\r\n    if (transformedXml.Configuration.Module == null && transformedXml.Configuration.Adapter != null) {\r\n      transformedXml.Adapter = transformedXml.Configuration.Adapter;\r\n    } else {\r\n\t      if(Array.isArray(transformedXml.Configuration.Module)) {\r\n\t      transformedXml.Configuration.Module.forEach(function(item, index) {\r\n\t        if (Array.isArray(item.Adapter)) {\r\n\t          item.Adapter.forEach(function(item, index) {\r\n\t            if (item[\"@name\"] != null && item[\"@name\"] == localStorage.getItem(\"currentAdapter\")) {\r\n\t              transformedXml.Adapter = item;\r\n\t            }\r\n\t          })\r\n\t        } else {\r\n\t          if (item.Adapter != null && item.Adapter[\"@name\"] != null && item.Adapter[\"@name\"] == localStorage.getItem(\"currentAdapter\")) {\r\n\t            transformedXml = item;\r\n\t          }\r\n\t        }\r\n\t      });\r\n\t    } else {\r\n\t    \ttransformedXml.Adapter = transformedXml.Configuration.Module.Adapter;\r\n\t    }\r\n    }\r\n    return transformedXml;\r\n  }\r\n\r\n  domParse(xml) {\r\n    var getXml = new DOMParser();\r\n    let domXml = getXml.parseFromString(xml, \"text/xml\");\r\n    return domXml;\r\n  }\r\n\r\n  /*\tThis work is licensed under Creative Commons GNU LGPL License.\r\n\r\n  License: http://creativecommons.org/licenses/LGPL/2.1/\r\n   Version: 0.9\r\n  Author:  Stefan Goessner/2006\r\n  Web:     http://goessner.net/\r\n  */\r\n  xml2json(xml, tab) {\r\n    var X = {\r\n      toObj: function(xml) {\r\n        var o = {};\r\n        if (xml.nodeType == 1) { // element node ..\r\n          if (xml.attributes.length) // element with attributes  ..\r\n            for (var i = 0; i < xml.attributes.length; i++)\r\n              o[\"@\" + xml.attributes[i].nodeName] = (xml.attributes[i].nodeValue || \"\").toString();\r\n          if (xml.firstChild) { // element has child nodes ..\r\n            var textChild = 0,\r\n              cdataChild = 0,\r\n              hasElementChild = false;\r\n            for (var n = xml.firstChild; n; n = n.nextSibling) {\r\n              if (n.nodeType == 1) hasElementChild = true;\r\n              else if (n.nodeType == 3 && n.nodeValue.match(/[^ \\f\\n\\r\\t\\v]/)) textChild++; // non-whitespace text\r\n              else if (n.nodeType == 4) cdataChild++; // cdata section node\r\n            }\r\n            if (hasElementChild) {\r\n              if (textChild < 2 && cdataChild < 2) { // structured element with evtl. a single text or/and cdata node ..\r\n                X.removeWhite(xml);\r\n                for (var n = xml.firstChild; n; n = n.nextSibling) {\r\n                  if (n.nodeType == 3) // text node\r\n                    o[\"#text\"] = X.escape(n.nodeValue);\r\n                  else if (n.nodeType == 4) // cdata node\r\n                    o[\"#cdata\"] = X.escape(n.nodeValue);\r\n                  else if (o[n.nodeName]) { // multiple occurence of element ..\r\n                    if (o[n.nodeName] instanceof Array)\r\n                      o[n.nodeName][o[n.nodeName].length] = X.toObj(n);\r\n                    else\r\n                      o[n.nodeName] = [o[n.nodeName], X.toObj(n)];\r\n                  } else // first occurence of element..\r\n                    o[n.nodeName] = X.toObj(n);\r\n                }\r\n              } else { // mixed content\r\n                if (!xml.attributes.length)\r\n                  o = X.escape(X.innerXml(xml));\r\n                else\r\n                  o[\"#text\"] = X.escape(X.innerXml(xml));\r\n              }\r\n            } else if (textChild) { // pure text\r\n              if (!xml.attributes.length)\r\n                o = X.escape(X.innerXml(xml));\r\n              else\r\n                o[\"#text\"] = X.escape(X.innerXml(xml));\r\n            } else if (cdataChild) { // cdata\r\n              if (cdataChild > 1)\r\n                o = X.escape(X.innerXml(xml));\r\n              else\r\n                for (var n = xml.firstChild; n; n = n.nextSibling)\r\n                  o[\"#cdata\"] = X.escape(n.nodeValue);\r\n            }\r\n          }\r\n          if (!xml.attributes.length && !xml.firstChild) o = null;\r\n        } else if (xml.nodeType == 9) { // document.node\r\n          o = X.toObj(xml.documentElement);\r\n        }\r\n        return o;\r\n      },\r\n      toJson: function(o, name, ind) {\r\n        var json = name ? (\"\\\"\" + name + \"\\\"\") : \"\";\r\n        if (o instanceof Array) {\r\n          for (var i = 0, n = o.length; i < n; i++)\r\n            o[i] = X.toJson(o[i], \"\", ind + \"\\t\");\r\n          json += (name ? \":[\" : \"[\") + (o.length > 1 ? (\"\\n\" + ind + \"\\t\" + o.join(\",\\n\" + ind + \"\\t\") + \"\\n\" + ind) : o.join(\"\")) + \"]\";\r\n        } else if (o == null)\r\n          json += (name && \":\") + \"null\";\r\n        else if (typeof(o) == \"object\") {\r\n          var arr = [];\r\n          for (var m in o)\r\n            arr[arr.length] = X.toJson(o[m], m, ind + \"\\t\");\r\n          json += (name ? \":{\" : \"{\") + (arr.length > 1 ? (\"\\n\" + ind + \"\\t\" + arr.join(\",\\n\" + ind + \"\\t\") + \"\\n\" + ind) : arr.join(\"\")) + \"}\";\r\n        } else if (typeof(o) == \"string\")\r\n          json += (name && \":\") + \"\\\"\" + o.toString() + \"\\\"\";\r\n        else\r\n          json += (name && \":\") + o.toString();\r\n        return json;\r\n      },\r\n      innerXml: function(node) {\r\n        var s = \"\"\r\n        if (\"innerHTML\" in node)\r\n          s = node.innerHTML;\r\n        else {\r\n          var asXml = function(n) {\r\n            var s = \"\";\r\n            if (n.nodeType == 1) {\r\n              s += \"<\" + n.nodeName;\r\n              for (var i = 0; i < n.attributes.length; i++)\r\n                s += \" \" + n.attributes[i].nodeName + \"=\\\"\" + (n.attributes[i].nodeValue || \"\").toString() + \"\\\"\";\r\n              if (n.firstChild) {\r\n                s += \">\";\r\n                for (var c = n.firstChild; c; c = c.nextSibling)\r\n                  s += asXml(c);\r\n                s += \"</\" + n.nodeName + \">\";\r\n              } else\r\n                s += \"/>\";\r\n            } else if (n.nodeType == 3)\r\n              s += n.nodeValue;\r\n            else if (n.nodeType == 4)\r\n              s += \"<![CDATA[\" + n.nodeValue + \"]]>\";\r\n            return s;\r\n          };\r\n          for (var c = node.firstChild; c; c = c.nextSibling)\r\n            s += asXml(c);\r\n        }\r\n        return s;\r\n      },\r\n      escape: function(txt) {\r\n        return txt.replace(/[\\\\]/g, \"\\\\\\\\\")\r\n          .replace(/[\\\"]/g, '\\\\\"')\r\n          .replace(/[\\n]/g, '\\\\n')\r\n          .replace(/[\\r]/g, '\\\\r');\r\n      },\r\n      removeWhite: function(e) {\r\n        e.normalize();\r\n        for (var n = e.firstChild; n;) {\r\n          if (n.nodeType == 3) { // text node\r\n            if (!n.nodeValue.match(/[^ \\f\\n\\r\\t\\v]/)) { // pure whitespace text node\r\n              var nxt = n.nextSibling;\r\n              e.removeChild(n);\r\n              n = nxt;\r\n            } else\r\n              n = n.nextSibling;\r\n          } else if (n.nodeType == 1) { // element node\r\n            X.removeWhite(n);\r\n            n = n.nextSibling;\r\n          } else // any other node\r\n            n = n.nextSibling;\r\n        }\r\n        return e;\r\n      }\r\n    };\r\n    if (xml.nodeType == 9) // document node\r\n      xml = xml.documentElement;\r\n    var json = X.toJson(X.toObj(X.removeWhite(xml)), xml.nodeName, \"\\t\");\r\n    return \"{\\n\" + tab + (tab ? json.replace(/\\t/g, tab) : json.replace(/\\t|\\n/g, \"\")) + \"\\n}\";\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/Converter/ConfigurationConverter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 144,
    "kind": "class",
    "name": "ConfigurationConverter",
    "memberof": "app/Converter/ConfigurationConverter.js",
    "static": true,
    "longname": "app/Converter/ConfigurationConverter.js~ConfigurationConverter",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/Converter/ConfigurationConverter.js",
    "importStyle": "ConfigurationConverter",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "convertConfiguration",
    "memberof": "app/Converter/ConfigurationConverter.js~ConfigurationConverter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Converter/ConfigurationConverter.js~ConfigurationConverter#convertConfiguration",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "editor",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "domParse",
    "memberof": "app/Converter/ConfigurationConverter.js~ConfigurationConverter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Converter/ConfigurationConverter.js~ConfigurationConverter#domParse",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "params": [
      {
        "name": "xml",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "xml2json",
    "memberof": "app/Converter/ConfigurationConverter.js~ConfigurationConverter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Converter/ConfigurationConverter.js~ConfigurationConverter#xml2json",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "params": [
      {
        "name": "xml",
        "types": [
          "*"
        ]
      },
      {
        "name": "tab",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "file",
    "name": "app/Facade/CodeFacade.js",
    "content": "export default class CodeFacade {\r\n    constructor(codeController, pipeInfoController, flowController) {\r\n        this.codeController = codeController;\r\n        this.pipeInfoController = pipeInfoController;\r\n        this.flowController = flowController;\r\n    }\r\n\r\n    modifyCode(type, obj) {\r\n        let codeController = this.codeController;\r\n        switch (type) {\r\n          case \"getTypes\":\r\n            return codeController.getTypes();\r\n            break;\r\n          case \"validateConfiguration\":\r\n            return codeController.validateConfiguration();\r\n            break;\r\n          case \"decorateLine\":\r\n            codeController.decorateLine(obj.line);\r\n            break;\r\n          case \"undoDecorations\":\r\n            codeController.undoDecorations();\r\n            break;\r\n          case \"changeName\":\r\n            codeController.changeName(obj.oldName, obj.newName);\r\n            break;\r\n          case \"changePossition\":\r\n            codeController.changePossition(obj.name, obj.x, obj.y);\r\n            break;\r\n          case \"changeExitPossition\":\r\n            codeController.changeExitPossition(obj.name, obj.x, obj.y);\r\n            break;\r\n          case \"changeAddForward\":\r\n            codeController.changeAddForward(obj.source, obj.target);\r\n            break;\r\n          case \"deleteForward\":\r\n            codeController.deleteForward(obj.name, obj.target);\r\n            break;\r\n          case \"changeAddPipe\":\r\n            codeController.changeAddPipe(obj.name, obj.possitions, obj.className);\r\n            break;\r\n          case \"selectPipe\":\r\n            codeController.selectPipe(obj.name);\r\n            console.log(\"facade select: \", obj)\r\n            this.pipeInfoController.selectPipe(this.flowController.flowView.flowGenerator.pipes[obj.name]);\r\n            break;\r\n          case \"changePipeType\":\r\n            codeController.changePipeType(obj.name, obj.type, obj.oldType);\r\n            break;\r\n          case \"getAttributes\":\r\n            return codeController.getAttributes(obj.name);\r\n            break;\r\n          case \"getParameters\":\r\n            return codeController.getParameters(obj.name);\r\n            break;\r\n          case \"changeAttribute\":\r\n            codeController.changeAttribute(obj.pipeName, obj.attribute, obj.attributeValue);\r\n            break;\r\n          case \"addAttribute\":\r\n            codeController.addAttribute(obj.pipeName, obj.attribute);\r\n            break\r\n          case \"deleteAttribute\":\r\n            codeController.deleteAttribute(obj.pipeName, obj.attribute);\r\n            break;\r\n          case \"addParameter\":\r\n            codeController.addParameter(obj.pipeName, obj.paramName);\r\n            break;\r\n          case \"deleteParameter\":\r\n            codeController.deleteParameter(obj.pipeName, obj.paramName);\r\n            break;\r\n          case \"addParameterAttribute\":\r\n            codeController.addParameterAttribute(obj.pipeName, obj.paramName, obj.attributeName);\r\n            break;\r\n          case \"changeParameterAttribute\":\r\n            codeController.changeParameterAttribute(obj.pipeName, obj.paramName, obj.attributeName, obj.value);   \r\n            break;\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/Facade/CodeFacade.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 149,
    "kind": "class",
    "name": "CodeFacade",
    "memberof": "app/Facade/CodeFacade.js",
    "static": true,
    "longname": "app/Facade/CodeFacade.js~CodeFacade",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/Facade/CodeFacade.js",
    "importStyle": "CodeFacade",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 150,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/Facade/CodeFacade.js~CodeFacade",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Facade/CodeFacade.js~CodeFacade#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 151,
    "kind": "member",
    "name": "codeController",
    "memberof": "app/Facade/CodeFacade.js~CodeFacade",
    "static": false,
    "longname": "app/Facade/CodeFacade.js~CodeFacade#codeController",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "member",
    "name": "pipeInfoController",
    "memberof": "app/Facade/CodeFacade.js~CodeFacade",
    "static": false,
    "longname": "app/Facade/CodeFacade.js~CodeFacade#pipeInfoController",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "member",
    "name": "flowController",
    "memberof": "app/Facade/CodeFacade.js~CodeFacade",
    "static": false,
    "longname": "app/Facade/CodeFacade.js~CodeFacade#flowController",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "modifyCode",
    "memberof": "app/Facade/CodeFacade.js~CodeFacade",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Facade/CodeFacade.js~CodeFacade#modifyCode",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "type",
        "types": [
          "*"
        ]
      },
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "file",
    "name": "app/Model/FileModel.js",
    "content": "export default class FileModel {\r\n\r\n    constructor() {\r\n      this._fileStructure = {};\r\n      this.listeners = [];\r\n    }\r\n  \r\n    addListener(listener) {\r\n      this.listeners.push(listener);\r\n    }\r\n  \r\n    notifyListeners(data) {\r\n      this.listeners.forEach(l => l.notify(data));\r\n    }\r\n  \r\n    setFileStructure(fileStructure) {\r\n      this._fileStructure = fileStructure;\r\n      this.notifyListeners(this._fileStructure);\r\n    }\r\n  \r\n    getFileStructure() {\r\n      return this._fileStructure;\r\n    }\r\n  }",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/Model/FileModel.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 156,
    "kind": "class",
    "name": "FileModel",
    "memberof": "app/Model/FileModel.js",
    "static": true,
    "longname": "app/Model/FileModel.js~FileModel",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/Model/FileModel.js",
    "importStyle": "FileModel",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 157,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/Model/FileModel.js~FileModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/FileModel.js~FileModel#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 158,
    "kind": "member",
    "name": "_fileStructure",
    "memberof": "app/Model/FileModel.js~FileModel",
    "static": false,
    "longname": "app/Model/FileModel.js~FileModel#_fileStructure",
    "access": "private",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "member",
    "name": "listeners",
    "memberof": "app/Model/FileModel.js~FileModel",
    "static": false,
    "longname": "app/Model/FileModel.js~FileModel#listeners",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "addListener",
    "memberof": "app/Model/FileModel.js~FileModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/FileModel.js~FileModel#addListener",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "listener",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "notifyListeners",
    "memberof": "app/Model/FileModel.js~FileModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/FileModel.js~FileModel#notifyListeners",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "setFileStructure",
    "memberof": "app/Model/FileModel.js~FileModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/FileModel.js~FileModel#setFileStructure",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "fileStructure",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 164,
    "kind": "method",
    "name": "getFileStructure",
    "memberof": "app/Model/FileModel.js~FileModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/FileModel.js~FileModel#getFileStructure",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 165,
    "kind": "file",
    "name": "app/Model/FlowModel.js",
    "content": "export default class FlowModel {\r\n\r\n  constructor() {\r\n    this.forwards = [];\r\n    this.transformedXml =  {};\r\n    this.receivers = [];\r\n  }\r\n\r\n  getForwards() {\r\n    return this.forwards;\r\n  }\r\n\r\n  setForwards(forwards) {\r\n    this.forwards = forwards;\r\n  }\r\n\r\n  getTransformedXml() {\r\n    return this.transformedXml;\r\n  }\r\n\r\n  setTransformedXml(xml) {\r\n    this.transformedXml = xml;\r\n  }\r\n\r\n  getReceivers() {\r\n    return this.receivers;\r\n  }\r\n\r\n  setReceivers(receivers) {\r\n    this.receivers = receivers;\r\n  }\r\n\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/Model/FlowModel.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 166,
    "kind": "class",
    "name": "FlowModel",
    "memberof": "app/Model/FlowModel.js",
    "static": true,
    "longname": "app/Model/FlowModel.js~FlowModel",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/Model/FlowModel.js",
    "importStyle": "FlowModel",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 167,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/Model/FlowModel.js~FlowModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/FlowModel.js~FlowModel#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "forwards",
    "memberof": "app/Model/FlowModel.js~FlowModel",
    "static": false,
    "longname": "app/Model/FlowModel.js~FlowModel#forwards",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "member",
    "name": "transformedXml",
    "memberof": "app/Model/FlowModel.js~FlowModel",
    "static": false,
    "longname": "app/Model/FlowModel.js~FlowModel#transformedXml",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "member",
    "name": "receivers",
    "memberof": "app/Model/FlowModel.js~FlowModel",
    "static": false,
    "longname": "app/Model/FlowModel.js~FlowModel#receivers",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "getForwards",
    "memberof": "app/Model/FlowModel.js~FlowModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/FlowModel.js~FlowModel#getForwards",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "setForwards",
    "memberof": "app/Model/FlowModel.js~FlowModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/FlowModel.js~FlowModel#setForwards",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "forwards",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "getTransformedXml",
    "memberof": "app/Model/FlowModel.js~FlowModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/FlowModel.js~FlowModel#getTransformedXml",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "setTransformedXml",
    "memberof": "app/Model/FlowModel.js~FlowModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/FlowModel.js~FlowModel#setTransformedXml",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "xml",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 177,
    "kind": "method",
    "name": "getReceivers",
    "memberof": "app/Model/FlowModel.js~FlowModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/FlowModel.js~FlowModel#getReceivers",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "setReceivers",
    "memberof": "app/Model/FlowModel.js~FlowModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/FlowModel.js~FlowModel#setReceivers",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "receivers",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 180,
    "kind": "file",
    "name": "app/Model/IbisdocModel.js",
    "content": "export default class IbisdocModel {\r\n\r\n  constructor() {\r\n    this.ibisdoc = {};\r\n    this.listeners = [];\r\n  }\r\n\r\n  addListener(listener) {\r\n    this.listeners.push(listener);\r\n  }\r\n\r\n  notifyListeners(data) {\r\n    this.listeners.forEach(l => l.notify(data));\r\n  }\r\n\r\n  setIbisdoc(data) {\r\n    this.ibisdoc = data;\r\n    this.notifyListeners(data);\r\n  }\r\n\r\n  getIbisdoc() {\r\n    return this.ibisdoc;\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/Model/IbisdocModel.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 181,
    "kind": "class",
    "name": "IbisdocModel",
    "memberof": "app/Model/IbisdocModel.js",
    "static": true,
    "longname": "app/Model/IbisdocModel.js~IbisdocModel",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/Model/IbisdocModel.js",
    "importStyle": "IbisdocModel",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 182,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/Model/IbisdocModel.js~IbisdocModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/IbisdocModel.js~IbisdocModel#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 183,
    "kind": "member",
    "name": "ibisdoc",
    "memberof": "app/Model/IbisdocModel.js~IbisdocModel",
    "static": false,
    "longname": "app/Model/IbisdocModel.js~IbisdocModel#ibisdoc",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "member",
    "name": "listeners",
    "memberof": "app/Model/IbisdocModel.js~IbisdocModel",
    "static": false,
    "longname": "app/Model/IbisdocModel.js~IbisdocModel#listeners",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "addListener",
    "memberof": "app/Model/IbisdocModel.js~IbisdocModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/IbisdocModel.js~IbisdocModel#addListener",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [
      {
        "name": "listener",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "notifyListeners",
    "memberof": "app/Model/IbisdocModel.js~IbisdocModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/IbisdocModel.js~IbisdocModel#notifyListeners",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "setIbisdoc",
    "memberof": "app/Model/IbisdocModel.js~IbisdocModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/IbisdocModel.js~IbisdocModel#setIbisdoc",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "getIbisdoc",
    "memberof": "app/Model/IbisdocModel.js~IbisdocModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/IbisdocModel.js~IbisdocModel#getIbisdoc",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "file",
    "name": "app/Model/PipeModel.js",
    "content": "export default class PipeModel {\r\n    constructor(name, possitions, extra, isExit, descText, type) {\r\n        this.attributes = {};\r\n        this.parameters = {};\r\n        this.name = name;\r\n        this.possitions = possitions;\r\n        this.extra = extra;\r\n        this.isExit = isExit;\r\n        this.descText = descText\r\n        this.type = type;\r\n    }\r\n}",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/Model/PipeModel.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 191,
    "kind": "class",
    "name": "PipeModel",
    "memberof": "app/Model/PipeModel.js",
    "static": true,
    "longname": "app/Model/PipeModel.js~PipeModel",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/Model/PipeModel.js",
    "importStyle": "PipeModel",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 192,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/Model/PipeModel.js~PipeModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/PipeModel.js~PipeModel#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 193,
    "kind": "member",
    "name": "attributes",
    "memberof": "app/Model/PipeModel.js~PipeModel",
    "static": false,
    "longname": "app/Model/PipeModel.js~PipeModel#attributes",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 194,
    "kind": "member",
    "name": "parameters",
    "memberof": "app/Model/PipeModel.js~PipeModel",
    "static": false,
    "longname": "app/Model/PipeModel.js~PipeModel#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 195,
    "kind": "member",
    "name": "name",
    "memberof": "app/Model/PipeModel.js~PipeModel",
    "static": false,
    "longname": "app/Model/PipeModel.js~PipeModel#name",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 196,
    "kind": "member",
    "name": "possitions",
    "memberof": "app/Model/PipeModel.js~PipeModel",
    "static": false,
    "longname": "app/Model/PipeModel.js~PipeModel#possitions",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 197,
    "kind": "member",
    "name": "extra",
    "memberof": "app/Model/PipeModel.js~PipeModel",
    "static": false,
    "longname": "app/Model/PipeModel.js~PipeModel#extra",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 198,
    "kind": "member",
    "name": "isExit",
    "memberof": "app/Model/PipeModel.js~PipeModel",
    "static": false,
    "longname": "app/Model/PipeModel.js~PipeModel#isExit",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "member",
    "name": "descText",
    "memberof": "app/Model/PipeModel.js~PipeModel",
    "static": false,
    "longname": "app/Model/PipeModel.js~PipeModel#descText",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "member",
    "name": "type",
    "memberof": "app/Model/PipeModel.js~PipeModel",
    "static": false,
    "longname": "app/Model/PipeModel.js~PipeModel#type",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 201,
    "kind": "file",
    "name": "app/Model/XsdModel.js",
    "content": "export default class XsdModel {\r\n    constructor() {\r\n        this.xsd = \"\";\r\n        this.listeners = [];\r\n    }\r\n\r\n    addListener(listener) {\r\n        this.listeners.push(listener);\r\n    }\r\n\r\n    notifyListeners(data) {\r\n        this.listeners.forEach(l => l.notify(data));\r\n    }\r\n\r\n    setXsd(data) {\r\n        this.xsd = data;\r\n        this.notifyListeners(data);\r\n    }\r\n\r\n    getXsd() {\r\n        return this.xsd;\r\n    }\r\n}",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/Model/XsdModel.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 202,
    "kind": "class",
    "name": "XsdModel",
    "memberof": "app/Model/XsdModel.js",
    "static": true,
    "longname": "app/Model/XsdModel.js~XsdModel",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/Model/XsdModel.js",
    "importStyle": "XsdModel",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 203,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/Model/XsdModel.js~XsdModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/XsdModel.js~XsdModel#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 204,
    "kind": "member",
    "name": "xsd",
    "memberof": "app/Model/XsdModel.js~XsdModel",
    "static": false,
    "longname": "app/Model/XsdModel.js~XsdModel#xsd",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 205,
    "kind": "member",
    "name": "listeners",
    "memberof": "app/Model/XsdModel.js~XsdModel",
    "static": false,
    "longname": "app/Model/XsdModel.js~XsdModel#listeners",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 206,
    "kind": "method",
    "name": "addListener",
    "memberof": "app/Model/XsdModel.js~XsdModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/XsdModel.js~XsdModel#addListener",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "listener",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "notifyListeners",
    "memberof": "app/Model/XsdModel.js~XsdModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/XsdModel.js~XsdModel#notifyListeners",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "setXsd",
    "memberof": "app/Model/XsdModel.js~XsdModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/XsdModel.js~XsdModel#setXsd",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "getXsd",
    "memberof": "app/Model/XsdModel.js~XsdModel",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/Model/XsdModel.js~XsdModel#getXsd",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "file",
    "name": "app/services/FileService.js",
    "content": "import ToBeautifulSyntax from '../View/codeView/ToBeautifulSyntax.js';\r\nimport JSZip from 'jszip/dist/jszip';\r\n\r\n\r\nexport default class FileService {\r\n    constructor(codeController) {\r\n        this.codeController = codeController;\r\n\r\n        this.deployableUnit = null;\r\n    }\r\n\r\n\r\n\r\n    getConfigurations() {\r\n        let cur = this,\r\n            path = './api/configurations'; \r\n\r\n        fetch(path, {\r\n            method: 'GET'\r\n        }).then(response => {\r\n            return response.json();\r\n        }).then(data => {\r\n            console.log(data[0]);\r\n            cur.getDeployableUnit(data[0]);\r\n        }).catch(e => {\r\n            alert('Please check if your ibis started up correctly or if the property Configurations.directory is set correctly')\r\n            console.log('error asjdhajhkdb getting configs: ' + e);\r\n        })\r\n    }\r\n\r\n    getDeployableUnit(name) {\r\n        let cur = this,\r\n            path = './api/configurations/' + name;\r\n\r\n        this.deployableUnit = name;\r\n        fetch(path, {\r\n            method: 'GET'\r\n        }).then(response => {\r\n            return response.json();\r\n        }).then(data => {\r\n            cur.codeController.fileTreeView.makeTree(data._files);\r\n        }).catch(e => {\r\n            console.log('error getting configs: ' + e);\r\n        })\r\n    }\r\n\r\n    getSingleFile(name) {\r\n        let cur = this,\r\n        path = './api/configurations/' + this.deployableUnit + '/files/?path=' + name;\r\n\r\n    fetch(path, {\r\n        method: 'GET'\r\n    }).then(response => {\r\n        return response.text();\r\n    }).then(data => {\r\n        cur.codeController.setEditorValue(data);\r\n        cur.codeController.quickGenerate();\r\n    }).catch(e => {\r\n        console.log('error getting configs: ' + e);\r\n    })\r\n    }\r\n\r\n    // loadZip(configurationName) {\r\n    //     configurationName = configurationName.match(/\".*?\"/g)[0].replace(/\"/g, '');\r\n    //     console.log(configurationName)\r\n    //     const versionPath = '../iaf/api/configurations/' + configurationName + '/versions';\r\n    //     const options = {\r\n    //         headers: {\r\n    //             'Content-disposition': 'attachment; filename=\"filename.jpg\"'\r\n    //         },\r\n    //         method: 'GET'\r\n    //     }\r\n    //     fetch(versionPath, options)\r\n    //         .then(response => {\r\n    //             return response.json();\r\n    //         })\r\n    //         .then(data => {\r\n    //             if (data) {\r\n    //                 let version = prompt('please enter a version number');\r\n    //                 let ver = data[0].version;\r\n\r\n    //                 data.forEach(function (item, i) {\r\n    //                     if (item.version.match(version + '(?=_)')) {\r\n    //                         ver = item.version;\r\n    //                     }\r\n    //                 })\r\n    //                 let zipPath = '../iaf/api/configurations/' + configurationName + '/versions/' + ver + '/download';\r\n    //                 fetch(zipPath, { method: 'GET' }).then(response => {\r\n    //                     return response.blob();\r\n    //                 })\r\n    //                     .then(zipFile => {\r\n    //                         this.mainController.codeController.fileTreeView.makeTree(zipFile);\r\n    //                     })\r\n    //             }\r\n    //         })\r\n    // }\r\n}",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/services/FileService.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 212,
    "kind": "class",
    "name": "FileService",
    "memberof": "app/services/FileService.js",
    "static": true,
    "longname": "app/services/FileService.js~FileService",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/services/FileService.js",
    "importStyle": "FileService",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 213,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/services/FileService.js~FileService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/services/FileService.js~FileService#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 214,
    "kind": "member",
    "name": "codeController",
    "memberof": "app/services/FileService.js~FileService",
    "static": false,
    "longname": "app/services/FileService.js~FileService#codeController",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 215,
    "kind": "member",
    "name": "deployableUnit",
    "memberof": "app/services/FileService.js~FileService",
    "static": false,
    "longname": "app/services/FileService.js~FileService#deployableUnit",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "getConfigurations",
    "memberof": "app/services/FileService.js~FileService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/services/FileService.js~FileService#getConfigurations",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "getDeployableUnit",
    "memberof": "app/services/FileService.js~FileService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/services/FileService.js~FileService#getDeployableUnit",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "getSingleFile",
    "memberof": "app/services/FileService.js~FileService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/services/FileService.js~FileService#getSingleFile",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 220,
    "kind": "file",
    "name": "app/services/IbisdocService.js",
    "content": "export default class IbisdocService {\r\n\r\n    constructor(ibisdocModel, codeView) {\r\n        this.ibisdocModel = ibisdocModel;\r\n        this.codeView = codeView;\r\n    }\r\n\r\n    getIbisdoc() {\r\n\r\n        let cur = this;\r\n        fetch('./media/ibisdoc.json', {\r\n            method: 'GET'\r\n        })\r\n            .then(response => {\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                cur.ibisdocModel.setIbisdoc(data);\r\n            })\r\n            .catch(err => {\r\n                console.log(\"couldn't load ibisdoc, now switching to default ibisdoc\", err);\r\n                this.getDefaultIbisdoc();\r\n            })\r\n\r\n    }\r\n\r\n    getDefaultIbisdoc() {\r\n        let cur = this;\r\n        fetch('https://cors-anywhere.herokuapp.com/https://ibis4example.ibissource.org/rest/ibisdoc/ibisdoc.json', {\r\n            method: 'GET'\r\n        })\r\n            .then(response => {\r\n                console.log(response)\r\n                return response.json()\r\n            })\r\n            .then(data => {\r\n                cur.ibisdocModel.setIbisdoc(data);\r\n            })\r\n            .catch(err => {\r\n                alert(\"couldn't load pipe palette\");\r\n                console.log(err);\r\n\r\n            })\r\n    }\r\n}",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/services/IbisdocService.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 221,
    "kind": "class",
    "name": "IbisdocService",
    "memberof": "app/services/IbisdocService.js",
    "static": true,
    "longname": "app/services/IbisdocService.js~IbisdocService",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/services/IbisdocService.js",
    "importStyle": "IbisdocService",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 222,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/services/IbisdocService.js~IbisdocService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/services/IbisdocService.js~IbisdocService#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 223,
    "kind": "member",
    "name": "ibisdocModel",
    "memberof": "app/services/IbisdocService.js~IbisdocService",
    "static": false,
    "longname": "app/services/IbisdocService.js~IbisdocService#ibisdocModel",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 224,
    "kind": "member",
    "name": "codeView",
    "memberof": "app/services/IbisdocService.js~IbisdocService",
    "static": false,
    "longname": "app/services/IbisdocService.js~IbisdocService#codeView",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "getIbisdoc",
    "memberof": "app/services/IbisdocService.js~IbisdocService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/services/IbisdocService.js~IbisdocService#getIbisdoc",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 226,
    "kind": "method",
    "name": "getDefaultIbisdoc",
    "memberof": "app/services/IbisdocService.js~IbisdocService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/services/IbisdocService.js~IbisdocService#getDefaultIbisdoc",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 227,
    "kind": "file",
    "name": "app/services/PipeService.js",
    "content": "export default class PipeService {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    getPipeWithActivity() {\r\n        return fetch('./media/pipeWithActivity.json', {method: 'GET'}).then(response => {\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            return data;\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        })\r\n    }\r\n}",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/services/PipeService.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 228,
    "kind": "class",
    "name": "PipeService",
    "memberof": "app/services/PipeService.js",
    "static": true,
    "longname": "app/services/PipeService.js~PipeService",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/services/PipeService.js",
    "importStyle": "PipeService",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 229,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/services/PipeService.js~PipeService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/services/PipeService.js~PipeService#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 230,
    "kind": "method",
    "name": "getPipeWithActivity",
    "memberof": "app/services/PipeService.js~PipeService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/services/PipeService.js~PipeService#getPipeWithActivity",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 231,
    "kind": "file",
    "name": "app/services/XsdService.js",
    "content": "export default class XsdService {\r\n    constructor(xsdModel) {\r\n        this.xsdModel = xsdModel;\r\n    }\r\n\r\n    getXsd() {\r\n        fetch('./media/ibisdoc.xsd', {\r\n            method: 'GET'\r\n        })\r\n            .then(response => {\r\n                return response.text()\r\n            })\r\n            .then(data => {\r\n                this.xsdModel.setXsd(data);\r\n                console.log(\"xsd is loaded!, here\");\r\n            })\r\n            .catch(err => {\r\n                console.log(\"couldn't load xsd, now loading deafult xsd\", err);\r\n                this.getDefaultXsd();\r\n            })\r\n    }\r\n\r\n    getDefaultXsd() {\r\n        fetch('https://cors-anywhere.herokuapp.com/https://ibis4example.ibissource.org/rest/ibisdoc/ibisdoc.xsd', {\r\n            method: 'GET'\r\n        })\r\n            .then(response => {\r\n                return response.text()\r\n            })\r\n            .then(data => {\r\n                this.xsdModel.setXsd(data);\r\n                console.log(\"xsd is loaded!, here\");\r\n            })\r\n            .catch(err => {\r\n                console.log(\"not loaded xsd\", err);\r\n            })\r\n    }\r\n}",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/services/XsdService.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 232,
    "kind": "class",
    "name": "XsdService",
    "memberof": "app/services/XsdService.js",
    "static": true,
    "longname": "app/services/XsdService.js~XsdService",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/services/XsdService.js",
    "importStyle": "XsdService",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 233,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/services/XsdService.js~XsdService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/services/XsdService.js~XsdService#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 234,
    "kind": "member",
    "name": "xsdModel",
    "memberof": "app/services/XsdService.js~XsdService",
    "static": false,
    "longname": "app/services/XsdService.js~XsdService#xsdModel",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "getXsd",
    "memberof": "app/services/XsdService.js~XsdService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/services/XsdService.js~XsdService#getXsd",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 236,
    "kind": "method",
    "name": "getDefaultXsd",
    "memberof": "app/services/XsdService.js~XsdService",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/services/XsdService.js~XsdService#getDefaultXsd",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 237,
    "kind": "file",
    "name": "app/View/codeView/codeCompletion/XSDCodeCompletionView.js",
    "content": "import XsdManager from 'monaco-xsd-code-completion/esm/XsdManager'\r\nimport XsdFeatures from 'monaco-xsd-code-completion/esm/XsdFeatures'\r\n\r\nexport default class XSDCodeCompletionView {\r\n\r\n    constructor(monaco, xsdModel) {\r\n        xsdModel.addListener(this)\r\n        this.monaco = monaco;\r\n    }\r\n\r\n    notify(data) {\r\n      const xsdManager = new XsdManager()\r\n      \r\n      // TODO: Use the real path as used in the configurations.\r\n      //  This should be loaded dynamically. (xsdManager.update())\r\n      xsdManager.set({\r\n        path: '../../../ibisdoc.xsd',\r\n        value: data,\r\n        namespace: 'xs',\r\n      })\r\n\r\n      const xsdFeatures = new XsdFeatures(xsdManager, monaco)\r\n      xsdFeatures.addCompletion()\r\n    }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/codeView/codeCompletion/XSDCodeCompletionView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 238,
    "kind": "class",
    "name": "XSDCodeCompletionView",
    "memberof": "app/View/codeView/codeCompletion/XSDCodeCompletionView.js",
    "static": true,
    "longname": "app/View/codeView/codeCompletion/XSDCodeCompletionView.js~XSDCodeCompletionView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/codeView/codeCompletion/XSDCodeCompletionView.js",
    "importStyle": "XSDCodeCompletionView",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 239,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/codeView/codeCompletion/XSDCodeCompletionView.js~XSDCodeCompletionView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeCompletion/XSDCodeCompletionView.js~XSDCodeCompletionView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 240,
    "kind": "member",
    "name": "monaco",
    "memberof": "app/View/codeView/codeCompletion/XSDCodeCompletionView.js~XSDCodeCompletionView",
    "static": false,
    "longname": "app/View/codeView/codeCompletion/XSDCodeCompletionView.js~XSDCodeCompletionView#monaco",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 241,
    "kind": "method",
    "name": "notify",
    "memberof": "app/View/codeView/codeCompletion/XSDCodeCompletionView.js~XSDCodeCompletionView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeCompletion/XSDCodeCompletionView.js~XSDCodeCompletionView#notify",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 242,
    "kind": "file",
    "name": "app/View/codeView/codeEditViews/CodeAttributesView.js",
    "content": "import CodeEditView from './CodeEditView.js';\r\n\r\nexport default class CodeAttributesView extends CodeEditView {\r\n  constructor(editor) {\r\n    super(editor);\r\n    this.getAttributes('doShowConfigurationStatus');\r\n  }\r\n\r\n  _getPipe(name) {\r\n    let attributeObjectRegex = '<[\\\\S]*?[^\"/][pP]ipe[\\\\s\\\\t\\\\n][^>]*?name=\"' + name + '\"[^]*?>',\r\n      matches = this.editor.getModel().findMatches(attributeObjectRegex, false, true, false, false);\r\n\r\n    return (matches);\r\n  }\r\n\r\n  //returns an object with all of the attributes of a pipe.\r\n  getAttributes(name) {\r\n    let cur = this,\r\n      returnObj = {},\r\n      matches = this._getPipe(name);\r\n\r\n    matches.forEach(function(item, index) {\r\n      let pipe = cur.editor.getModel().getValueInRange(item.range),\r\n      attributes = pipe.match(/(?=\\s)[^]+?\\s?=\\s?\"[^]*?\"/g);\r\n      if (attributes !== null) {\r\n        attributes.forEach(function(attr, i) {\r\n          attr = attr.replace(/\\s/g, '').replace(/\"/g, '');\r\n          let id = attr.match(/[^]*?(?==)/),\r\n          key = attr.match(/(?==)[^]*/)[0].replace('=', '');\r\n          returnObj[id] = key;\r\n        })\r\n      }\r\n    })\r\n    return returnObj;\r\n  }\r\n\r\n  changeAttribute(pipeName, attribute, attributeValue) {\r\n    let returnObj = {},\r\n        matches = this._getPipe(pipeName),\r\n        pipe = this.editor.getModel().getValueInRange(matches[0].range),\r\n        attr = pipe.match(attribute + '=\"[^]*?\"'),         //this holds the entire attribute.\r\n        changedAttributeValue = attr[0].replace(/\"[^]*?\"/g, '\"' + attributeValue + '\"')         //this holds the entire attribute with an new value.;\r\n\r\n      //swap the old with the changed attribute.\r\n      pipe = pipe.replace(attr, changedAttributeValue)\r\n      this.edit(matches[0].range, pipe);\r\n  }\r\n\r\n  addAttribute(pipeName, attribute) {\r\n    let matches = this._getPipe(pipeName),\r\n        pipe = this.editor.getModel().getValueInRange(matches[0].range);\r\n\r\n    pipe = pipe.replace('>', ' ' + attribute + '=\"\">');\r\n    this.edit(matches[0].range, pipe);\r\n  }\r\n\r\n  deleteAttribute(pipeName, attribute) {\r\n    let matches = this._getPipe(pipeName),\r\n        pipe = this.editor.getModel().getValueInRange(matches[0].range);\r\n\r\n    let regx = attribute + '=\"[^]*?\"';\r\n    regx = pipe.match(regx)[0];\r\n    pipe = pipe.replace(regx, '');\r\n    this.edit(matches[0].range, pipe);\r\n\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/codeView/codeEditViews/CodeAttributesView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 243,
    "kind": "class",
    "name": "CodeAttributesView",
    "memberof": "app/View/codeView/codeEditViews/CodeAttributesView.js",
    "static": true,
    "longname": "app/View/codeView/codeEditViews/CodeAttributesView.js~CodeAttributesView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/codeView/codeEditViews/CodeAttributesView.js",
    "importStyle": "CodeAttributesView",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "app/View/codeView/codeEditViews/CodeEditView.js~CodeEditView"
    ]
  },
  {
    "__docId__": 244,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/codeView/codeEditViews/CodeAttributesView.js~CodeAttributesView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeAttributesView.js~CodeAttributesView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 245,
    "kind": "method",
    "name": "_getPipe",
    "memberof": "app/View/codeView/codeEditViews/CodeAttributesView.js~CodeAttributesView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeAttributesView.js~CodeAttributesView#_getPipe",
    "access": "private",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "method",
    "name": "getAttributes",
    "memberof": "app/View/codeView/codeEditViews/CodeAttributesView.js~CodeAttributesView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeAttributesView.js~CodeAttributesView#getAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "method",
    "name": "changeAttribute",
    "memberof": "app/View/codeView/codeEditViews/CodeAttributesView.js~CodeAttributesView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeAttributesView.js~CodeAttributesView#changeAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      },
      {
        "name": "attributeValue",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 248,
    "kind": "method",
    "name": "addAttribute",
    "memberof": "app/View/codeView/codeEditViews/CodeAttributesView.js~CodeAttributesView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeAttributesView.js~CodeAttributesView#addAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "deleteAttribute",
    "memberof": "app/View/codeView/codeEditViews/CodeAttributesView.js~CodeAttributesView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeAttributesView.js~CodeAttributesView#deleteAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 250,
    "kind": "file",
    "name": "app/View/codeView/codeEditViews/CodeEditView.js",
    "content": "export default class CodeEditView {\r\n  constructor(editor) {\r\n    this.editor = editor;\r\n  }\r\n\r\n  //function to edit the code in the editor.\r\n  edit(range, name) {\r\n    this.editor.executeEdits(\"monacoContainer\", [{\r\n      range: range,\r\n      text: name\r\n    }]);\r\n  }\r\n\r\n  //function to focus a line on the editor.\r\n  focusLine(regex) {\r\n    let line = this.editor.getModel().findMatches(regex, false, true, false, false);\r\n    console.log(line, regex);\r\n    console.log(line[0].range);\r\n    this.editor.setSelection(new monaco.Selection(line[0].range.startLineNumber, line[0].range.startColumn, line[0].range.endLineNumber, line[0].range.endColumn));\r\n    this.editor.focus();\r\n    this.editor.revealLineInCenter(line[0].range.startLineNumber);\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/codeView/codeEditViews/CodeEditView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 251,
    "kind": "class",
    "name": "CodeEditView",
    "memberof": "app/View/codeView/codeEditViews/CodeEditView.js",
    "static": true,
    "longname": "app/View/codeView/codeEditViews/CodeEditView.js~CodeEditView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/codeView/codeEditViews/CodeEditView.js",
    "importStyle": "CodeEditView",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 252,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/codeView/codeEditViews/CodeEditView.js~CodeEditView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeEditView.js~CodeEditView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 253,
    "kind": "member",
    "name": "editor",
    "memberof": "app/View/codeView/codeEditViews/CodeEditView.js~CodeEditView",
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeEditView.js~CodeEditView#editor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 254,
    "kind": "method",
    "name": "edit",
    "memberof": "app/View/codeView/codeEditViews/CodeEditView.js~CodeEditView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeEditView.js~CodeEditView#edit",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "range",
        "types": [
          "*"
        ]
      },
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 255,
    "kind": "method",
    "name": "focusLine",
    "memberof": "app/View/codeView/codeEditViews/CodeEditView.js~CodeEditView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeEditView.js~CodeEditView#focusLine",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "regex",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 256,
    "kind": "file",
    "name": "app/View/codeView/codeEditViews/CodeParametersView.js",
    "content": "import CodeEditView from './CodeEditView.js';\r\n\r\nconst PARAMETERREGEX = new RegExp(/<Param[^]*?\\/>/, 'g');\r\nconst ATTRIBUTEREGEX = new RegExp(/(?=\\s)[^]+?\\s?=\\s?\"[^]*?\"/, 'g');\r\nconst IDREGEX = new RegExp(/[^]*?(?==)/);\r\nconst KEYREGEX = new RegExp(/(?==)[^]*/);\r\n\r\n\r\nexport default class CodeParametersView extends CodeEditView {\r\n  constructor(editor) {\r\n    super(editor);\r\n  }\r\n\r\n  _getPipe(name) {\r\n    let attributeObjectRegex = window.PIPESREGEX(name),\r\n      matches = this.editor.getModel().findMatches(attributeObjectRegex, false, true, false, false);\r\n\r\n    return matches;\r\n  }\r\n\r\n  //returns an array with each parameter as a object.\r\n  getParameters(name) {\r\n    let cur = this,\r\n      returnArr = [],\r\n      matches = this._getPipe(name);\r\n\r\n    matches.forEach(function (item, index) {\r\n      let pipe = cur.editor.getModel().getValueInRange(item.range),\r\n        parameters = pipe.match(PARAMETERREGEX);\r\n\r\n      if (parameters !== null) {\r\n        parameters.forEach(function (param, i) {\r\n          let attributes = param.match(ATTRIBUTEREGEX);\r\n\r\n          if (attributes !== null) {\r\n            let tempObj = {};\r\n            attributes.forEach(function (attr, i) {    \r\n              attr = attr.replace(/^\\s/g, '').replace(/\"/g, '').replace(/[\"\\n\\r]/g, '');\r\n              let id = attr.match(IDREGEX)[0].replace('[\\r\\n\"]', ''),\r\n                key = attr.match(KEYREGEX)[0].replace('=', '');\r\n              tempObj[id] = key\r\n            })\r\n            returnArr.push(tempObj);\r\n          }\r\n        })\r\n      }\r\n    })\r\n    return returnArr;\r\n  }\r\n\r\n  addParameter(pipeName, paramName) {\r\n    let cur = this,\r\n      matches = this._getPipe(pipeName),\r\n      pipe = cur.editor.getModel().getValueInRange(matches[0].range),\r\n      parameters = pipe.match(PARAMETERREGEX),\r\n      newParam = '<Param name=\"' + paramName + '\"/>'\r\n\r\n    if (parameters == null) {\r\n      parameters = pipe.match(/<\\/[^]*?Pipe>/);\r\n    }\r\n    pipe = pipe.replace(\r\n      parameters[parameters.length - 1],\r\n      newParam + '\\n\\t\\t\\t\\t' + parameters[parameters.length - 1]\r\n    );\r\n\r\n    this.edit(matches[0].range, pipe);\r\n  }\r\n\r\n  addParameterAttribute(pipeName, paramName, attribute) {\r\n    let cur = this,\r\n      matches = this._getPipe(pipeName);\r\n\r\n    matches.forEach(function (item, index) {\r\n      let pipe = cur.editor.getModel().getValueInRange(item.range),\r\n        parameters = pipe.match(PARAMETERREGEX);\r\n\r\n      if (parameters !== null) {\r\n        parameters.forEach(function (param, i) {\r\n          if (param.match('name=\"' + paramName + '\"') != null) {\r\n            let newParam = param.replace(/\\/>/, \" \" + attribute + '=\"\"/>');\r\n            pipe = pipe.replace(param, newParam)\r\n            cur.edit(matches[0].range, pipe);\r\n          }\r\n        })\r\n      }\r\n    }) \r\n  }\r\n\r\n  changeParameterAttribute(pipeName, paramName, attribute, value) {\r\n    let cur = this,\r\n      matches = this._getPipe(pipeName);\r\n      \r\n    matches.forEach(function (item, index) {\r\n      let pipe = cur.editor.getModel().getValueInRange(item.range),\r\n        parameters = pipe.match(PARAMETERREGEX);\r\n\r\n      if (parameters !== null) {\r\n        parameters.forEach(function (param, i) {\r\n          if (param.match('name=\"' + paramName + '\"') != null) {\r\n            let newParam = param.replace(new RegExp(attribute + '=\"[^]*?\"'), attribute + '=\"' + value + '\"');\r\n            pipe = pipe.replace(param, newParam)\r\n            cur.edit(matches[0].range, pipe);\r\n          }\r\n        })\r\n      }\r\n    }) \r\n  }\r\n\r\n  deleteParameter(pipeName, paramName) {\r\n    let cur = this,\r\n      matches = this._getPipe(pipeName),\r\n      pipe = cur.editor.getModel().getValueInRange(matches[0].range),\r\n      param = pipe.match('<Param[^\\n]*?name=\"' + paramName + '\"[^]*?/>')\r\n    pipe = pipe.replace(param, '');\r\n\r\n    this.edit(matches[0].range, pipe);\r\n\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/codeView/codeEditViews/CodeParametersView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 257,
    "kind": "variable",
    "name": "PARAMETERREGEX",
    "memberof": "app/View/codeView/codeEditViews/CodeParametersView.js",
    "static": true,
    "longname": "app/View/codeView/codeEditViews/CodeParametersView.js~PARAMETERREGEX",
    "access": "public",
    "export": false,
    "importPath": "Frank!Flow/app/View/codeView/codeEditViews/CodeParametersView.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 258,
    "kind": "variable",
    "name": "ATTRIBUTEREGEX",
    "memberof": "app/View/codeView/codeEditViews/CodeParametersView.js",
    "static": true,
    "longname": "app/View/codeView/codeEditViews/CodeParametersView.js~ATTRIBUTEREGEX",
    "access": "public",
    "export": false,
    "importPath": "Frank!Flow/app/View/codeView/codeEditViews/CodeParametersView.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 259,
    "kind": "variable",
    "name": "IDREGEX",
    "memberof": "app/View/codeView/codeEditViews/CodeParametersView.js",
    "static": true,
    "longname": "app/View/codeView/codeEditViews/CodeParametersView.js~IDREGEX",
    "access": "public",
    "export": false,
    "importPath": "Frank!Flow/app/View/codeView/codeEditViews/CodeParametersView.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 260,
    "kind": "variable",
    "name": "KEYREGEX",
    "memberof": "app/View/codeView/codeEditViews/CodeParametersView.js",
    "static": true,
    "longname": "app/View/codeView/codeEditViews/CodeParametersView.js~KEYREGEX",
    "access": "public",
    "export": false,
    "importPath": "Frank!Flow/app/View/codeView/codeEditViews/CodeParametersView.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 261,
    "kind": "class",
    "name": "CodeParametersView",
    "memberof": "app/View/codeView/codeEditViews/CodeParametersView.js",
    "static": true,
    "longname": "app/View/codeView/codeEditViews/CodeParametersView.js~CodeParametersView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/codeView/codeEditViews/CodeParametersView.js",
    "importStyle": "CodeParametersView",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "app/View/codeView/codeEditViews/CodeEditView.js~CodeEditView"
    ]
  },
  {
    "__docId__": 262,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/codeView/codeEditViews/CodeParametersView.js~CodeParametersView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeParametersView.js~CodeParametersView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 263,
    "kind": "method",
    "name": "_getPipe",
    "memberof": "app/View/codeView/codeEditViews/CodeParametersView.js~CodeParametersView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeParametersView.js~CodeParametersView#_getPipe",
    "access": "private",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 264,
    "kind": "method",
    "name": "getParameters",
    "memberof": "app/View/codeView/codeEditViews/CodeParametersView.js~CodeParametersView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeParametersView.js~CodeParametersView#getParameters",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 265,
    "kind": "method",
    "name": "addParameter",
    "memberof": "app/View/codeView/codeEditViews/CodeParametersView.js~CodeParametersView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeParametersView.js~CodeParametersView#addParameter",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "paramName",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 266,
    "kind": "method",
    "name": "addParameterAttribute",
    "memberof": "app/View/codeView/codeEditViews/CodeParametersView.js~CodeParametersView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeParametersView.js~CodeParametersView#addParameterAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "paramName",
        "types": [
          "*"
        ]
      },
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 267,
    "kind": "method",
    "name": "changeParameterAttribute",
    "memberof": "app/View/codeView/codeEditViews/CodeParametersView.js~CodeParametersView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeParametersView.js~CodeParametersView#changeParameterAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "paramName",
        "types": [
          "*"
        ]
      },
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 268,
    "kind": "method",
    "name": "deleteParameter",
    "memberof": "app/View/codeView/codeEditViews/CodeParametersView.js~CodeParametersView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeParametersView.js~CodeParametersView#deleteParameter",
    "access": "public",
    "description": null,
    "lineNumber": 109,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "paramName",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 269,
    "kind": "file",
    "name": "app/View/codeView/codeEditViews/CodePipeView.js",
    "content": "import CodeEditView from './CodeEditView.js';\r\n\r\nexport default class CodePipeView extends CodeEditView {\r\n\r\n  constructor(editor) {\r\n    super(editor);\r\n  }\r\n  //change the name.\r\n  changeName(oldWord, newWord) {\r\n    let changed = this.changeNameCode('<[\\\\S]*?[^\"/][pP]ipe(\\\\n\\\\t*)?\\\\s?name=\"\\\\w*\"', oldWord, newWord);\r\n    if (changed) {\r\n      this.changeNameCode('<forward(\\\\n\\\\t*)?(\\\\s\\\\w*=\"(\\\\s?\\\\S)*\"(\\\\n\\\\t*)?)*\\\\/>', oldWord, newWord);\r\n    }\r\n  }\r\n\r\n  //change the name of an pipe or forward\r\n  changeNameCode(reg, oldWord, newWord) {\r\n    let cur = this;\r\n    let editor = this.editor;\r\n    let changed = false;\r\n    let attributeObjectRegex = reg;\r\n    let matches = editor.getModel().findMatches(attributeObjectRegex, false, true, false, false);\r\n    matches.forEach(function(item, index) {\r\n      let pipe = editor.getModel().getValueInRange(item.range);\r\n      if (pipe.split('\"').find(word => word === oldWord)) {\r\n        let newPipe = pipe.replace(new RegExp(oldWord, 'g'), newWord);\r\n        changed = true;\r\n        cur.edit(item.range, newPipe);\r\n      }\r\n    });\r\n    return changed;\r\n  }\r\n\r\n  //select a pipe.\r\n  selectPipe(name) {\r\n    let cur = this,\r\n      attributeObjectRegex = '<[\\\\S]*?[^\"/][pP]ipe[\\\\s\\\\t\\\\n][^]*?>[^]*?<[/][\\\\S]*?[^\"/]Pipe>',\r\n      selectPipe = null,\r\n      matches = this.editor.getModel().findMatches(attributeObjectRegex, false, true, false, false);\r\n\r\n    matches.forEach(function(item, index) {\r\n      let pipe = cur.editor.getModel().getValueInRange(item.range);\r\n      if (pipe.match('name=\"' + name + '\"', 'g') !== null) {\r\n        selectPipe = item.range;\r\n      }\r\n    });\r\n    if (selectPipe == null) {\r\n      return selectPipe;\r\n    }\r\n    this.decorations = this.editor.deltaDecorations([], [{\r\n      range: selectPipe,\r\n      options: {\r\n        inlineClassName: 'highlightColor'\r\n      }\r\n    }]);\r\n  }\r\n\r\n  //change the class type of a pipe\r\n  changePipeType(name, type, oldType) {\r\n    let cur = this,\r\n      attributeObjectRegex = '<[\\\\S]*?[^\"/][pP]ipe[\\\\s\\\\t\\\\n][^]*?>[^]*?<[/][\\\\S]*?[^\"/]Pipe>',\r\n      selectPipe = null,\r\n      matches = this.editor.getModel().findMatches(attributeObjectRegex, false, true, false, false);\r\n    \r\n      console.log(name, type, oldType)\r\n\r\n    matches.forEach(function(item, index) {\r\n      let pipe = cur.editor.getModel().getValueInRange(item.range);\r\n      if (pipe.match('<' + oldType + '[^]*? name=\"' + name + '\"') !== null) {\r\n        pipe = pipe.replace(new RegExp(oldType, 'g'), type);\r\n        cur.edit(item.range, pipe);\r\n      }\r\n    })\r\n  }\r\n\r\n  //change possition for pipes\r\n  changePossition(name, newX, newY) {\r\n    let cur = this;\r\n    let attributeObjectRegex = '<[\\\\S]*?[^\"/][pP]ipe[\\\\s\\\\t\\\\n][^]*?>|Receiver[\\\\s\\\\t\\\\n][^]*?>';\r\n    let matches = this.editor.getModel().findMatches(attributeObjectRegex, false, true, false, false);\r\n    name = name.replace('(receiver): ', '');\r\n    matches.forEach(function(item, index) {\r\n      let pipe = cur.editor.getModel().getValueInRange(item.range);\r\n      if (pipe.match('name=\"' + name + '\"')) {\r\n        let newPipe = \"\";\r\n        if (pipe.split(/[\\s=]/).find(word => word == 'x')) {\r\n          pipe = pipe.replace(new RegExp('x=\"[0-9]*\"', 'g'), 'x=\"' + newX + '\"');\r\n          pipe = pipe.replace(new RegExp('y=\"[0-9]*\"', 'g'), 'y=\"' + newY + '\"');\r\n        } else {\r\n          let str = ' x=\"' + newX + '\" y=\"' + newY + '\"';\r\n          if (pipe.indexOf('/>') != -1) {\r\n            pipe = pipe.slice(0, pipe.indexOf('/')) + str + pipe.slice(pipe.indexOf('/'));\r\n          } else {\r\n            pipe = pipe.slice(0, pipe.indexOf('>')) + str + pipe.slice(pipe.indexOf('>'));\r\n          }\r\n        }\r\n        cur.edit(item.range, pipe);\r\n      }\r\n    });\r\n  }\r\n\r\n  //add a forward\r\n  changeAddForward(name, path) {\r\n    let cur = this;\r\n    let attributeObjectRegex = '<[\\\\S]*?[^\"/][pP]ipe[\\\\s\\\\t\\\\n][^]*?>[^]*?<[/][\\\\S]*?[^\"/]Pipe>';\r\n    let matches = this.editor.getModel().findMatches(attributeObjectRegex, false, true, false, false);\r\n    matches.forEach(function(item, index) {\r\n      let pipe = cur.editor.getModel().getValueInRange(item.range);\r\n      if (pipe.split(/[\\s>]/).find(word => word === 'name=\"' + name + '\"')) {\r\n        pipe = pipe.slice(0, pipe.search(/<[/][\\S]*?[^\"/]Pipe/)) + '\\t<Forward name=\"success\" path=\"' + path + '\"/>';\r\n        let newLineRange = {\r\n          endColumn: 1,\r\n          endLineNumber: item.range.endLineNumber,\r\n          startColumn: 1,\r\n          startLineNumber: item.range.endLineNumber\r\n        }\r\n        cur.edit(newLineRange, '\\n');\r\n        cur.edit(item.range, pipe);\r\n      }\r\n    });\r\n  }\r\n\r\n  //delete a forward to an pipe.\r\n  deleteForward(name, path) {\r\n    let cur = this;\r\n    let attributeObjectRegex = '<[\\\\S]*?[^\"/][pP]ipe[\\\\s\\\\t\\\\n][^]*?>[^]*?<[/][\\\\S]*?[^\"/]Pipe>';\r\n    let matches = this.editor.getModel().findMatches(attributeObjectRegex, false, true, false, false);\r\n    matches.forEach(function(item, index) {\r\n      let pipe = cur.editor.getModel().getValueInRange(item.range);\r\n      if (pipe.split(/[\\s>]/).find(word => word === 'name=\"' + name + '\"')) {\r\n        path.toLowerCase() == \"exit\" ? path = \"Exit\" : path = path;\r\n        let newPipe = pipe.replace(new RegExp('<Forward[^/]*?path=\"' + path + '\"[^]*?/>', 'gi'), \"\");\r\n        cur.edit(item.range, newPipe);\r\n      }\r\n    });\r\n  }\r\n\r\n  // a method to add a pipe by hand.\r\n  changeAddPipe(name, possitions, className = \"customPipe\") {\r\n    let cur = this;\r\n    let adapterName = $('#canvas').text().match(/Adapter:\\s.*?\\s/g)[0].replace(/Adapter:\\s/g, '').replace(' ', '');\r\n    let attributeObjectRegex = '<Adapter name=\"' + localStorage.getItem(\"currentAdapter\") + '\"[\\\\s\\\\S\\\\n]*?<Exit';\r\n    let matchString = this.editor.getModel().getValue().match(attributeObjectRegex);\r\n\r\n    //'<Exit';\r\n    let matches = this.editor.getModel().findMatches(attributeObjectRegex, false, true, false, false);\r\n    matches.some(function(item, index) {\r\n      let range = item.range;\r\n      range.startColumn = 1;\r\n      range.endColumn = 1;\r\n      range.startLineNumber = range.endLineNumber\r\n      cur.edit(range, '\\n');\r\n\r\n      let newPipe = '\\t\\t\\t<' + className + ' name=\"' + name + '\" x=\"' + possitions.x + '\" y=\"' + possitions.y + '\">\\n\\n\\t\\t\\t</' + className + '>\\n';\r\n      cur.edit(range, newPipe);\r\n      return true;\r\n    });\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/codeView/codeEditViews/CodePipeView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 270,
    "kind": "class",
    "name": "CodePipeView",
    "memberof": "app/View/codeView/codeEditViews/CodePipeView.js",
    "static": true,
    "longname": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/codeView/codeEditViews/CodePipeView.js",
    "importStyle": "CodePipeView",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "app/View/codeView/codeEditViews/CodeEditView.js~CodeEditView"
    ]
  },
  {
    "__docId__": 271,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 272,
    "kind": "method",
    "name": "changeName",
    "memberof": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView#changeName",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "oldWord",
        "types": [
          "*"
        ]
      },
      {
        "name": "newWord",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 273,
    "kind": "method",
    "name": "changeNameCode",
    "memberof": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView#changeNameCode",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "reg",
        "types": [
          "*"
        ]
      },
      {
        "name": "oldWord",
        "types": [
          "*"
        ]
      },
      {
        "name": "newWord",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 274,
    "kind": "method",
    "name": "selectPipe",
    "memberof": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView#selectPipe",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 275,
    "kind": "member",
    "name": "decorations",
    "memberof": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView",
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView#decorations",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 276,
    "kind": "method",
    "name": "changePipeType",
    "memberof": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView#changePipeType",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "type",
        "types": [
          "*"
        ]
      },
      {
        "name": "oldType",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 277,
    "kind": "method",
    "name": "changePossition",
    "memberof": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView#changePossition",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "newX",
        "types": [
          "*"
        ]
      },
      {
        "name": "newY",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 278,
    "kind": "method",
    "name": "changeAddForward",
    "memberof": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView#changeAddForward",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "path",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 279,
    "kind": "method",
    "name": "deleteForward",
    "memberof": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView#deleteForward",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "path",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 280,
    "kind": "method",
    "name": "changeAddPipe",
    "memberof": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodePipeView.js~CodePipeView#changeAddPipe",
    "access": "public",
    "description": null,
    "lineNumber": 139,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "possitions",
        "types": [
          "*"
        ]
      },
      {
        "name": "className",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "customPipe",
        "defaultValue": "customPipe"
      }
    ],
    "return": null
  },
  {
    "__docId__": 281,
    "kind": "file",
    "name": "app/View/codeView/codeEditViews/CodeTypesView.js",
    "content": "export default class CodeTypesView {\r\n  constructor(editor) {\r\n    this.editor = editor;\r\n  }\r\n\r\n  //gives back the types of pipes with the name of the pipe.\r\n  getTypes() {\r\n    let types = {},\r\n      value = this.editor.getValue(),\r\n      occurences = value.match(/<[\\S]*?[^\"/][pP]ipe[\\s\\t\\n][^]*?>[^]*?<[/][\\S]*?[^\"/]Pipe>/g),\r\n      name,\r\n      type = null;\r\n    let receiver = value.match(/<Receiver[^]*?name=\".*?\"[^]*?>/g);\r\n    if (receiver != null) {\r\n      receiver = receiver[0].match(/\".*?\"/g)[0].replace(/\"/g, '');\r\n    } else {\r\n      receiver = 'NO_RECEIVER_FOUND'\r\n    }\r\n    types['receiver ' + receiver] = \"Receiver\";\r\n    occurences.forEach(function(item, index) {\r\n      item = item.replace(/</g, '')\r\n      if (item.search(/[^/][\\S]*?[^\"/]Pipe[^]*?name=\".*?\"/) > -1) {\r\n        if (item.charAt(0) != '/') {\r\n          let tag = item.slice(item.search(/[^/][\\S]*?[^\"/]Pipe[^]*?name=\".*?\"/));\r\n          if (tag.match(/name=\".*?\"/) != null) {\r\n            name = tag.match(/name=\".*?\"/)[0].match(/\".*?\"/)[0].replace(/\"/g, '');\r\n          }\r\n          if (tag.match(/[^]*?Pipe/) != null) {\r\n            type = tag.match(/[^]*?Pipe/)[0];\r\n          }\r\n          if (item.match(/[^<>]*?Sender(?!Pipe) /g) != null) {\r\n            type = item.match(/[^<>]*?Sender(?!Pipe) /g)[0];\r\n          }\r\n          if (type !== null && name !== null) {\r\n            types[name] = type;\r\n          }\r\n        }\r\n      }\r\n    })\r\n    return types;\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/codeView/codeEditViews/CodeTypesView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 282,
    "kind": "class",
    "name": "CodeTypesView",
    "memberof": "app/View/codeView/codeEditViews/CodeTypesView.js",
    "static": true,
    "longname": "app/View/codeView/codeEditViews/CodeTypesView.js~CodeTypesView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/codeView/codeEditViews/CodeTypesView.js",
    "importStyle": "CodeTypesView",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 283,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/codeView/codeEditViews/CodeTypesView.js~CodeTypesView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeTypesView.js~CodeTypesView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 284,
    "kind": "member",
    "name": "editor",
    "memberof": "app/View/codeView/codeEditViews/CodeTypesView.js~CodeTypesView",
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeTypesView.js~CodeTypesView#editor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "getTypes",
    "memberof": "app/View/codeView/codeEditViews/CodeTypesView.js~CodeTypesView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/CodeTypesView.js~CodeTypesView#getTypes",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 286,
    "kind": "file",
    "name": "app/View/codeView/codeEditViews/ExitPipeView.js",
    "content": "import CodeEditView from './CodeEditView.js';\r\n\r\nexport default class ExitPipeView extends CodeEditView {\r\n  constructor(editor) {\r\n    super(editor);\r\n  }\r\n\r\n  //change the possitions for the exits\r\n  changeExitPossition(name, newX, newY) {\r\n    let cur = this,\r\n      adapterName = $('#canvas').text().match(/Adapter:\\s.*?\\s/g)[0].replace(/Adapter:\\s/g, '').replace(' ', ''),\r\n      attributeObjectRegex = '<Adapter[^>]*? name=\"' + localStorage.getItem(\"currentAdapter\") + '\"[\\\\s\\\\S\\\\n]*?<Exit [^]*?path=\"' + name + '\"[^]*?\\\\/>',\r\n      matches = this.editor.getModel().findMatches(attributeObjectRegex, false, true, false, false);\r\n\r\n    matches.forEach(function(item, index) {\r\n      let exit = cur.editor.getModel().getValueInRange(item.range);\r\n      exit = exit.match('<Exit [^>]*?path=\"' + name + '\"[^]*?\\\\/>')[0];\r\n      if (exit.indexOf('path=\"' + name + '\"') != -1) {\r\n        if (exit.indexOf('x=\"') != -1) {\r\n          exit = '\\t\\t' + exit.replace(/x=\"[0-9]*?\"/g, 'x=\"' + newX + '\"')\r\n            .replace(/y=\"[0-9]*?\"/g, 'y=\"' + newY + '\"');\r\n        } else {\r\n          let str = ' x=\"' + newX + '\" y=\"' + newY + '\"'\r\n          exit = '\\t\\t' + exit.slice(0, exit.indexOf('/')) + str + exit.slice(exit.indexOf('/'));\r\n        }\r\n        item.range.startLineNumber = item.range.endLineNumber;\r\n        cur.edit(item.range, exit);\r\n      }\r\n    });\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/codeView/codeEditViews/ExitPipeView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 287,
    "kind": "class",
    "name": "ExitPipeView",
    "memberof": "app/View/codeView/codeEditViews/ExitPipeView.js",
    "static": true,
    "longname": "app/View/codeView/codeEditViews/ExitPipeView.js~ExitPipeView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/codeView/codeEditViews/ExitPipeView.js",
    "importStyle": "ExitPipeView",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false,
    "extends": [
      "app/View/codeView/codeEditViews/CodeEditView.js~CodeEditView"
    ]
  },
  {
    "__docId__": 288,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/codeView/codeEditViews/ExitPipeView.js~ExitPipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/ExitPipeView.js~ExitPipeView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 289,
    "kind": "method",
    "name": "changeExitPossition",
    "memberof": "app/View/codeView/codeEditViews/ExitPipeView.js~ExitPipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/ExitPipeView.js~ExitPipeView#changeExitPossition",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "newX",
        "types": [
          "*"
        ]
      },
      {
        "name": "newY",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 290,
    "kind": "file",
    "name": "app/View/codeView/codeEditViews/OptionView.js",
    "content": "import CodeEditView from './CodeEditView.js';\r\nimport { css } from 'vkbeautify';\r\n\r\nexport default class OptionView extends CodeEditView {\r\n\r\n  constructor(editor) {\r\n    super(editor);\r\n  }\r\n\r\n  //add options to the dropdown.\r\n  addOptions(adapters) {\r\n    let urlParams = new URLSearchParams(window.location.search);\r\n    let select = $('#adapterSelect'),\r\n      option,\r\n      name;\r\n\r\n    $(select).empty();\r\n    adapters.forEach(function(item, index) {\r\n      name = item.match(/<Adapter[^]*?name=\".*?\"/g);\r\n      if (name != null) {\r\n        name = name[0].match(/\".*?\"/g)[0].replace(/\"/g, '');\r\n        option = $('<option></option>').attr('value', name).text(name);\r\n        $(select).append(option);\r\n      }\r\n    });\r\n\r\n    /**\r\n    check for url param and load configuration with adapter.\r\n    when no url param then load default adapter.\r\n\r\n    definition:\r\n      currentAdapter: this represents the adapter that the user is currently working in.\r\n                      When this variable changes the loaded adapter also changes.\r\n      editor:         This object represents the monaco editor and has all the crud functions necessary to chhange the code.\r\n      focusLine:      This function\r\n    */\r\n\r\n    if (urlParams.has('configuration') && urlParams.has('adapter')) {\r\n      console.log(urlParams.get('configuration').replace(/\"/g, ''), urlParams.get('adapter'));\r\n      this.editor.setValue(localStorage.getItem(\"IAF_WebControl\"));\r\n      this.editor.setValue(localStorage.getItem(urlParams.get('configuration').replace(/\"/g, '')));\r\n      localStorage.setItem('currentAdapter', urlParams.get('adapter').replace(/\"/g, ''));\r\n      this.focusLine('<Adapter[^]*? name=' + urlParams.get('adapter') + '[^]*?>');\r\n      this.stripFlow()\r\n    } else {\r\n      // localStorage.setItem('currentAdapter', 'WebControlShowConfigurationStatus');\r\n      // this.editor.setValue(localStorage.getItem(\"IAF_WebControl\"));\r\n    }\r\n  }\r\n\r\n  stripFlow() {\r\n    $('.top-wrapper').css('display', 'none');\r\n    $('#palette').css('display', 'none');\r\n    $('.pipeInfoWrapper').css('display', 'none')\r\n    $('.monaco-flow-wrapper').css('height', '100%')\r\n    $('#canvas').panzoom(\"zoom\", true, 1);\r\n    $('#canvas').panzoom(\"zoom\", true, 1);\r\n    $('#canvas').panzoom(\"pan\", -500, -300);\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/codeView/codeEditViews/OptionView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 291,
    "kind": "class",
    "name": "OptionView",
    "memberof": "app/View/codeView/codeEditViews/OptionView.js",
    "static": true,
    "longname": "app/View/codeView/codeEditViews/OptionView.js~OptionView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/codeView/codeEditViews/OptionView.js",
    "importStyle": "OptionView",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "app/View/codeView/codeEditViews/CodeEditView.js~CodeEditView"
    ]
  },
  {
    "__docId__": 292,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/codeView/codeEditViews/OptionView.js~OptionView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/OptionView.js~OptionView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 293,
    "kind": "method",
    "name": "addOptions",
    "memberof": "app/View/codeView/codeEditViews/OptionView.js~OptionView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/OptionView.js~OptionView#addOptions",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "adapters",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 294,
    "kind": "method",
    "name": "stripFlow",
    "memberof": "app/View/codeView/codeEditViews/OptionView.js~OptionView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/codeEditViews/OptionView.js~OptionView#stripFlow",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 295,
    "kind": "file",
    "name": "app/View/codeView/CodeView.js",
    "content": "import ValidateConfigurationView from './ValidateConfigurationView.js';\r\nimport CodeEditView from './codeEditViews/CodeEditView.js';\r\n// import OptionView from './codeEditViews/OptionView.js';\r\nimport CodePipeView from './codeEditViews/CodePipeView.js';\r\nimport CodeTypesView from './codeEditViews/CodeTypesView.js';\r\nimport ExitPipeView from './codeEditViews/ExitPipeView.js';\r\nimport CodeAttributesView from './codeEditViews/CodeAttributesView.js';\r\nimport CodeParametersView from './codeEditViews/CodeParametersView.js';\r\nimport XSDCodeCompletionView from './codeCompletion/XSDCodeCompletionView.js';\r\nimport * as monaco from 'monaco-editor'\r\n\r\nexport const logColor = 'background: #222; color: #bada55';\r\n\r\nexport default class CodeView {\r\n\r\n  constructor(xsdModel) {\r\n    this.listeners = [];\r\n    this.xsdModel = xsdModel;\r\n    this.decorations = null;\r\n    this.validateConfigurationView;\r\n  }\r\n\r\n  addListener(listener) {\r\n    this.listeners.push(listener);\r\n  }\r\n\r\n  notifyListeners(data) {\r\n    this.listeners.forEach(l => l.notify(data));\r\n  }\r\n\r\n  //make the editor.\r\n  makeEditor(adapter) {\r\n    this.editor = monaco.editor.create(document.getElementById('monacoContainer'), {\r\n      value: adapter,\r\n      language: 'xml',\r\n      theme: \"vs-dark\",\r\n      glyphMargin: true,\r\n      automaticLayout: true,\r\n      verticalScrollbarSize: 17,\r\n      horizontalScrollbarSize: 17,\r\n      arrowSize: 30\r\n\r\n    });\r\n\r\n    this.setGlobalVariables()\r\n\r\n    this.validateConfigurationView = new ValidateConfigurationView(this.editor, this.xsdModel);\r\n    this.codeEditView = new CodeEditView(this.editor);\r\n    this.codePipeView = new CodePipeView(this.editor);\r\n//    this.optionView = new OptionView(this.editor);\r\n    this.typesView = new CodeTypesView(this.editor);\r\n    this.exitPipeView = new ExitPipeView(this.editor);\r\n    this.codeAttributesView = new CodeAttributesView(this.editor);\r\n    this.codeParametersView = new CodeParametersView(this.editor);\r\n    this.CodeCompletionView = new XSDCodeCompletionView(monaco, this.xsdModel);\r\n  }\r\n\r\n  setGlobalVariables() {\r\n    window.PIPESREGEX = function(name) {\r\n      return '<[\\\\S]*?[^\"/][pP]ipe[\\\\s\\\\t\\\\n][^>]*?name=\"' + name + '\"[^]*?>[^]*?<[/][\\\\S]*?[^\"/]Pipe>';\r\n    }\r\n  }\r\n\r\n  // addOptions(adapters) {\r\n  //   this.optionView.addOptions(adapters);\r\n  // }\r\n\r\n  setEditorValue(value) {\r\n    this.editor.setValue(value);\r\n  }\r\n\r\n  selectPipe(name) {\r\n    this.codePipeView.selectPipe(name);\r\n  }\r\n\r\n  changePipeType(name, type, oldType) {\r\n    this.codePipeView.changePipeType(name, type, oldType);\r\n  }\r\n\r\n  changeName(oldWord, newWord) {\r\n    this.codePipeView.changeName(oldWord, newWord);\r\n  }\r\n\r\n  changePossition(name, newX, newY) {\r\n    this.codePipeView.changePossition(name, newX, newY);\r\n    // this.codeAttributesView.changeAttribute(name, 'x', newX);\r\n    // this.codeAttributesView.changeAttribute(name, 'y', newY);\r\n  }\r\n\r\n  changeExitPossition(name, newX, newY) {\r\n    this.exitPipeView.changeExitPossition(name, newX, newY);\r\n  }\r\n\r\n  changeAddForward(name, path) {\r\n    this.codePipeView.changeAddForward(name, path);\r\n  }\r\n\r\n  deleteForward(name, path) {\r\n    this.codePipeView.deleteForward(name, path);\r\n  }\r\n\r\n  changeAddPipe(name, possitions, className = \"customPipe\") {\r\n    this.codePipeView.changeAddPipe(name, possitions, className);\r\n  }\r\n\r\n  getTypes() {\r\n    return this.typesView.getTypes();\r\n  }\r\n\r\n  getAttributes(name) {\r\n    return this.codeAttributesView.getAttributes(name);\r\n  }\r\n\r\n  getParameters(name) {\r\n    return this.codeParametersView.getParameters(name);\r\n  }\r\n\r\n  changeAttribute(pipeName, attribute, attributeValue) {\r\n    this.codeAttributesView.changeAttribute(pipeName, attribute, attributeValue);\r\n  }\r\n\r\n  addAttribute(pipeName, attribute) {\r\n    this.codeAttributesView.addAttribute(pipeName, attribute);\r\n  }\r\n  deleteAttribute(pipeName, attribute) {\r\n    this.codeAttributesView.deleteAttribute(pipeName, attribute);\r\n  }\r\n\r\n  addParameter(pipeName, paramName) {\r\n    this.codeParametersView.addParameter(pipeName, paramName);\r\n  }\r\n\r\n  deleteParameter(pipeName, paramName) {\r\n    this.codeParametersView.deleteParameter(pipeName, paramName);\r\n  }\r\n\r\n  addParameterAttribute(pipeName, paramName, attribute) {\r\n    this.codeParametersView.addParameterAttribute(pipeName, paramName, attribute);\r\n  }\r\n\r\n  changeParameterAttribute(pipeName, paramName, attribute, value) {\r\n    this.codeParametersView.changeParameterAttribute(pipeName, paramName, attribute, value);\r\n  }\r\n}",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/codeView/CodeView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 296,
    "kind": "variable",
    "name": "logColor",
    "memberof": "app/View/codeView/CodeView.js",
    "static": true,
    "longname": "app/View/codeView/CodeView.js~logColor",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/codeView/CodeView.js",
    "importStyle": "{logColor}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 297,
    "kind": "class",
    "name": "CodeView",
    "memberof": "app/View/codeView/CodeView.js",
    "static": true,
    "longname": "app/View/codeView/CodeView.js~CodeView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/codeView/CodeView.js",
    "importStyle": "CodeView",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 298,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 299,
    "kind": "member",
    "name": "listeners",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#listeners",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 300,
    "kind": "member",
    "name": "xsdModel",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#xsdModel",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 301,
    "kind": "member",
    "name": "decorations",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#decorations",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "method",
    "name": "addListener",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#addListener",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "listener",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 303,
    "kind": "method",
    "name": "notifyListeners",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#notifyListeners",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 304,
    "kind": "method",
    "name": "makeEditor",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#makeEditor",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "params": [
      {
        "name": "adapter",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 305,
    "kind": "member",
    "name": "editor",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#editor",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 306,
    "kind": "member",
    "name": "validateConfigurationView",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#validateConfigurationView",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 307,
    "kind": "member",
    "name": "codeEditView",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#codeEditView",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 308,
    "kind": "member",
    "name": "codePipeView",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#codePipeView",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 309,
    "kind": "member",
    "name": "typesView",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#typesView",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 310,
    "kind": "member",
    "name": "exitPipeView",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#exitPipeView",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 311,
    "kind": "member",
    "name": "codeAttributesView",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#codeAttributesView",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 312,
    "kind": "member",
    "name": "codeParametersView",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#codeParametersView",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 313,
    "kind": "member",
    "name": "CodeCompletionView",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#CodeCompletionView",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 314,
    "kind": "method",
    "name": "setGlobalVariables",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#setGlobalVariables",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 315,
    "kind": "method",
    "name": "setEditorValue",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#setEditorValue",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 316,
    "kind": "method",
    "name": "selectPipe",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#selectPipe",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 317,
    "kind": "method",
    "name": "changePipeType",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#changePipeType",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "type",
        "types": [
          "*"
        ]
      },
      {
        "name": "oldType",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 318,
    "kind": "method",
    "name": "changeName",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#changeName",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "params": [
      {
        "name": "oldWord",
        "types": [
          "*"
        ]
      },
      {
        "name": "newWord",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 319,
    "kind": "method",
    "name": "changePossition",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#changePossition",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "newX",
        "types": [
          "*"
        ]
      },
      {
        "name": "newY",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 320,
    "kind": "method",
    "name": "changeExitPossition",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#changeExitPossition",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "newX",
        "types": [
          "*"
        ]
      },
      {
        "name": "newY",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 321,
    "kind": "method",
    "name": "changeAddForward",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#changeAddForward",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "path",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 322,
    "kind": "method",
    "name": "deleteForward",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#deleteForward",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "path",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 323,
    "kind": "method",
    "name": "changeAddPipe",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#changeAddPipe",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "possitions",
        "types": [
          "*"
        ]
      },
      {
        "name": "className",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "customPipe",
        "defaultValue": "customPipe"
      }
    ],
    "return": null
  },
  {
    "__docId__": 324,
    "kind": "method",
    "name": "getTypes",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#getTypes",
    "access": "public",
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 325,
    "kind": "method",
    "name": "getAttributes",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#getAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 326,
    "kind": "method",
    "name": "getParameters",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#getParameters",
    "access": "public",
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 327,
    "kind": "method",
    "name": "changeAttribute",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#changeAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 118,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      },
      {
        "name": "attributeValue",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 328,
    "kind": "method",
    "name": "addAttribute",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#addAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 122,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 329,
    "kind": "method",
    "name": "deleteAttribute",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#deleteAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 330,
    "kind": "method",
    "name": "addParameter",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#addParameter",
    "access": "public",
    "description": null,
    "lineNumber": 129,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "paramName",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 331,
    "kind": "method",
    "name": "deleteParameter",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#deleteParameter",
    "access": "public",
    "description": null,
    "lineNumber": 133,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "paramName",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 332,
    "kind": "method",
    "name": "addParameterAttribute",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#addParameterAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "paramName",
        "types": [
          "*"
        ]
      },
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 333,
    "kind": "method",
    "name": "changeParameterAttribute",
    "memberof": "app/View/codeView/CodeView.js~CodeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/CodeView.js~CodeView#changeParameterAttribute",
    "access": "public",
    "description": null,
    "lineNumber": 141,
    "undocument": true,
    "params": [
      {
        "name": "pipeName",
        "types": [
          "*"
        ]
      },
      {
        "name": "paramName",
        "types": [
          "*"
        ]
      },
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 334,
    "kind": "file",
    "name": "app/View/codeView/FileTreeView.js",
    "content": "import JSZip from 'jszip';\r\nimport OptionView from './codeEditViews/OptionView.js';\r\nimport fileTree from '../../../fileTree/dist/js/file-tree.min.js';\r\n\r\nexport default class FileTreeView {\r\n  constructor(editor, codeService) {\r\n    this.editor = editor;\r\n    this.codeService = codeService;\r\n    this.fileData = null;\r\n    this.addedFileCounter = 0;\r\n    this.optionView = new OptionView(this.editor);\r\n  }\r\n\r\n  makeTree(input) {\r\n    localStorage.removeItem('changedFiles');\r\n    localStorage.removeItem('currentFile');\r\n    $('#fileTreeItems').empty();\r\n\r\n    console.log(input)\r\n\r\n    let structure = [];\r\n\r\n    input.forEach((item, index) => {\r\n      let obj = {\r\n        id: 'dir' + index,\r\n        name: item,\r\n        type: 'file'\r\n      }\r\n      structure.push(obj);\r\n    });\r\n\r\n    //generate the tree.\r\n    $('#fileTreeItems').fileTree({\r\n      data: structure,\r\n      sortable: false,\r\n      selectable: true\r\n    });\r\n    \r\n    //make the file tree resizable.\r\n    this.makeFileTreeResizeable()\r\n    this.setSaveFileEventListener();\r\n  }\r\n\r\n  setSaveFileEventListener() {\r\n    let cur = this;\r\n    $('.file').on(\"click\", function (e) {\r\n      let path = e.delegateTarget.attributes[3].nodeValue;\r\n      console.log(\"path to single file: \" + path);\r\n      cur.codeService.getSingleFile(path);\r\n    });\r\n  }\r\n\r\n  generateAdapters() {\r\n    let currentConfig = localStorage.getItem(\"currentFile\");\r\n    currentConfig = localStorage.getItem(currentConfig)\r\n\r\n    let adapters = currentConfig.match(/<Adapter[^]*?>[^]*?<\\/Adapter>/g);\r\n\r\n    this.optionView.addOptions(adapters);\r\n  }\r\n\r\n\r\n  addFile(path) {\r\n    const defaultConfig = '<Configuration name=\"Example1\">\\n' +\r\n      '\\t<Adapter name=\"Example1Adapter\"> \\n' +\r\n      '\\t\\t<Receiver name=\"Example1Receiver\"> \\n' +\r\n      '\\t\\t\\t<JavaListener name=\"Example1\" serviceName=\"Example1\" />\\n' +\r\n      '\\t\\t</Receiver>\\n' +\r\n      '\\t\\t<Pipeline firstPipe=\"Example\">\\n' +\r\n      '\\t\\t\\t<FixedResultPipe name=\"Example\" returnString=\"Hello World1\">\\n' +\r\n      '\\t\\t\\t\\t<Forward name=\"success\" path=\"EXIT\"/> \\n' +\r\n      '\\t\\t\\t</FixedResultPipe> \\n' +\r\n      '\\t\\t\\t<Exit path=\"EXIT\" state=\"success\" /> \\n' +\r\n      '\\t\\t</Pipeline> \\n' +\r\n      '\\t</Adapter>\\n' +\r\n      '</Configuration>\\n';\r\n\r\n    let addedFileCounter = this.addedFileCounter;\r\n\r\n    let obj = {\r\n      id: path + 'newFile' + addedFileCounter, //TODO: add custom id\r\n      name: (path + \"newFile\" + addedFileCounter),\r\n      type: 'file'\r\n    }\r\n\r\n    this.fileData[0].children.push(obj);\r\n    let data = this.fileData;\r\n\r\n    this.reloadTree(data)\r\n\r\n    localStorage.setItem((path + \"newFile\" + addedFileCounter), defaultConfig)\r\n    this.zip.file((path + \"newFile\" + addedFileCounter), defaultConfig);\r\n    this.setSaveFileEventListener();\r\n    this.addedFileCounter++;\r\n  }\r\n\r\n  reloadTree(data) {\r\n    $('#fileTreeItems').empty();\r\n\r\n    $('#fileTreeItems').fileTree({\r\n      data: data,\r\n      sortable: false,\r\n      selectable: true\r\n    });\r\n  }\r\n\r\n\r\n  renameFile(path, newPath) {\r\n    let currentFile = localStorage.getItem(\"currentFile\");\r\n    if (currentFile != null) {\r\n      let arr = JSON.parse(localStorage.getItem(\"changedFiles\"));\r\n      let index = arr.indexOf(currentFile);\r\n      console.log(\"rename\", index, currentFile, arr);\r\n      if (index > -1) {\r\n        arr.splice(index, 1);\r\n      }\r\n      localStorage.setItem(\"changedFiles\", JSON.stringify(arr));\r\n    }\r\n    localStorage.setItem(\"currentFile\", newPath);\r\n\r\n    const fileData = localStorage.getItem(path);\r\n    let prependedPath = path.match(/[^]+\\/+/g)[0];\r\n    console.log(prependedPath, newPath)\r\n    this.zip.remove(path);\r\n    this.zip.file(prependedPath + newPath, fileData);\r\n\r\n    localStorage.removeItem(path);\r\n    localStorage.setItem(prependedPath + newPath, fileData);\r\n\r\n    let fileTree = []\r\n    this.prepareFileTree(this.zip, fileTree);\r\n    $('#fileTreeItems').empty();\r\n    this.generateTree(fileTree);\r\n    this.setSaveFileEventListener();\r\n  }\r\n\r\n  deleteFile(path) {\r\n    if (path != null) {\r\n      let arr = JSON.parse(localStorage.getItem(\"changedFiles\"));\r\n      let index = arr.indexOf(path);\r\n      console.log('delete', index, path)\r\n      if (index > -1) {\r\n        arr.splice(index, 1);\r\n      }\r\n      localStorage.setItem(\"changedFiles\", JSON.stringify(arr));\r\n    }\r\n\r\n    localStorage.removeItem(path);\r\n    this.zip.remove(path);\r\n\r\n    let fileTree = []\r\n    this.prepareFileTree(this.zip, fileTree);\r\n    $('#fileTreeItems').empty();\r\n    this.generateTree(fileTree);\r\n    this.setSaveFileEventListener();\r\n\r\n  }\r\n\r\n  makeFileTreeResizeable() {\r\n    let cur = this;\r\n    $('#filePaletteWrapper').mousedown(function (e) {\r\n      if (parseInt($(this).css('width')) - 10 <= e.offsetX) {\r\n        cur.resize = true;\r\n      }\r\n    });\r\n\r\n    $('#filePaletteWrapper').mouseup(function (e) {\r\n      cur.resize = false;\r\n    })\r\n\r\n    $('#filePaletteWrapper').mousemove(function (e) {\r\n      if (parseInt($(this).css('width')) - 10 <= e.offsetX) {\r\n        $('#filePaletteWrapper').css('cursor', 'e-resize');\r\n      } else {\r\n        $('#filePaletteWrapper').css('cursor', 'auto');\r\n      }\r\n\r\n      if (cur.resize) {\r\n        $(this).css('width', e.offsetX);\r\n      }\r\n    });\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/codeView/FileTreeView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 335,
    "kind": "class",
    "name": "FileTreeView",
    "memberof": "app/View/codeView/FileTreeView.js",
    "static": true,
    "longname": "app/View/codeView/FileTreeView.js~FileTreeView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/codeView/FileTreeView.js",
    "importStyle": "FileTreeView",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 336,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/codeView/FileTreeView.js~FileTreeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/FileTreeView.js~FileTreeView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 337,
    "kind": "member",
    "name": "editor",
    "memberof": "app/View/codeView/FileTreeView.js~FileTreeView",
    "static": false,
    "longname": "app/View/codeView/FileTreeView.js~FileTreeView#editor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 338,
    "kind": "member",
    "name": "codeService",
    "memberof": "app/View/codeView/FileTreeView.js~FileTreeView",
    "static": false,
    "longname": "app/View/codeView/FileTreeView.js~FileTreeView#codeService",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 339,
    "kind": "member",
    "name": "fileData",
    "memberof": "app/View/codeView/FileTreeView.js~FileTreeView",
    "static": false,
    "longname": "app/View/codeView/FileTreeView.js~FileTreeView#fileData",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 340,
    "kind": "member",
    "name": "addedFileCounter",
    "memberof": "app/View/codeView/FileTreeView.js~FileTreeView",
    "static": false,
    "longname": "app/View/codeView/FileTreeView.js~FileTreeView#addedFileCounter",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 341,
    "kind": "member",
    "name": "optionView",
    "memberof": "app/View/codeView/FileTreeView.js~FileTreeView",
    "static": false,
    "longname": "app/View/codeView/FileTreeView.js~FileTreeView#optionView",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 342,
    "kind": "method",
    "name": "makeTree",
    "memberof": "app/View/codeView/FileTreeView.js~FileTreeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/FileTreeView.js~FileTreeView#makeTree",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "input",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 343,
    "kind": "method",
    "name": "setSaveFileEventListener",
    "memberof": "app/View/codeView/FileTreeView.js~FileTreeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/FileTreeView.js~FileTreeView#setSaveFileEventListener",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 344,
    "kind": "method",
    "name": "generateAdapters",
    "memberof": "app/View/codeView/FileTreeView.js~FileTreeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/FileTreeView.js~FileTreeView#generateAdapters",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 345,
    "kind": "method",
    "name": "addFile",
    "memberof": "app/View/codeView/FileTreeView.js~FileTreeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/FileTreeView.js~FileTreeView#addFile",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 346,
    "kind": "method",
    "name": "reloadTree",
    "memberof": "app/View/codeView/FileTreeView.js~FileTreeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/FileTreeView.js~FileTreeView#reloadTree",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 347,
    "kind": "method",
    "name": "renameFile",
    "memberof": "app/View/codeView/FileTreeView.js~FileTreeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/FileTreeView.js~FileTreeView#renameFile",
    "access": "public",
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "newPath",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 348,
    "kind": "method",
    "name": "deleteFile",
    "memberof": "app/View/codeView/FileTreeView.js~FileTreeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/FileTreeView.js~FileTreeView#deleteFile",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 349,
    "kind": "method",
    "name": "makeFileTreeResizeable",
    "memberof": "app/View/codeView/FileTreeView.js~FileTreeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/FileTreeView.js~FileTreeView#makeFileTreeResizeable",
    "access": "public",
    "description": null,
    "lineNumber": 159,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 350,
    "kind": "file",
    "name": "app/View/codeView/ToBeautifulSyntax.js",
    "content": "export default class ToBeautifulSyntax {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  //convert ugly ibis code to beautiful syntax.\r\n  toBeautifulSyntax(xml) {\r\n\r\n    let matches = xml.match(/<pipe(\\n\\t*)?(\\s\\w*=\"(\\s?\\S)*\"(\\n\\t*)?)*>[^]*?<\\/pipe>/g),\r\n      doc = xml,\r\n      exits;\r\n\r\n    if (matches == null) return xml;\r\n\r\n    matches.forEach(function(item, index) {\r\n\r\n      let oldPipe = item,\r\n        newPipe = \"\";\r\n\r\n      let className = oldPipe.match(/className=\".*?\"/)[0].match(/\\.[^.]*?\"/)[0].replace(/[\".]/g, '');\r\n\r\n      if (className.match(/.*?Pipe/) == null) {\r\n        className = className + 'Pipe';\r\n      }\r\n\r\n      newPipe = oldPipe.replace(/className=\".*?\"/g, '');\r\n      newPipe = newPipe.replace(/<pipe/g, '<' + className)\r\n                       .replace(/<\\/pipe>/, '</' + className + '>')\r\n\r\n      doc = doc.replace(oldPipe, newPipe);\r\n    });\r\n\r\n    doc = doc.replace(/<listener[^]*?className=\".*?\"[^]*?\\/>/g, function(txt) {\r\n\r\n        let className = txt.match(/className=\".*?\"/)[0].match(/\\.[^.]*?\"/)[0].replace(/[\".]/g, '');\r\n\r\n        txt = txt.replace(/className=\".*?\"/g, '');\r\n        txt = '<' + txt.replace(/<.*? /g, className + \" \");\r\n        return txt;\r\n      })\r\n      \r\n      .replace(/<[\\/]?[a-zA-Z]/g, function(txt) {\r\n        return txt.toUpperCase()\r\n      });\r\n\r\n    exits = doc.match(/<Exits>[^]*?<\\/Exits>/)[0].replace(/<\\/?Exits>/g, '').replace(/\\t/, '');\r\n    doc = doc.replace(/<Exits>[^]*?<\\/Exits>/g, '')\r\n      .replace(/<\\/Pipeline>/g, exits + '\\n \\t\\t</Pipeline>')\r\n      .replace(/className=\".*?\"/g, \"\");\r\n    \r\n    return doc;\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/codeView/ToBeautifulSyntax.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 351,
    "kind": "class",
    "name": "ToBeautifulSyntax",
    "memberof": "app/View/codeView/ToBeautifulSyntax.js",
    "static": true,
    "longname": "app/View/codeView/ToBeautifulSyntax.js~ToBeautifulSyntax",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/codeView/ToBeautifulSyntax.js",
    "importStyle": "ToBeautifulSyntax",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 352,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/codeView/ToBeautifulSyntax.js~ToBeautifulSyntax",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/ToBeautifulSyntax.js~ToBeautifulSyntax#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 353,
    "kind": "method",
    "name": "toBeautifulSyntax",
    "memberof": "app/View/codeView/ToBeautifulSyntax.js~ToBeautifulSyntax",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/ToBeautifulSyntax.js~ToBeautifulSyntax#toBeautifulSyntax",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "xml",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 354,
    "kind": "file",
    "name": "app/View/codeView/ValidateConfigurationView.js",
    "content": "//import * as xmllint from 'xmllint';\r\n\r\nexport default class ValidateConfigurationView {\r\n\r\n  constructor(editor, xsdModel) {\r\n    this.editor = editor\r\n    this.xsdModel = xsdModel;\r\n  }\r\n  //validate the configuration.\r\n  validateConfiguration() {\r\n    let cur = this;\r\n    let validate = xmllint.validateXML({\r\n      xml: cur.editor.getValue().replace(/\\sx=\".*?\"/g, '').replace(/\\sy=\".*?\"/g, ''),\r\n      schema: cur.xsdModel.xsd,\r\n      TOTAL_MEMORY: 16777217\r\n    });\r\n    return validate;\r\n  }\r\n\r\n  decorateLine(lineNumber) {\r\n    this.decorations = this.editor.deltaDecorations([], [{\r\n      range: new monaco.Range(lineNumber, 1, lineNumber, 1),\r\n      options: {\r\n        glyphMarginClassName: 'myGlyphMarginClass'\r\n      }\r\n    }]);\r\n  }\r\n\r\n  //undo all decorations.\r\n  undoDecorations() {\r\n    this.decorations = this.editor.deltaDecorations(this.editor.getModel().getAllDecorations(), [{\r\n      range: new monaco.Range(1, 1, 1, 1),\r\n      options: {}\r\n    }]);\r\n    this.editor.getModel().setValue(this.editor.getModel().getValue());\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/codeView/ValidateConfigurationView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 355,
    "kind": "class",
    "name": "ValidateConfigurationView",
    "memberof": "app/View/codeView/ValidateConfigurationView.js",
    "static": true,
    "longname": "app/View/codeView/ValidateConfigurationView.js~ValidateConfigurationView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/codeView/ValidateConfigurationView.js",
    "importStyle": "ValidateConfigurationView",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 356,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/codeView/ValidateConfigurationView.js~ValidateConfigurationView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/ValidateConfigurationView.js~ValidateConfigurationView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 357,
    "kind": "member",
    "name": "editor",
    "memberof": "app/View/codeView/ValidateConfigurationView.js~ValidateConfigurationView",
    "static": false,
    "longname": "app/View/codeView/ValidateConfigurationView.js~ValidateConfigurationView#editor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 358,
    "kind": "member",
    "name": "xsdModel",
    "memberof": "app/View/codeView/ValidateConfigurationView.js~ValidateConfigurationView",
    "static": false,
    "longname": "app/View/codeView/ValidateConfigurationView.js~ValidateConfigurationView#xsdModel",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 359,
    "kind": "method",
    "name": "validateConfiguration",
    "memberof": "app/View/codeView/ValidateConfigurationView.js~ValidateConfigurationView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/ValidateConfigurationView.js~ValidateConfigurationView#validateConfiguration",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 360,
    "kind": "method",
    "name": "decorateLine",
    "memberof": "app/View/codeView/ValidateConfigurationView.js~ValidateConfigurationView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/ValidateConfigurationView.js~ValidateConfigurationView#decorateLine",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "lineNumber",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 361,
    "kind": "member",
    "name": "decorations",
    "memberof": "app/View/codeView/ValidateConfigurationView.js~ValidateConfigurationView",
    "static": false,
    "longname": "app/View/codeView/ValidateConfigurationView.js~ValidateConfigurationView#decorations",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 362,
    "kind": "method",
    "name": "undoDecorations",
    "memberof": "app/View/codeView/ValidateConfigurationView.js~ValidateConfigurationView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/codeView/ValidateConfigurationView.js~ValidateConfigurationView#undoDecorations",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 364,
    "kind": "file",
    "name": "app/View/flowView/DescriptionView.js",
    "content": "export default class DescriptionView {\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  addDescription(text, possitions, id) {\r\n    let canvas = $('#canvas');\r\n    let el = $(\"<div></div>\").addClass(\"description\").attr('id', 'description' + id);\r\n    let descriptionText = $('<p></p>').text(text);\r\n    el.append(descriptionText);\r\n    console.log(\"desc Text:\" + text, possitions);\r\n    possitions.x = parseInt(possitions.x) + 300;\r\n    $(el).css('left', possitions.x + 'px');\r\n    $(el).css('top', possitions.y + 'px');\r\n    canvas.append(el);\r\n    instance.draggable(el);\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/flowView/DescriptionView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 365,
    "kind": "class",
    "name": "DescriptionView",
    "memberof": "app/View/flowView/DescriptionView.js",
    "static": true,
    "longname": "app/View/flowView/DescriptionView.js~DescriptionView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/flowView/DescriptionView.js",
    "importStyle": "DescriptionView",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 366,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/flowView/DescriptionView.js~DescriptionView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/DescriptionView.js~DescriptionView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 367,
    "kind": "method",
    "name": "addDescription",
    "memberof": "app/View/flowView/DescriptionView.js~DescriptionView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/DescriptionView.js~DescriptionView#addDescription",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      },
      {
        "name": "possitions",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 368,
    "kind": "file",
    "name": "app/View/flowView/flowGeneration/CustomElementGenerator.js",
    "content": "import PipeBuilder from '../pipe/PipeBuilder.js'\r\n\r\nexport default class CustomElementGenerator {\r\n    constructor(flowView, pipeDict) {\r\n        this.flowView = flowView;\r\n        this.pipeDict = pipeDict;\r\n    }\r\n\r\n    addReceiver(receiver, target) {\r\n        let xCord,\r\n            yCord,\r\n            prependText = '(receiver): ';\r\n\r\n        if (receiver['@x'] != null && receiver['@y'] != null) {\r\n            xCord = receiver['@x'];\r\n            yCord = receiver['@y']\r\n        } else {\r\n            xCord = 600;\r\n            yCord = 400;\r\n        }\r\n\r\n        let name = prependText + receiver['@name'],\r\n            positions = {\r\n                x: xCord,\r\n                y: yCord\r\n            }\r\n        this.pipeDict[name] = new PipeBuilder(this.flowView, name)\r\n            .withPositions(positions)\r\n            .build();\r\n\r\n        return {\r\n            sourcePipe: prependText + receiver['@name'],\r\n            targetPipe: target,\r\n            name: 'request'\r\n        };\r\n    }\r\n\r\n\r\n    addExits(exits) {\r\n        let exit = exits,\r\n            positions,\r\n            name,\r\n            ypos,\r\n            xpos;\r\n\r\n        if (exit == null) {\r\n            return;\r\n        }\r\n\r\n        if (Array.isArray(exit)) {\r\n            let cur = this;\r\n            exit.forEach(function (item, index) {\r\n                name = exit[index]['@path'],\r\n                    xpos = exit[index]['@x'],\r\n                    ypos = exit[index]['@y'];\r\n                if (xpos != null && ypos != null) {\r\n                    positions = {\r\n                        x: xpos,\r\n                        y: ypos\r\n                    }\r\n                }\r\n                cur.pipeDict[name] = new PipeBuilder(cur.flowView, name)\r\n                    .withPositions(positions)\r\n                    .isExit(true)\r\n                    .build();\r\n            });\r\n        } else {\r\n            name = exit['@path'],\r\n                xpos = exit['@x'],\r\n                ypos = exit['@y'];\r\n            if (xpos != null && ypos != null) {\r\n                positions = {\r\n                    x: xpos,\r\n                    y: ypos\r\n                }\r\n            }\r\n            this.pipeDict[name] = new PipeBuilder(this.flowView, name)\r\n            .withPositions(positions)\r\n            .isExit(true)\r\n            .build();\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/flowView/flowGeneration/CustomElementGenerator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 369,
    "kind": "class",
    "name": "CustomElementGenerator",
    "memberof": "app/View/flowView/flowGeneration/CustomElementGenerator.js",
    "static": true,
    "longname": "app/View/flowView/flowGeneration/CustomElementGenerator.js~CustomElementGenerator",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/flowView/flowGeneration/CustomElementGenerator.js",
    "importStyle": "CustomElementGenerator",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 370,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/flowView/flowGeneration/CustomElementGenerator.js~CustomElementGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/flowGeneration/CustomElementGenerator.js~CustomElementGenerator#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 371,
    "kind": "member",
    "name": "flowView",
    "memberof": "app/View/flowView/flowGeneration/CustomElementGenerator.js~CustomElementGenerator",
    "static": false,
    "longname": "app/View/flowView/flowGeneration/CustomElementGenerator.js~CustomElementGenerator#flowView",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 372,
    "kind": "member",
    "name": "pipeDict",
    "memberof": "app/View/flowView/flowGeneration/CustomElementGenerator.js~CustomElementGenerator",
    "static": false,
    "longname": "app/View/flowView/flowGeneration/CustomElementGenerator.js~CustomElementGenerator#pipeDict",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 373,
    "kind": "method",
    "name": "addReceiver",
    "memberof": "app/View/flowView/flowGeneration/CustomElementGenerator.js~CustomElementGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/flowGeneration/CustomElementGenerator.js~CustomElementGenerator#addReceiver",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "receiver",
        "types": [
          "*"
        ]
      },
      {
        "name": "target",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"sourcePipe\": *, \"targetPipe\": *, \"name\": string}"
      ]
    }
  },
  {
    "__docId__": 374,
    "kind": "method",
    "name": "addExits",
    "memberof": "app/View/flowView/flowGeneration/CustomElementGenerator.js~CustomElementGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/flowGeneration/CustomElementGenerator.js~CustomElementGenerator#addExits",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [
      {
        "name": "exits",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 375,
    "kind": "file",
    "name": "app/View/flowView/flowGeneration/FlowGenerator.js",
    "content": "import PipeGenerator from './PipeGenerator.js';\r\n\r\nexport default class FlowGenerator {\r\n  constructor(flowView, flowModel) {\r\n    this.flowModel = flowModel;\r\n    this.flowView = flowView;\r\n    this.pipeGenerator = new PipeGenerator(flowModel, flowView);\r\n    this.pipes = {};\r\n  }\r\n\r\n  /*\r\n  # if the pipeline is not null empty the canvas\r\n  # for pipe is not null generate each pipe\r\n  # if there is only one pipe only generate that one\r\n  # push all forwards to the forwards array and generate the forwards\r\n  */\r\n\r\n  generateFlow() {\r\n    this.flowView.resetWindows();\r\n    let transformedXml = this.flowModel.getTransformedXml();\r\n\r\n    if (transformedXml != null && transformedXml.Adapter != null &&\r\n      transformedXml.Adapter.Pipeline != null) {\r\n\r\n      instance.reset();\r\n      $('#canvas').empty();\r\n      this.pipes = this.pipeGenerator.generateAllPipes(transformedXml);\r\n    } else {\r\n      this.flowView.displayError(transformedXml);\r\n    }\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/flowView/flowGeneration/FlowGenerator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 376,
    "kind": "class",
    "name": "FlowGenerator",
    "memberof": "app/View/flowView/flowGeneration/FlowGenerator.js",
    "static": true,
    "longname": "app/View/flowView/flowGeneration/FlowGenerator.js~FlowGenerator",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/flowView/flowGeneration/FlowGenerator.js",
    "importStyle": "FlowGenerator",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 377,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/flowView/flowGeneration/FlowGenerator.js~FlowGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/flowGeneration/FlowGenerator.js~FlowGenerator#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 378,
    "kind": "member",
    "name": "flowModel",
    "memberof": "app/View/flowView/flowGeneration/FlowGenerator.js~FlowGenerator",
    "static": false,
    "longname": "app/View/flowView/flowGeneration/FlowGenerator.js~FlowGenerator#flowModel",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 379,
    "kind": "member",
    "name": "flowView",
    "memberof": "app/View/flowView/flowGeneration/FlowGenerator.js~FlowGenerator",
    "static": false,
    "longname": "app/View/flowView/flowGeneration/FlowGenerator.js~FlowGenerator#flowView",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 380,
    "kind": "member",
    "name": "pipeGenerator",
    "memberof": "app/View/flowView/flowGeneration/FlowGenerator.js~FlowGenerator",
    "static": false,
    "longname": "app/View/flowView/flowGeneration/FlowGenerator.js~FlowGenerator#pipeGenerator",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 381,
    "kind": "member",
    "name": "pipes",
    "memberof": "app/View/flowView/flowGeneration/FlowGenerator.js~FlowGenerator",
    "static": false,
    "longname": "app/View/flowView/flowGeneration/FlowGenerator.js~FlowGenerator#pipes",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 382,
    "kind": "method",
    "name": "generateFlow",
    "memberof": "app/View/flowView/flowGeneration/FlowGenerator.js~FlowGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/flowGeneration/FlowGenerator.js~FlowGenerator#generateFlow",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 384,
    "kind": "file",
    "name": "app/View/flowView/flowGeneration/ForwardGenerator.js",
    "content": "export default class ForwardGenerator {\r\n    constructor(flowModel, flowView) {\r\n        this.flowModel = flowModel;\r\n        this.flowView = flowView;\r\n        this.connectorType = \"Flowchart\";\r\n    }\r\n\r\n      /*\r\n  # a function to search all of the forwards in the transformed json.\r\n  # bind to each connection and update code editor.\r\n  # connect all of the pipes according to the forwards given in this method.\r\n  # @param forwards: a json object with all of the forwards.\r\n  */\r\n  generateForwards(forwards) {\r\n    //when generating set to true and after generating to false.\r\n    let generated = true;\r\n    let cur = this;\r\n    let connectorType = this.connectorType;\r\n\r\n\r\n    this.flowModel.setForwards(forwards);\r\n\r\n\r\n    //event handler for when a connection is made.\r\n    instance.bind(\"connection\", function (i, c) {\r\n      let counter = 0;\r\n      instance.getAllConnections().forEach(function (conn) {\r\n        if (conn.sourceId == i.connection.sourceId && conn.targetId == i.connection.targetId) {\r\n          if (counter < 2) {\r\n            counter++;\r\n          }\r\n        }\r\n      });\r\n\r\n\r\n      //bind a double click event for deleting forwards.\r\n      let source = i.sourceEndpoint.element.lastChild.firstElementChild.textContent;\r\n      let target = i.targetEndpoint.element.lastChild.firstElementChild.textContent;\r\n      i.connection.bind(\"dblclick\", function (conn) {\r\n        instance.deleteConnection(conn);\r\n        cur.flowView.modifyFlow('delete', {\r\n          name: source,\r\n          target: target\r\n        });\r\n      })\r\n\r\n      \r\n      //connection already exists so delete the first connection.\r\n      if (counter > 1) {\r\n        instance.getAllConnections().some(function (conn) {\r\n          if (conn.sourceId == i.connection.sourceId && conn.targetId == i.connection.targetId) {\r\n            instance.deleteConnection(conn);\r\n            return true;\r\n          }\r\n        });\r\n        return;\r\n      }\r\n\r\n      //check if the connection is generated.\r\n      if (!generated) {\r\n        cur.flowView.modifyFlow('connection', {\r\n          source: source,\r\n          target: target\r\n        });\r\n      }\r\n    });\r\n\r\n    //loop over and connect the forwards.\r\n    let sourcePipe = \"\";\r\n    let targetPipe = \"\";\r\n    generated = true;\r\n\r\n\r\n    $(forwards).each(function (index, f) {\r\n      sourcePipe = \"\";\r\n      targetPipe = \"\";\r\n      if (f.targetPipe == null) {\r\n        f.targetPipe = f.name;\r\n      }\r\n\r\n\r\n      $(\".sourceWindow\").each(function (i, element) {\r\n        var $element = $(element)[0];\r\n        let refactoredText = $element.lastChild.firstChild.innerHTML;\r\n        if (refactoredText == f.sourcePipe) {\r\n          sourcePipe = $($element).attr('id');\r\n        } else if (refactoredText == f.targetPipe) {\r\n          targetPipe = $($element).attr('id');\r\n        }\r\n      });\r\n\r\n      let paintStyle = {\r\n        stroke: \"#000000\",\r\n        strokeWidth: 3\r\n      }\r\n\r\n\r\n      if (f.name == 'failure' || f.name == 'exception') {\r\n        paintStyle.stroke = \"#FF0000\";\r\n      } else if (f.name == 'success') {\r\n        paintStyle.stroke = \"#22bb33\"\r\n      } else if (f.name == \"request\" || f.name == 'response') {\r\n        paintStyle.dashstyle = \"2 4\";\r\n      }\r\n\r\n      if (sourcePipe != \"\" && targetPipe != \"\") {\r\n\r\n        instance.connect({\r\n          source: sourcePipe,\r\n          target: targetPipe,\r\n          paintStyle: paintStyle,\r\n          overlays: [\r\n            [\"Label\", {\r\n              label: f.name,\r\n              id: \"label\",\r\n              location: 0.1,\r\n              padding: 100\r\n            }]\r\n          ],\r\n          connector: [connectorType, {\r\n            stub: [40, 60],\r\n            gap: 10,\r\n            cornerRadius: 5,\r\n            midpoint: 0.0001\r\n          }]\r\n        });\r\n      }\r\n    });\r\n    generated = false;\r\n  }\r\n}",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/flowView/flowGeneration/ForwardGenerator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 385,
    "kind": "class",
    "name": "ForwardGenerator",
    "memberof": "app/View/flowView/flowGeneration/ForwardGenerator.js",
    "static": true,
    "longname": "app/View/flowView/flowGeneration/ForwardGenerator.js~ForwardGenerator",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/flowView/flowGeneration/ForwardGenerator.js",
    "importStyle": "ForwardGenerator",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 386,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/flowView/flowGeneration/ForwardGenerator.js~ForwardGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/flowGeneration/ForwardGenerator.js~ForwardGenerator#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 387,
    "kind": "member",
    "name": "flowModel",
    "memberof": "app/View/flowView/flowGeneration/ForwardGenerator.js~ForwardGenerator",
    "static": false,
    "longname": "app/View/flowView/flowGeneration/ForwardGenerator.js~ForwardGenerator#flowModel",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 388,
    "kind": "member",
    "name": "flowView",
    "memberof": "app/View/flowView/flowGeneration/ForwardGenerator.js~ForwardGenerator",
    "static": false,
    "longname": "app/View/flowView/flowGeneration/ForwardGenerator.js~ForwardGenerator#flowView",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 389,
    "kind": "member",
    "name": "connectorType",
    "memberof": "app/View/flowView/flowGeneration/ForwardGenerator.js~ForwardGenerator",
    "static": false,
    "longname": "app/View/flowView/flowGeneration/ForwardGenerator.js~ForwardGenerator#connectorType",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 390,
    "kind": "method",
    "name": "generateForwards",
    "memberof": "app/View/flowView/flowGeneration/ForwardGenerator.js~ForwardGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/flowGeneration/ForwardGenerator.js~ForwardGenerator#generateForwards",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "forwards",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 391,
    "kind": "file",
    "name": "app/View/flowView/flowGeneration/PipeGenerator.js",
    "content": "import PipeView from '../pipe/PipeView.js';\r\nimport PipeBuilder from '../pipe/PipeBuilder.js'\r\nimport ForwardGenerator from './ForwardGenerator.js';\r\nimport CustomElementGenerator from './CustomElementGenerator.js';\r\n\r\nexport default class PipeGenerator {\r\n\r\n    constructor(flowModel, flowView) {\r\n        this.flowModel = flowModel;\r\n        this.flowView = flowView;\r\n        this.forwardGenerator = new ForwardGenerator(flowModel, flowView);\r\n        this.pipeDict = {};\r\n        this.customElementGenerator = new CustomElementGenerator(flowView, this.pipeDict);\r\n    }\r\n\r\n    generateAllPipes(transformedXml) {\r\n        if (transformedXml.Adapter.Pipeline.pipe != null) {\r\n            $('#canvas').text(\"Adapter: \" + transformedXml.Adapter['@name'] + ' ');\r\n            let pipe = transformedXml.Adapter.Pipeline.pipe;\r\n            let forwards = [];\r\n            let possitions = \"\";\r\n\r\n            if (Array.isArray(pipe)) {\r\n                possitions = this.generateMultiplePipes(pipe, forwards, possitions);\r\n            } else {\r\n                this.generateSinglePipe(pipe, forwards);\r\n            }\r\n            this.customElementGenerator.addExits(transformedXml.Adapter.Pipeline.Exit);\r\n\r\n            if (possitions == \"duplicate\") {\r\n                this.flowView.displayError(\"dupplicate\");\r\n                return;\r\n            }\r\n            else if (possitions == null) {\r\n                this.flowView.realignFlow();\r\n            }\r\n            if (transformedXml.Adapter.Receiver != null) {\r\n                let receiver = transformedXml.Adapter.Receiver;\r\n                if(Array.isArray(receiver)) {\r\n                    let cur = this;\r\n                    receiver.forEach(function(item, index) {\r\n                        forwards.push(cur.customElementGenerator.addReceiver(item, forwards[0].sourcePipe))\r\n                    })\r\n                } else {\r\n                    forwards.push(this.customElementGenerator.addReceiver(receiver, forwards[0].sourcePipe));\r\n                }\r\n            }\r\n\r\n            this.forwardGenerator.generateForwards(forwards);\r\n        }\r\n        return this.pipeDict;\r\n    }\r\n\r\n    generateMultiplePipes(pipe, forwards, possitions) {\r\n        let cur = this,\r\n            error = false;\r\n        let sortedPipe = pipe.slice().sort();\r\n        sortedPipe.forEach((currentPipe, index) => {\r\n            if (sortedPipe[index + 1] != null) {\r\n                if (sortedPipe[index + 1]['@name'] === currentPipe['@name']) {\r\n                    console.log('duplicate: ', currentPipe);\r\n                    error = true;\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n        if (error) {\r\n            return \"duplicate\";\r\n        }\r\n\r\n        for (let p in pipe) {\r\n            let name = pipe[p]['@name'],\r\n                xpos = pipe[p]['@x'],\r\n                ypos = pipe[p]['@y'],\r\n                extraText = \"\",\r\n                docText = null;\r\n\r\n            possitions = this.checkPossitions(xpos, ypos);\r\n\r\n            extraText = this.createExtraText(pipe, p);\r\n            docText = this.createDocText(pipe, p);\r\n\r\n\r\n            this.pipeDict[name] = new PipeBuilder(this.flowView, name)\r\n                .withPositions(possitions)\r\n                .withExtra(extraText)\r\n                .withDescText(docText)\r\n                .build()\r\n                .pipeModel;\r\n\r\n            if (pipe[p].Forward != null) {\r\n                forwards = this.createPipeForward(pipe, name, p, forwards);\r\n            } else {\r\n                forwards = this.createDefaultForward(pipe, name, p, forwards);\r\n            }\r\n        }\r\n        return possitions;\r\n    }\r\n\r\n    createDefaultForward(pipe, name, p, forwards) {\r\n        let nextPipe = parseInt(p) + 1;\r\n        if (pipe[nextPipe] != null) {\r\n            let forwardData = {\r\n                sourcePipe: name,\r\n                targetPipe: pipe[nextPipe]['@name'],\r\n                name: \"success\"\r\n            }\r\n            forwards.push(forwardData);\r\n        }\r\n\r\n        return forwards;\r\n    }\r\n\r\n    createPipeForward(pipe, name, p, forwards) {\r\n        let forwardData = null;\r\n\r\n        if (Array.isArray(pipe[p].Forward)) {\r\n            pipe[p].Forward.forEach(function (item, index) {\r\n                forwardData = {\r\n                    sourcePipe: name,\r\n                    targetPipe: item['@path'],\r\n                    name: item['@name']\r\n                };\r\n                forwards.push(forwardData);\r\n            });\r\n        } else {\r\n            forwardData = {\r\n                sourcePipe: name,\r\n                targetPipe: pipe[p].Forward['@path'],\r\n                name: pipe[p].Forward['@name']\r\n            };\r\n            forwards.push(forwardData);\r\n        }\r\n\r\n        return forwards;\r\n    }\r\n\r\n    createExtraText(pipe, p) {\r\n        let extraText = \"\";\r\n        if (pipe[p]['@xpathExpression'] != null) {\r\n            extraText = pipe[p]['@xpathExpression'].slice(0, 15) + '...';\r\n        } else if (pipe[p].FixedQuerySender != null && pipe[p].FixedQuerySender['@query'] != null) {\r\n            extraText = pipe[p].FixedQuerySender['@query'].slice(0, 15) + '...';\r\n        }\r\n\r\n        return extraText;\r\n    }\r\n\r\n    createDocText(pipe, p) {\r\n        let docText = null;\r\n\r\n        if (pipe[p].Documentation != null) {\r\n            console.log(pipe[p].Documentation);\r\n            docText = pipe[p].Documentation;\r\n        }\r\n\r\n        return docText;\r\n    }\r\n\r\n    generateSinglePipe(pipe, forwards) {\r\n        let name = pipe['@name'],\r\n        xpos = pipe['@x'],\r\n        ypos = pipe['@y'];\r\n\r\n        let possitions = this.checkPossitions(xpos, ypos);\r\n\r\n        this.pipeDict[name] = new PipeBuilder(this.flowView, name)\r\n        .withPositions(possitions)\r\n        .build()\r\n        .pipeModel\r\n\r\n        if (pipe.Forward != null) {\r\n            let forwardData = null;\r\n            if (Array.isArray(pipe.Forward)) {\r\n                pipe.Forward.forEach(function (item, index) {\r\n                    forwardData = {\r\n                        sourcePipe: name,\r\n                        targetPipe: item['@path'],\r\n                        name: item['@name']\r\n                    };\r\n                    forwards.push(forwardData);\r\n                });\r\n            } else {\r\n                forwardData = {\r\n                    sourcePipe: name,\r\n                    targetPipe: pipe.Forward['@path'],\r\n                    name: pipe.Forward['@name']\r\n                };\r\n                forwards.push(forwardData);\r\n            }\r\n        }\r\n\r\n        return forwards;\r\n    }\r\n\r\n    checkPossitions(xpos, ypos) {\r\n        if (xpos == null && ypos != null) {\r\n            xpos = ypos;\r\n        } else if (ypos == null && xpos != null) {\r\n            ypos = xpos;\r\n        }\r\n        if (xpos != null && ypos != null) {\r\n            return {\r\n                x: xpos,\r\n                y: ypos\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/flowView/flowGeneration/PipeGenerator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 392,
    "kind": "class",
    "name": "PipeGenerator",
    "memberof": "app/View/flowView/flowGeneration/PipeGenerator.js",
    "static": true,
    "longname": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/flowView/flowGeneration/PipeGenerator.js",
    "importStyle": "PipeGenerator",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 393,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 394,
    "kind": "member",
    "name": "flowModel",
    "memberof": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator",
    "static": false,
    "longname": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator#flowModel",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 395,
    "kind": "member",
    "name": "flowView",
    "memberof": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator",
    "static": false,
    "longname": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator#flowView",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 396,
    "kind": "member",
    "name": "forwardGenerator",
    "memberof": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator",
    "static": false,
    "longname": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator#forwardGenerator",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 397,
    "kind": "member",
    "name": "pipeDict",
    "memberof": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator",
    "static": false,
    "longname": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator#pipeDict",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 398,
    "kind": "member",
    "name": "customElementGenerator",
    "memberof": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator",
    "static": false,
    "longname": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator#customElementGenerator",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 399,
    "kind": "method",
    "name": "generateAllPipes",
    "memberof": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator#generateAllPipes",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "transformedXml",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 400,
    "kind": "method",
    "name": "generateMultiplePipes",
    "memberof": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator#generateMultiplePipes",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "params": [
      {
        "name": "pipe",
        "types": [
          "*"
        ]
      },
      {
        "name": "forwards",
        "types": [
          "*"
        ]
      },
      {
        "name": "possitions",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 401,
    "kind": "method",
    "name": "createDefaultForward",
    "memberof": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator#createDefaultForward",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "params": [
      {
        "name": "pipe",
        "types": [
          "*"
        ]
      },
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "p",
        "types": [
          "*"
        ]
      },
      {
        "name": "forwards",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 402,
    "kind": "method",
    "name": "createPipeForward",
    "memberof": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator#createPipeForward",
    "access": "public",
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "params": [
      {
        "name": "pipe",
        "types": [
          "*"
        ]
      },
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "p",
        "types": [
          "*"
        ]
      },
      {
        "name": "forwards",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 403,
    "kind": "method",
    "name": "createExtraText",
    "memberof": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator#createExtraText",
    "access": "public",
    "description": null,
    "lineNumber": 139,
    "undocument": true,
    "params": [
      {
        "name": "pipe",
        "types": [
          "*"
        ]
      },
      {
        "name": "p",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 404,
    "kind": "method",
    "name": "createDocText",
    "memberof": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator#createDocText",
    "access": "public",
    "description": null,
    "lineNumber": 150,
    "undocument": true,
    "params": [
      {
        "name": "pipe",
        "types": [
          "*"
        ]
      },
      {
        "name": "p",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 405,
    "kind": "method",
    "name": "generateSinglePipe",
    "memberof": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator#generateSinglePipe",
    "access": "public",
    "description": null,
    "lineNumber": 161,
    "undocument": true,
    "params": [
      {
        "name": "pipe",
        "types": [
          "*"
        ]
      },
      {
        "name": "forwards",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 406,
    "kind": "method",
    "name": "checkPossitions",
    "memberof": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/flowGeneration/PipeGenerator.js~PipeGenerator#checkPossitions",
    "access": "public",
    "description": null,
    "lineNumber": 197,
    "undocument": true,
    "params": [
      {
        "name": "xpos",
        "types": [
          "*"
        ]
      },
      {
        "name": "ypos",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 407,
    "kind": "file",
    "name": "app/View/flowView/FlowView.js",
    "content": "import FlowGenerator from './flowGeneration/FlowGenerator.js'\r\nimport domtoimage from 'dom-to-image';\r\nimport jsplumb from 'jsplumb';\r\nexport default class FlowView {\r\n\r\n  constructor(flowModel) {\r\n    this.transformedXml = null;\r\n    this.flowModel = flowModel;\r\n    this.types = [];\r\n    this.listeners = [];\r\n    this.windows = 0;\r\n    this.moving = false;\r\n    this.adding = false;\r\n    this.connectorType = \"Flowchart\";\r\n    this.horizontalBuild = false;\r\n    this.flowGenerator = new FlowGenerator(this, flowModel);\r\n    this.getInstance();\r\n  }\r\n  addListener(listener) {\r\n    this.listeners.push(listener);\r\n  }\r\n\r\n  notifyListeners(data) {\r\n    this.listeners.forEach(l => l.notify(data));\r\n  }\r\n\r\n  resetWindows() {\r\n    this.windows = 0;\r\n  }\r\n\r\n  getInstance() {\r\n    this.sourceAnchors = [\r\n      \"Top\", \"Right\", \"Left\",\r\n      [0.25, 1, 0, 1],\r\n      [0.5, 1, 0, 1],\r\n      [0.75, 1, 0, 1],\r\n      [1, 1, 0, 1]\r\n    ],\r\n      this.instance = window.instance = jsPlumb.getInstance({\r\n        DragOptions: {\r\n          cursor: \"pointer\",\r\n          zIndex: 2000\r\n        },\r\n        PaintStyle: {\r\n          stroke: \"#000000\",\r\n          strokeWidth: 3\r\n        },\r\n        ConnectionOverlays: [\r\n          [\"Arrow\", {\r\n            location: 1,\r\n            visible: true,\r\n            id: \"ARROW\",\r\n            zIndex: 1000\r\n          }]\r\n        ],\r\n        Container: \"canvas\"\r\n      });\r\n\r\n    this.setBasicType();\r\n\r\n  }\r\n\r\n  setBasicType() {\r\n    let basicType = {\r\n      connector: [\"StateMachine\", {\r\n        stub: [40, 60],\r\n        gap: 10,\r\n        cornerRadius: 5,\r\n      }]\r\n    }\r\n    this.instance.registerConnectionType(\"basic\", basicType);\r\n  }\r\n\r\n  modifyFlow(change, obj) {\r\n    switch (change) {\r\n      case \"generate\":\r\n        this.generateFlow();\r\n        break;\r\n      case 'add':\r\n        if (obj.xpos == null || obj.ypos == null) {\r\n          obj.xpos = 100;\r\n          obj.ypos = 100;\r\n        }\r\n        this.notifyListeners(this.addCustomPipe(obj.name, obj.className, obj.xpos, obj.ypos));\r\n        break;\r\n      case 'edit':\r\n        obj = this.editTitle(obj);\r\n        obj.type = \"changeName\";\r\n        this.notifyListeners(obj);\r\n        break;\r\n      case 'connection':\r\n        this.adding = true;\r\n        obj.type = \"changeAddForward\";\r\n        this.notifyListeners(obj);\r\n        this.adding = false;\r\n        break;\r\n      case 'drag':\r\n        obj = this.cleanPossitions(obj);\r\n        obj.type = \"drag\";\r\n        this.notifyListeners(obj);\r\n        break;\r\n      case 'dragExit':\r\n        obj = this.cleanPossitions(obj);\r\n        obj.type = \"dragExit\";\r\n        this.notifyListeners(obj);\r\n        break;\r\n      case 'delete':\r\n        obj.type = \"delete\";\r\n        this.notifyListeners(obj);\r\n        break;\r\n      case \"error\":\r\n        this.displayError(obj);\r\n        break;\r\n    }\r\n  }\r\n\r\n  getImage() {\r\n    var node = document.getElementById('canvas');\r\n\r\n    domtoimage.toSvg(node)\r\n      .then(function (dataUrl) {\r\n        var link = document.createElement('a');\r\n        link.download = localStorage.getItem('currentAdapter') + '.svg';\r\n        link.href = dataUrl;\r\n        link.click();\r\n      })\r\n      .catch(function (error) {\r\n        console.error('oops, something went wrong!', error);\r\n      });\r\n  }\r\n\r\n  addCustomPipe(name, className, xpos, ypos) {\r\n    return {\r\n      type: \"changeAddPipe\",\r\n      name: name,\r\n      possitions: {\r\n        x: xpos,\r\n        y: ypos\r\n      },\r\n      className: className\r\n    }\r\n  }\r\n\r\n  cleanPossitions(obj) {\r\n    obj.x = obj.x.replace(/px/, '');\r\n    obj.y = obj.y.replace(/px/, '');\r\n    return obj;\r\n  }\r\n\r\n  editTitle(pipe) {\r\n    let oldTitle = pipe.innerHTML;\r\n    let newTitle = prompt(\"What is the new Title?\", oldTitle);\r\n    if (newTitle != null) {\r\n      pipe.innerHTML = newTitle;\r\n      return {\r\n        oldTitle: oldTitle,\r\n        newTitle: newTitle\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  toggleConnectorType(cur) {\r\n    if (cur.connectorType === \"Flowchart\") {\r\n      cur.connectorType = \"StateMachine\";\r\n    } else {\r\n      cur.connectorType = \"Flowchart\";\r\n    }\r\n    cur.generateFlow();\r\n  }\r\n\r\n  getTypes() {\r\n    this.notifyListeners({\r\n      type: \"getTypes\"\r\n    });\r\n    return this.types;\r\n  }\r\n\r\n  realignFlow() {\r\n    const pipes = $('.window');\r\n    let exitOffset = 0,\r\n        boxOffset = 0,\r\n        receiverOffset = 0,\r\n        x = '0',\r\n        y = '0',\r\n        exit = false;;\r\n\r\n\r\n    for (let i in pipes) {\r\n      let box = $(pipes[i]);\r\n      exit = false;\r\n      \r\n      if(box[0].lastChild == null) {\r\n        return;\r\n      }\r\n\r\n      boxOffset += 250;\r\n      if (!box.hasClass('exit') && !box[0].innerHTML.match(/\\(receiver\\)/g)) {\r\n        if(this.horizontalBuild) {\r\n          x = '' + (boxOffset + 250);\r\n          y = '450';\r\n        } else {\r\n          x = '100';\r\n          y = '' + boxOffset;\r\n        }\r\n      } else if (box[0].innerHTML.match(/\\(receiver\\)/g)) {\r\n        receiverOffset += 250;\r\n        if(this.horizontalBuild) {\r\n          x = '100';\r\n          y = '' + (receiverOffset - 100);\r\n        } else {\r\n          x = '500';\r\n          y = '' + receiverOffset;\r\n        }\r\n      } else {\r\n        exit = true;\r\n        exitOffset += 250;\r\n        if(this.horizontalBuild) {\r\n          x = '' + (boxOffset + 250);\r\n          y = (exitOffset + 450) + 'px';\r\n        } else {\r\n          x = exitOffset = 'px';\r\n          y = '' + boxOffset;\r\n        }\r\n      }\r\n\r\n\r\n      if(!exit) {\r\n        this.modifyFlow('drag', {\r\n          name: box[0].lastChild.firstElementChild.textContent,\r\n          x: x,\r\n          y: y\r\n        });\r\n      } else {\r\n        this.modifyFlow('dragExit', {\r\n          name: box[0].lastChild.firstElementChild.textContent,\r\n          x: x,\r\n          y: y\r\n        });\r\n      }\r\n      \r\n    }\r\n    this.setCanvasBounds(boxOffset, pipes.length);\r\n  }\r\n\r\n  setCanvasBounds(boxOffset, i) {\r\n    let totalLength, windowLength;\r\n    if (!this.horizontalBuild) {\r\n      totalLength = boxOffset + ((64 * i) - 1450);\r\n      windowLength = parseInt($('#canvas').css('height').replace('px', ''));\r\n      if (totalLength > windowLength) {\r\n        $('#canvas').css('height', totalLength);\r\n      }\r\n    } else {\r\n      totalLength = boxOffset + ((64 * i) - 1000);\r\n      windowLength = parseInt($('#canvas').css('width').replace('px', ''));\r\n      if (totalLength > windowLength && !this.customWidth) {\r\n        $('#canvas').css('width', totalLength);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  generateFlow() {\r\n    this.notifyListeners({\r\n      type: \"convertConfiguration\"\r\n    });\r\n    this.flowGenerator.generateFlow();\r\n  }\r\n\r\n\r\n  // TODO: make an exception class to handle exceptions thrown in flow module.\r\n  displayError(e) {\r\n    instance.reset();\r\n    $('#canvas').empty();\r\n    $('#canvas').css('display', 'none');\r\n    $('.customErrorMessage').remove();\r\n    if (e == \"dupplicate\") {\r\n      $('#flowContainer').append(\r\n        $(\"<h1></h1>\").text('Duplicate pipe, please remove any duplicates.').addClass('customErrorMessage'),\r\n      );\r\n    } else if (typeof (this.flowModel.getTransformedXml()) == \"string\") {\r\n      $('#flowContainer').append(\r\n        $(\"<h1></h1>\").text('Configuration is incorrect, please check your xml.').addClass('customErrorMessage'),\r\n        $('<p></p>').text(' \\n\\n\\n your error: \\n' + this.flowModel.getTransformedXml()).addClass('customErrorMessage')\r\n      );\r\n    } else {\r\n      $('#flowContainer').append(\r\n        $(\"<h1></h1>\").text('Configuration is incorrect, please check your xml.').addClass('customErrorMessage'),\r\n        $('<p></p>').text(' \\n\\n\\n your error: \\n' + e).addClass('customErrorMessage')\r\n      );\r\n    }\r\n    console.log('error: ', e, this.flowModel.getTransformedXml())\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/flowView/FlowView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 408,
    "kind": "class",
    "name": "FlowView",
    "memberof": "app/View/flowView/FlowView.js",
    "static": true,
    "longname": "app/View/flowView/FlowView.js~FlowView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/flowView/FlowView.js",
    "importStyle": "FlowView",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 409,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 410,
    "kind": "member",
    "name": "transformedXml",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#transformedXml",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 411,
    "kind": "member",
    "name": "flowModel",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#flowModel",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 412,
    "kind": "member",
    "name": "types",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#types",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 413,
    "kind": "member",
    "name": "listeners",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#listeners",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 414,
    "kind": "member",
    "name": "windows",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#windows",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 415,
    "kind": "member",
    "name": "moving",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#moving",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 416,
    "kind": "member",
    "name": "adding",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#adding",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 417,
    "kind": "member",
    "name": "connectorType",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#connectorType",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 418,
    "kind": "member",
    "name": "horizontalBuild",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#horizontalBuild",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 419,
    "kind": "member",
    "name": "flowGenerator",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#flowGenerator",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 420,
    "kind": "method",
    "name": "addListener",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#addListener",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "listener",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 421,
    "kind": "method",
    "name": "notifyListeners",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#notifyListeners",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 422,
    "kind": "method",
    "name": "resetWindows",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#resetWindows",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 424,
    "kind": "method",
    "name": "getInstance",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#getInstance",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 425,
    "kind": "method",
    "name": "setBasicType",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#setBasicType",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 426,
    "kind": "method",
    "name": "modifyFlow",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#modifyFlow",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "params": [
      {
        "name": "change",
        "types": [
          "*"
        ]
      },
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 429,
    "kind": "method",
    "name": "getImage",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#getImage",
    "access": "public",
    "description": null,
    "lineNumber": 117,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 430,
    "kind": "method",
    "name": "addCustomPipe",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#addCustomPipe",
    "access": "public",
    "description": null,
    "lineNumber": 132,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "className",
        "types": [
          "*"
        ]
      },
      {
        "name": "xpos",
        "types": [
          "*"
        ]
      },
      {
        "name": "ypos",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"type\": string, \"name\": *, \"possitions\": *, \"className\": *}"
      ]
    }
  },
  {
    "__docId__": 431,
    "kind": "method",
    "name": "cleanPossitions",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#cleanPossitions",
    "access": "public",
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 432,
    "kind": "method",
    "name": "editTitle",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#editTitle",
    "access": "public",
    "description": null,
    "lineNumber": 150,
    "undocument": true,
    "params": [
      {
        "name": "pipe",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 433,
    "kind": "method",
    "name": "toggleConnectorType",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#toggleConnectorType",
    "access": "public",
    "description": null,
    "lineNumber": 164,
    "undocument": true,
    "params": [
      {
        "name": "cur",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 434,
    "kind": "method",
    "name": "getTypes",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#getTypes",
    "access": "public",
    "description": null,
    "lineNumber": 173,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 435,
    "kind": "method",
    "name": "realignFlow",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#realignFlow",
    "access": "public",
    "description": null,
    "lineNumber": 180,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 436,
    "kind": "method",
    "name": "setCanvasBounds",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#setCanvasBounds",
    "access": "public",
    "description": null,
    "lineNumber": 247,
    "undocument": true,
    "params": [
      {
        "name": "boxOffset",
        "types": [
          "*"
        ]
      },
      {
        "name": "i",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 437,
    "kind": "method",
    "name": "generateFlow",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#generateFlow",
    "access": "public",
    "description": null,
    "lineNumber": 266,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 438,
    "kind": "method",
    "name": "displayError",
    "memberof": "app/View/flowView/FlowView.js~FlowView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/FlowView.js~FlowView#displayError",
    "access": "public",
    "description": null,
    "lineNumber": 275,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 439,
    "kind": "file",
    "name": "app/View/flowView/pipe/ActivityPipeView.js",
    "content": "import PipeView from \"./PipeView\";\r\nimport PipeService from \"../../../Services/PipeService\";\r\n\r\nexport default class ActivityPipeView extends PipeView {\r\n\r\n    constructor(flowView, name, positions, extra, exit, descText) {\r\n        super(flowView, name, positions, extra, exit, descText);\r\n        this.getPipes();\r\n    }\r\n\r\n    async getPipes() {\r\n        this.pipeService = new PipeService()\r\n        let data = await this.pipeService.getPipeWithActivity();\r\n        //this.generateActivities(data)\r\n\r\n\r\n    }\r\n\r\n    // generateActivities(data) {\r\n    //     let name = this.name,\r\n    //         activity = \"\";\r\n    //     this.flowView.notifyListeners({ type: \"getPipeAttributes\", name: name, pipeModel: this.pipeModel });\r\n    //     let cur = this;\r\n    //     data.pipe.forEach(function (item, index) {\r\n    //         if (item.name == cur.pipeModel.type) {\r\n    //             for (let attr in cur.pipeModel.attributes) {\r\n    //                 if (attr == item.keyword) {\r\n    //                     console.log(\"match!\", cur.pipeModel.attributes[attr])\r\n    //                     activity = cur.pipeModel.attributes[attr];\r\n    //                     cur.createTibcoImage(activity);\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //     })\r\n    //     return activity;\r\n    // }\r\n\r\n    // createTibcoImage(activity) {\r\n    //     if (activity != \"\") {\r\n    //         $(this.element).find('div').remove('.typeWindow')\r\n    //         let typeWindow = $('<div></div>').addClass(\"typeWindow\").append(this.typeImageView.getTypeImage(this.name));\r\n    //         $(this.element).find('div').append(typeWindow);\r\n\r\n    //     }\r\n    // }\r\n\r\n    checkForExitOrReceiver(el, bottomContainer) {\r\n        let typeWindow = $('<div></div>').addClass(\"typeWindow\").append(this.getTypeImage()),\r\n            nameText = $(\"<strong></strong>\").attr(\"id\", \"strong\").text(this.name),\r\n            extraText = $(\"<strong></strong>\").attr(\"id\", \"strong\").text(this.extra);\r\n\r\n        this.isExit ? bottomContainer.append(nameText, extraText) : bottomContainer.append(nameText);\r\n\r\n        if (this.isExit) {\r\n            el.append(bottomContainer);\r\n            \r\n            $(el).css({\r\n                width: 'auto',\r\n                height: 'auto',\r\n                border: '1px solid black'\r\n            })\r\n\r\n        } else {\r\n            el.append(typeWindow, bottomContainer);\r\n\r\n            $(el).css({\r\n                width: 'auto',\r\n                height: 'auto',\r\n                border: '1px solid black'\r\n            })\r\n        }\r\n        this.element = el;\r\n\r\n        if(this.isExit) {\r\n            this.pipeModel.type = \"Exit\";\r\n            this.getTypeImage(\"Exit\")\r\n          } else if (this.name.match(/\\(receiver\\):/g)) {\r\n            this.pipeModel.type = \"Receiver\";\r\n            this.getTypeImage(\"Receiver\")\r\n          }\r\n          \r\n\r\n        return el;\r\n    }\r\n}",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/flowView/pipe/ActivityPipeView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 440,
    "kind": "class",
    "name": "ActivityPipeView",
    "memberof": "app/View/flowView/pipe/ActivityPipeView.js",
    "static": true,
    "longname": "app/View/flowView/pipe/ActivityPipeView.js~ActivityPipeView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/flowView/pipe/ActivityPipeView.js",
    "importStyle": "ActivityPipeView",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "app/View/flowView/pipe/PipeView.js~PipeView"
    ]
  },
  {
    "__docId__": 441,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/flowView/pipe/ActivityPipeView.js~ActivityPipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/pipe/ActivityPipeView.js~ActivityPipeView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 442,
    "kind": "method",
    "name": "getPipes",
    "memberof": "app/View/flowView/pipe/ActivityPipeView.js~ActivityPipeView",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "app/View/flowView/pipe/ActivityPipeView.js~ActivityPipeView#getPipes",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 443,
    "kind": "member",
    "name": "pipeService",
    "memberof": "app/View/flowView/pipe/ActivityPipeView.js~ActivityPipeView",
    "static": false,
    "longname": "app/View/flowView/pipe/ActivityPipeView.js~ActivityPipeView#pipeService",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 444,
    "kind": "method",
    "name": "checkForExitOrReceiver",
    "memberof": "app/View/flowView/pipe/ActivityPipeView.js~ActivityPipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/pipe/ActivityPipeView.js~ActivityPipeView#checkForExitOrReceiver",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "el",
        "types": [
          "*"
        ]
      },
      {
        "name": "bottomContainer",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 445,
    "kind": "member",
    "name": "element",
    "memberof": "app/View/flowView/pipe/ActivityPipeView.js~ActivityPipeView",
    "static": false,
    "longname": "app/View/flowView/pipe/ActivityPipeView.js~ActivityPipeView#element",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 446,
    "kind": "file",
    "name": "app/View/flowView/pipe/PipeBuilder.js",
    "content": "import PipeView from './PipeView.js';\r\nimport ActivityPipeView from './ActivityPipeView.js';\r\n\r\nexport default class PipeBuilder {\r\n    constructor(flowView, name) {\r\n        this.flowView = flowView;\r\n        this.name = name;\r\n    }\r\n\r\n    withPositions(positions) {\r\n        this.positions = positions;\r\n        return this;\r\n    }\r\n\r\n    withExtra(extra) {\r\n        this.extra = extra;\r\n        return this;\r\n    }\r\n\r\n    isExit(exit) {\r\n        this.exit = exit;\r\n        return this;\r\n    }\r\n\r\n    withDescText(descText) {\r\n        this.descText = descText;\r\n        return this;\r\n    }\r\n\r\n    build() {\r\n        if (!('isExit' in this)) {\r\n            throw new Error('isExit was not defined');\r\n        } else if (!('positions' in this)) {\r\n            this.positions = null;\r\n        } else if (!('extra' in this)) {\r\n            this.extra = null;\r\n        } else if (!('descText' in this)) {\r\n            this.descText = null;\r\n        } else if (!('exit' in this)) {\r\n            this.isExit = false;\r\n        }\r\n\r\n        if (this.name != null && this.flowView != null) {\r\n            if (localStorage.getItem(\"activityMode\") == \"true\") {\r\n                return new ActivityPipeView(this.flowView, this.name, this.positions, this.extra, this.exit, this.descText);\r\n            } else {\r\n                return new PipeView(this.flowView, this.name, this.positions, this.extra, this.exit, this.descText);\r\n            }\r\n        }\r\n    }\r\n}",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/flowView/pipe/PipeBuilder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 447,
    "kind": "class",
    "name": "PipeBuilder",
    "memberof": "app/View/flowView/pipe/PipeBuilder.js",
    "static": true,
    "longname": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/flowView/pipe/PipeBuilder.js",
    "importStyle": "PipeBuilder",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 448,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 449,
    "kind": "member",
    "name": "flowView",
    "memberof": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder",
    "static": false,
    "longname": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder#flowView",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 450,
    "kind": "member",
    "name": "name",
    "memberof": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder",
    "static": false,
    "longname": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder#name",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 451,
    "kind": "method",
    "name": "withPositions",
    "memberof": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder#withPositions",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "positions",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 452,
    "kind": "member",
    "name": "positions",
    "memberof": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder",
    "static": false,
    "longname": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder#positions",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 453,
    "kind": "method",
    "name": "withExtra",
    "memberof": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder#withExtra",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "extra",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 454,
    "kind": "member",
    "name": "extra",
    "memberof": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder",
    "static": false,
    "longname": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder#extra",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 455,
    "kind": "method",
    "name": "isExit",
    "memberof": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder#isExit",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "exit",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 456,
    "kind": "member",
    "name": "exit",
    "memberof": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder",
    "static": false,
    "longname": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder#exit",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 457,
    "kind": "method",
    "name": "withDescText",
    "memberof": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder#withDescText",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "descText",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 458,
    "kind": "member",
    "name": "descText",
    "memberof": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder",
    "static": false,
    "longname": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder#descText",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 459,
    "kind": "method",
    "name": "build",
    "memberof": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/pipe/PipeBuilder.js~PipeBuilder#build",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 464,
    "kind": "file",
    "name": "app/View/flowView/pipe/PipeView.js",
    "content": "import DescriptionView from '../DescriptionView.js';\r\nimport TypeImageView from '../TypeImageView.js';\r\nimport PipeModel from '../../../Model/PipeModel.js';\r\n\r\nexport default class PipeView {\r\n\r\n  constructor(flowView, name, possitions, extra, isExit, descText) {\r\n    this.flowView = flowView;\r\n    this.descriptionView = new DescriptionView();\r\n    this.typeImageView = new TypeImageView(flowView);\r\n    this.types = this.flowView.getTypes();\r\n\r\n    this.pipeModel = new PipeModel(name, possitions, extra, isExit, descText, this.types[name])\r\n\r\n    this.flowView.notifyListeners({ type: \"getPipeAttributes\", name: name, pipeModel: this.pipeModel });\r\n\r\n    this.name = name;\r\n    this.possitions = possitions;\r\n    this.extra = extra;\r\n    this.isExit = isExit;\r\n    this.descText = descText;\r\n\r\n    this.element = null;\r\n\r\n    if(this.flowView != null) {\r\n    this.addPipe();\r\n    }\r\n  }\r\n\r\n  addPipe() {\r\n    let flowView = this.flowView,\r\n      id = flowView.windows += 1,\r\n      canvas = $('#canvas'),\r\n      el = $(\"<div></div>\").addClass(\"window sourceWindow\").attr(\"id\", \"sourceWindow\" + id),\r\n      bottomContainer = $('<div></div>').addClass(\"bottomContainer\");\r\n\r\n    el = this.checkForExitOrReceiver(el, bottomContainer);\r\n    this.addDescription(id, el);\r\n    this.makeInteractive(el);\r\n    canvas.append(el);\r\n\r\n    this.connectDescription(id);\r\n    //return name;\r\n  }\r\n\r\n  checkForExitOrReceiver(el, bottomContainer) {\r\n    let typeText = $(\"<strong></strong>\").attr(\"id\", \"strong\").text(this.types[this.name]),\r\n        typeWindow = $('<div></div>').addClass(\"typeWindow\").append(this.getTypeImage(), typeText),\r\n        nameText = $(\"<strong></strong>\").attr(\"id\", \"strong\").text(this.name),\r\n        hr = $('<hr>'),\r\n        extraText = $(\"<strong></strong>\").attr(\"id\", \"strong\").text(this.extra);\r\n\r\n    this.isExit ? bottomContainer.append(nameText, extraText) : bottomContainer.append(nameText, hr, extraText);\r\n\r\n    if (this.isExit | this.types['receiver ' + this.name.replace('(receiver): ', '')] == \"Receiver\") {\r\n      el.append(bottomContainer);\r\n    } else {\r\n      el.append(typeWindow, bottomContainer);\r\n    }\r\n\r\n    if(this.isExit) {\r\n      this.pipeModel.type = \"Exit\";\r\n    } else if (this.types['receiver ' + this.name.replace('(receiver): ', '')] == \"Receiver\") {\r\n      this.pipeModel.type = \"Receiver\";\r\n    }\r\n\r\n    return el;\r\n  }\r\n\r\n  addDescription(id, el) {\r\n    if (this.possitions != null) {\r\n      $(el).css('left', this.possitions.x + 'px');\r\n      $(el).css('top', this.possitions.y + 'px');\r\n      if (this.descText) {\r\n        this.descriptionView.addDescription(this.descText, this.possitions, id);\r\n      }\r\n    }\r\n  }\r\n\r\n  connectDescription(id) {\r\n    if (this.descText) {\r\n      instance.connect({\r\n        source: \"sourceWindow\" + id,\r\n        target: \"description\" + id\r\n      });\r\n    }\r\n  }\r\n\r\n  makeInteractive(el) {\r\n    let flowView = this.flowView;\r\n    instance.makeTarget(el, {\r\n      dropOptions: {\r\n        hoverClass: \"hover\"\r\n      },\r\n      anchor: [\"Left\", \"Top\", \"Right\"],\r\n      endpoint: [\"Dot\", {\r\n        radius: 11,\r\n        cssClass: \"large-green\"\r\n      }]\r\n    });\r\n\r\n    if (this.isExit) {\r\n      $(el).addClass('exit');\r\n    } else {\r\n      instance.makeSource(el, {\r\n        filter: \".enableDisableSource\",\r\n        filterExclude: true,\r\n        maxConnections: -1,\r\n        endpoint: [\"Dot\", {\r\n          radius: 7,\r\n          cssClass: \"small-blue\"\r\n        }],\r\n        anchor: flowView.sourceAnchors,\r\n        connector: [flowView.connectorType, {\r\n          stub: [40, 60],\r\n          gap: 10,\r\n          cornerRadius: 5,\r\n          midpoint: 0.0001\r\n        }]\r\n      });\r\n    }\r\n  }\r\n\r\n  getTypeImage() {\r\n    return this.typeImageView.getTypeImage(this.pipeModel.type);\r\n  }\r\n}",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/flowView/pipe/PipeView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 465,
    "kind": "class",
    "name": "PipeView",
    "memberof": "app/View/flowView/pipe/PipeView.js",
    "static": true,
    "longname": "app/View/flowView/pipe/PipeView.js~PipeView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/flowView/pipe/PipeView.js",
    "importStyle": "PipeView",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 466,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/flowView/pipe/PipeView.js~PipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/pipe/PipeView.js~PipeView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 467,
    "kind": "member",
    "name": "flowView",
    "memberof": "app/View/flowView/pipe/PipeView.js~PipeView",
    "static": false,
    "longname": "app/View/flowView/pipe/PipeView.js~PipeView#flowView",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 468,
    "kind": "member",
    "name": "descriptionView",
    "memberof": "app/View/flowView/pipe/PipeView.js~PipeView",
    "static": false,
    "longname": "app/View/flowView/pipe/PipeView.js~PipeView#descriptionView",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 469,
    "kind": "member",
    "name": "typeImageView",
    "memberof": "app/View/flowView/pipe/PipeView.js~PipeView",
    "static": false,
    "longname": "app/View/flowView/pipe/PipeView.js~PipeView#typeImageView",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 470,
    "kind": "member",
    "name": "types",
    "memberof": "app/View/flowView/pipe/PipeView.js~PipeView",
    "static": false,
    "longname": "app/View/flowView/pipe/PipeView.js~PipeView#types",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 471,
    "kind": "member",
    "name": "pipeModel",
    "memberof": "app/View/flowView/pipe/PipeView.js~PipeView",
    "static": false,
    "longname": "app/View/flowView/pipe/PipeView.js~PipeView#pipeModel",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 472,
    "kind": "member",
    "name": "name",
    "memberof": "app/View/flowView/pipe/PipeView.js~PipeView",
    "static": false,
    "longname": "app/View/flowView/pipe/PipeView.js~PipeView#name",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 473,
    "kind": "member",
    "name": "possitions",
    "memberof": "app/View/flowView/pipe/PipeView.js~PipeView",
    "static": false,
    "longname": "app/View/flowView/pipe/PipeView.js~PipeView#possitions",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 474,
    "kind": "member",
    "name": "extra",
    "memberof": "app/View/flowView/pipe/PipeView.js~PipeView",
    "static": false,
    "longname": "app/View/flowView/pipe/PipeView.js~PipeView#extra",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 475,
    "kind": "member",
    "name": "isExit",
    "memberof": "app/View/flowView/pipe/PipeView.js~PipeView",
    "static": false,
    "longname": "app/View/flowView/pipe/PipeView.js~PipeView#isExit",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 476,
    "kind": "member",
    "name": "descText",
    "memberof": "app/View/flowView/pipe/PipeView.js~PipeView",
    "static": false,
    "longname": "app/View/flowView/pipe/PipeView.js~PipeView#descText",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 477,
    "kind": "member",
    "name": "element",
    "memberof": "app/View/flowView/pipe/PipeView.js~PipeView",
    "static": false,
    "longname": "app/View/flowView/pipe/PipeView.js~PipeView#element",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 478,
    "kind": "method",
    "name": "addPipe",
    "memberof": "app/View/flowView/pipe/PipeView.js~PipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/pipe/PipeView.js~PipeView#addPipe",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 479,
    "kind": "method",
    "name": "checkForExitOrReceiver",
    "memberof": "app/View/flowView/pipe/PipeView.js~PipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/pipe/PipeView.js~PipeView#checkForExitOrReceiver",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [
      {
        "name": "el",
        "types": [
          "*"
        ]
      },
      {
        "name": "bottomContainer",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 480,
    "kind": "method",
    "name": "addDescription",
    "memberof": "app/View/flowView/pipe/PipeView.js~PipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/pipe/PipeView.js~PipeView#addDescription",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "el",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 481,
    "kind": "method",
    "name": "connectDescription",
    "memberof": "app/View/flowView/pipe/PipeView.js~PipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/pipe/PipeView.js~PipeView#connectDescription",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 482,
    "kind": "method",
    "name": "makeInteractive",
    "memberof": "app/View/flowView/pipe/PipeView.js~PipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/pipe/PipeView.js~PipeView#makeInteractive",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "params": [
      {
        "name": "el",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 483,
    "kind": "method",
    "name": "getTypeImage",
    "memberof": "app/View/flowView/pipe/PipeView.js~PipeView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/pipe/PipeView.js~PipeView#getTypeImage",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 484,
    "kind": "file",
    "name": "app/View/flowView/TypeImageView.js",
    "content": "export default class TypeImageView {\r\n  constructor(flowView) {\r\n    this.flowView = flowView;\r\n  }\r\n\r\n  getTypeImage(type) {\r\n    let img,\r\n      testImage = new Image(),\r\n      url;\r\n\r\n    if (type == null) {\r\n      type = \"basicPipe\"\r\n    }\r\n    if (type != null && type.match('Sender') != null) {\r\n      type = 'SenderPipe';\r\n    }\r\n    url = 'media/images/' + type+ '.png';\r\n    if (url != null) {\r\n      img = $('<img></img>').attr({\r\n        src: url,\r\n        alt: type,\r\n        title: type\r\n      }).addClass(\"typeImg\");\r\n      testImage.src = url;\r\n      testImage.onerror = function () {\r\n        img.attr('src', 'media/images/basicPipe.png');\r\n      }\r\n      return img;\r\n    }\r\n  }\r\n\r\n  // getTibcoImage(name) {\r\n  //   let img,\r\n  //     testImage = new Image(),\r\n  //     url,\r\n  //     types;\r\n\r\n  //   if (types == null) {\r\n  //     types = this.flowView.getTypes();\r\n  //   }\r\n\r\n  //   url = 'media/tibcoMode/' + name + '.png';\r\n\r\n  //   if (url != null) {\r\n  //     img = $('<img></img>').attr({\r\n  //       src: url,\r\n  //       alt: name,\r\n  //       title: name\r\n  //     }).addClass(\"typeImg\");\r\n  //     testImage.src = url;\r\n  //     testImage.onerror = function () {\r\n  //       img.attr('src', 'media/images/basicPipe.png');\r\n  //     }\r\n  //     return img;\r\n  //   }\r\n  // }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/flowView/TypeImageView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 485,
    "kind": "class",
    "name": "TypeImageView",
    "memberof": "app/View/flowView/TypeImageView.js",
    "static": true,
    "longname": "app/View/flowView/TypeImageView.js~TypeImageView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/flowView/TypeImageView.js",
    "importStyle": "TypeImageView",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 486,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/flowView/TypeImageView.js~TypeImageView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/TypeImageView.js~TypeImageView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 487,
    "kind": "member",
    "name": "flowView",
    "memberof": "app/View/flowView/TypeImageView.js~TypeImageView",
    "static": false,
    "longname": "app/View/flowView/TypeImageView.js~TypeImageView#flowView",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 488,
    "kind": "method",
    "name": "getTypeImage",
    "memberof": "app/View/flowView/TypeImageView.js~TypeImageView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/flowView/TypeImageView.js~TypeImageView#getTypeImage",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "type",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 489,
    "kind": "file",
    "name": "app/View/paletteView/PaletteView.js",
    "content": "import SimpleBar from 'simplebar';\r\n\r\nexport default class PaletteView {\r\n  constructor(flowController) {\r\n    this.listeners = [];\r\n    this.pipes = null;\r\n    this.flowView = flowController.flowView;\r\n  }\r\n\r\n  addListener(listener) {\r\n    this.listeners.push(listener);\r\n  }\r\n\r\n  notifyListeners(data) {\r\n    this.listeners.forEach(l => l.notify(data));\r\n  }\r\n\r\n  generatePalettePipes(pipes) {\r\n    let cur = this,\r\n      palette = $('#palette');\r\n\r\n    let dragData = {\r\n      disabled: false,\r\n      drag: function(e) {\r\n\r\n      },\r\n      stop: function(e) {\r\n        let name = e.el.firstChild.innerHTML;\r\n        cur.flowView.modifyFlow(\"add\", {\r\n          name: \"new\" + name,\r\n          className: name,\r\n          xpos: 500,\r\n          ypos: 500\r\n        });\r\n      }\r\n    }\r\n\r\n    pipes.forEach(function(item, index) {\r\n      let toolBox = $('<div></div>').addClass('content');\r\n      let text = $('<p></p>').text(item.name);\r\n      toolBox.append(text);\r\n      palette.append(toolBox);\r\n      instance.draggable(toolBox, dragData);\r\n    });\r\n\r\n    new SimpleBar($('#palette')[0]);\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/paletteView/PaletteView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 490,
    "kind": "class",
    "name": "PaletteView",
    "memberof": "app/View/paletteView/PaletteView.js",
    "static": true,
    "longname": "app/View/paletteView/PaletteView.js~PaletteView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/paletteView/PaletteView.js",
    "importStyle": "PaletteView",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 491,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/paletteView/PaletteView.js~PaletteView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/paletteView/PaletteView.js~PaletteView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 492,
    "kind": "member",
    "name": "listeners",
    "memberof": "app/View/paletteView/PaletteView.js~PaletteView",
    "static": false,
    "longname": "app/View/paletteView/PaletteView.js~PaletteView#listeners",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 493,
    "kind": "member",
    "name": "pipes",
    "memberof": "app/View/paletteView/PaletteView.js~PaletteView",
    "static": false,
    "longname": "app/View/paletteView/PaletteView.js~PaletteView#pipes",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 494,
    "kind": "member",
    "name": "flowView",
    "memberof": "app/View/paletteView/PaletteView.js~PaletteView",
    "static": false,
    "longname": "app/View/paletteView/PaletteView.js~PaletteView#flowView",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 495,
    "kind": "method",
    "name": "addListener",
    "memberof": "app/View/paletteView/PaletteView.js~PaletteView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/paletteView/PaletteView.js~PaletteView#addListener",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "listener",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 496,
    "kind": "method",
    "name": "notifyListeners",
    "memberof": "app/View/paletteView/PaletteView.js~PaletteView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/paletteView/PaletteView.js~PaletteView#notifyListeners",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 497,
    "kind": "method",
    "name": "generatePalettePipes",
    "memberof": "app/View/paletteView/PaletteView.js~PaletteView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/paletteView/PaletteView.js~PaletteView#generatePalettePipes",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "pipes",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 498,
    "kind": "file",
    "name": "app/View/pipeInfoView/attributes/GenerateInfoAttributesView.js",
    "content": "export default class GenerateInfoAttributesView {\r\n    generatePipeAttributes(attributes) {\r\n        if (attributes.x && attributes.y) {\r\n          delete attributes.x;\r\n          delete attributes.y;\r\n        }\r\n\r\n        for (let key in attributes) {\r\n          if (key != \"name\") {\r\n            let attrWrapper = $('<div></div>').addClass('attributeWrapper'),\r\n              attrLabel = $('<label></label>').text(key + ': ').addClass('forwardInfo'),\r\n              deleteButton = $('<button></button>').text('Delete').attr({\r\n                id: 'attributeDelete',\r\n                name: key\r\n              })\r\n              .addClass('deleteButton'),\r\n              attrInput = $('<input></input>').attr({\r\n                type: 'input',\r\n                name: key,\r\n                id: 'attributeVal'\r\n              }).val(attributes[key]);\r\n    \r\n            attrWrapper.append(attrLabel, attrInput, deleteButton);\r\n            $('#attributesInfo').append(attrWrapper);\r\n          }\r\n        }\r\n      }\r\n}",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/pipeInfoView/attributes/GenerateInfoAttributesView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 499,
    "kind": "class",
    "name": "GenerateInfoAttributesView",
    "memberof": "app/View/pipeInfoView/attributes/GenerateInfoAttributesView.js",
    "static": true,
    "longname": "app/View/pipeInfoView/attributes/GenerateInfoAttributesView.js~GenerateInfoAttributesView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/pipeInfoView/attributes/GenerateInfoAttributesView.js",
    "importStyle": "GenerateInfoAttributesView",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 500,
    "kind": "method",
    "name": "generatePipeAttributes",
    "memberof": "app/View/pipeInfoView/attributes/GenerateInfoAttributesView.js~GenerateInfoAttributesView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/pipeInfoView/attributes/GenerateInfoAttributesView.js~GenerateInfoAttributesView#generatePipeAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "attributes",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 501,
    "kind": "file",
    "name": "app/View/pipeInfoView/parameters/GenerateInfoParametersView.js",
    "content": "export default class GenerateInfoParametersView {\r\n    constructor() {\r\n      this.bar = false;\r\n    }\r\n\r\n    generatePipeParameters(parameters) {\r\n\r\n        if (parameters.length !== 0) {\r\n          parameters.forEach((param, i) => {\r\n            let parameterBox = $('<div></div>').addClass('parameterContent'),\r\n              parameterToolbox = $('<div></div>').addClass('parameterToolbox'),\r\n              text = $('<p></p>').text(\"name\" + ': ' + param[\"name\"]);\r\n            parameterBox.append(text);\r\n    \r\n            let buttons = this.generatePipeParameterButtons(param);\r\n            this.generatePipeParameterAttributes(param, parameterToolbox);\r\n    \r\n            parameterToolbox.append(buttons.addButton);\r\n            parameterBox.append(buttons.deleteButton);\r\n            $('#parametersInfo').append(parameterBox, parameterToolbox);\r\n          });\r\n        }\r\n      }\r\n    \r\n      generatePipeParameterAttributes(param, parameterToolbox) {\r\n        for (let attribute in param) {\r\n          if (param[\"name\"]) {  \r\n    \r\n            let attrLabel = $('<label></label>').text(attribute + ': ').addClass('forwardInfo'),\r\n              attrInput = $('<input></input>').attr({type: 'input', id: attribute}).val(param[attribute]),\r\n              attrWrapper = $('<div></div>').addClass('paramAttributeWrapper').attr('name', param[\"name\"]);\r\n    \r\n            attrWrapper.append(attrLabel, attrInput);\r\n            parameterToolbox.append(attrWrapper);\r\n          }\r\n        }\r\n      }\r\n    \r\n      generatePipeParameterButtons(param) {\r\n        let deleteButton = $('<i></i>'),\r\n        addButton = $('<i></i>');\r\n    \r\n      deleteButton.attr({\r\n        id: 'parameterDelete',\r\n        name: param[\"name\"]\r\n      })\r\n      .addClass('fa fa-trash')\r\n    \r\n      addButton.addClass(\"fas fa-plus-circle\").attr({\r\n        id: 'parameterAttributeAdd',\r\n        name: param[\"name\"]\r\n      });\r\n    \r\n      return {deleteButton: deleteButton, addButton: addButton}\r\n      }\r\n}",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/pipeInfoView/parameters/GenerateInfoParametersView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 502,
    "kind": "class",
    "name": "GenerateInfoParametersView",
    "memberof": "app/View/pipeInfoView/parameters/GenerateInfoParametersView.js",
    "static": true,
    "longname": "app/View/pipeInfoView/parameters/GenerateInfoParametersView.js~GenerateInfoParametersView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/pipeInfoView/parameters/GenerateInfoParametersView.js",
    "importStyle": "GenerateInfoParametersView",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 503,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/pipeInfoView/parameters/GenerateInfoParametersView.js~GenerateInfoParametersView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/pipeInfoView/parameters/GenerateInfoParametersView.js~GenerateInfoParametersView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 504,
    "kind": "member",
    "name": "bar",
    "memberof": "app/View/pipeInfoView/parameters/GenerateInfoParametersView.js~GenerateInfoParametersView",
    "static": false,
    "longname": "app/View/pipeInfoView/parameters/GenerateInfoParametersView.js~GenerateInfoParametersView#bar",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 505,
    "kind": "method",
    "name": "generatePipeParameters",
    "memberof": "app/View/pipeInfoView/parameters/GenerateInfoParametersView.js~GenerateInfoParametersView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/pipeInfoView/parameters/GenerateInfoParametersView.js~GenerateInfoParametersView#generatePipeParameters",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "parameters",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 506,
    "kind": "method",
    "name": "generatePipeParameterAttributes",
    "memberof": "app/View/pipeInfoView/parameters/GenerateInfoParametersView.js~GenerateInfoParametersView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/pipeInfoView/parameters/GenerateInfoParametersView.js~GenerateInfoParametersView#generatePipeParameterAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "param",
        "types": [
          "*"
        ]
      },
      {
        "name": "parameterToolbox",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 507,
    "kind": "method",
    "name": "generatePipeParameterButtons",
    "memberof": "app/View/pipeInfoView/parameters/GenerateInfoParametersView.js~GenerateInfoParametersView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/pipeInfoView/parameters/GenerateInfoParametersView.js~GenerateInfoParametersView#generatePipeParameterButtons",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [
      {
        "name": "param",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"deleteButton\": *, \"addButton\": *}"
      ]
    }
  },
  {
    "__docId__": 508,
    "kind": "file",
    "name": "app/View/pipeInfoView/PipeInfoView.js",
    "content": "import GenerateInfoParametersView from './parameters/GenerateInfoParametersView';\r\nimport GenerateInfoAttributesView from './attributes/GenerateInfoAttributesView';\r\n\r\nexport default class PipeInfoView {\r\n\r\n  constructor(flowModel) {\r\n    this.flowModel = flowModel;\r\n    this.pipeName = \"FixedResult\";\r\n    this.pipeType = \"CheckEmptyMessage\";\r\n    this.setPipeName(this.pipeName);\r\n    this.generatePipeForwards();\r\n    $('.pipeInfo').tabs();\r\n  }\r\n\r\n  setPipeName(name) {\r\n    this.pipeName = name;\r\n    $('#pipeInfoName').val(name);\r\n    this.refreshInfo();\r\n  }\r\n\r\n  setPipeType(type) {\r\n    this.pipeType = type;\r\n    $('#typeSelect').val(type);\r\n    this.refreshInfo();\r\n  }\r\n\r\n  refreshInfo() {\r\n    $('#pipeInfoTitleName').text(this.pipeName);\r\n    $('#pipeInfoTitleType').text(this.pipeType);\r\n    $('.forwardInfo').remove();\r\n    $('.attributeWrapper').remove();\r\n    $('.parameterContent').remove();\r\n    $('.parameterToolbox').remove();\r\n    this.generatePipeForwards();\r\n  }\r\n\r\n  generatePipeForwards() {\r\n    let cur = this;\r\n    this.flowModel.getForwards().forEach(function(item, index) {\r\n\r\n      if (item.sourcePipe == cur.pipeName) {\r\n        $('#forwardsInfo').append($('<p></p>').text(item.targetPipe + ' - ' + item.name).addClass('forwardInfo'));\r\n      }\r\n    })\r\n  }\r\n\r\n  generatePipeAttributes(parameters) {\r\n    let attributeGenerator = new GenerateInfoAttributesView();\r\n    attributeGenerator.generatePipeAttributes(parameters);\r\n  }\r\n\r\n  generatePipeParameters(parameters) {\r\n    let paramGenerator = new GenerateInfoParametersView();\r\n    paramGenerator.generatePipeParameters(parameters);\r\n  }\r\n\r\n  generateTypes(data) {\r\n    let option;\r\n    console.log(data)\r\n    data[2].classes.forEach(function(item, index) {\r\n      option = $('<option></option>').attr('value', item.name).text(item.name);\r\n      $('#typeSelect').append(option);\r\n    })\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/pipeInfoView/PipeInfoView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 509,
    "kind": "class",
    "name": "PipeInfoView",
    "memberof": "app/View/pipeInfoView/PipeInfoView.js",
    "static": true,
    "longname": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/pipeInfoView/PipeInfoView.js",
    "importStyle": "PipeInfoView",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 510,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 511,
    "kind": "member",
    "name": "flowModel",
    "memberof": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView",
    "static": false,
    "longname": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView#flowModel",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 512,
    "kind": "member",
    "name": "pipeName",
    "memberof": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView",
    "static": false,
    "longname": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView#pipeName",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 513,
    "kind": "member",
    "name": "pipeType",
    "memberof": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView",
    "static": false,
    "longname": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView#pipeType",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 514,
    "kind": "method",
    "name": "setPipeName",
    "memberof": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView#setPipeName",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 516,
    "kind": "method",
    "name": "setPipeType",
    "memberof": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView#setPipeType",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "type",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 518,
    "kind": "method",
    "name": "refreshInfo",
    "memberof": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView#refreshInfo",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 519,
    "kind": "method",
    "name": "generatePipeForwards",
    "memberof": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView#generatePipeForwards",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 520,
    "kind": "method",
    "name": "generatePipeAttributes",
    "memberof": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView#generatePipeAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "parameters",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 521,
    "kind": "method",
    "name": "generatePipeParameters",
    "memberof": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView#generatePipeParameters",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "params": [
      {
        "name": "parameters",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 522,
    "kind": "method",
    "name": "generateTypes",
    "memberof": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/pipeInfoView/PipeInfoView.js~PipeInfoView#generateTypes",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 523,
    "kind": "file",
    "name": "app/View/pipeInfoView/SpecialPipes/XsltInfoView.js",
    "content": "export default class XsltInfoView {\r\n    constructor() {\r\n        let saveButton = $('<button></button>');\r\n        let xsltPipeView = $('.xsltPipeView').append(saveButton)\r\n    }\r\n\r\n}",
    "static": true,
    "longname": "C:/Users/eigenaar/Documents/GitHub/frank-flow/src/frontend/app/View/pipeInfoView/SpecialPipes/XsltInfoView.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 524,
    "kind": "class",
    "name": "XsltInfoView",
    "memberof": "app/View/pipeInfoView/SpecialPipes/XsltInfoView.js",
    "static": true,
    "longname": "app/View/pipeInfoView/SpecialPipes/XsltInfoView.js~XsltInfoView",
    "access": "public",
    "export": true,
    "importPath": "Frank!Flow/app/View/pipeInfoView/SpecialPipes/XsltInfoView.js",
    "importStyle": "XsltInfoView",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 525,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "app/View/pipeInfoView/SpecialPipes/XsltInfoView.js~XsltInfoView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "app/View/pipeInfoView/SpecialPipes/XsltInfoView.js~XsltInfoView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "kind": "index",
    "content": "",
    "longname": "C:\\Users\\eigenaar\\Documents\\GitHub\\frank-flow\\src\\frontend\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n  \"name\": \"Frank!Flow\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"dev tool to work with the Frank framework\",\r\n  \"main\": \"Controller/MainController.js\",\r\n  \"scripts\": {\r\n    \"unit\": \"karma start karma.conf.js \",\r\n    \"test\": \"npm run unit\",\r\n    \"test-cover\": \"istanbul cover --include-all-sources test/pipeInfoTest.spec.js && istanbul check-coverage\",\r\n    \"build\": \"webpack\",\r\n    \"build-dev\": \"webpack --config ./webpackDev.config.js\",\r\n    \"watch\": \"webpack --config ./webpackDev.config.js --watch\",\r\n    \"start\": \"webpack-dev-server --mode development\",\r\n    \"bundle-report\": \"webpack-bundle-analyzer --port 4200 ../main/resources/frontend/stats.json\"\r\n  },\r\n  \"proxy\": \"http://localhost:8000\",\r\n  \"author\": \"ruben\",\r\n  \"license\": \"Apache 2.0\",\r\n  \"dependencies\": {\r\n    \"esdoc\": \"^1.1.0\",\r\n    \"esdoc-standard-plugin\": \"^1.0.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@metahub/karma-jasmine-jquery\": \"^4.0.1\",\r\n    \"istanbul\": \"^0.4.5\",\r\n    \"karma\": \"^5.1.0\",\r\n    \"karma-chrome-launcher\": \"^3.1.0\",\r\n    \"karma-coverage\": \"^2.0.2\",\r\n    \"karma-webpack\": \"^4.0.2\",\r\n    \"karma-html2js-preprocessor\": \"^1.1.0\",\r\n    \"karma-jasmine\": \"^3.3.1\",\r\n    \"jasmine-core\": \"^3.5.0\",\r\n    \"jasmine-jquery\": \"^2.1.1\",\r\n    \"jquery\": \"^3.5.1\",\r\n    \"jquery-contextmenu\": \"^2.9.1\",\r\n    \"jquery-ui-dist\": \"^1.12.1\",\r\n    \"jquery.mousewheel\": \"^3.1.9\",\r\n    \"jquery.panzoom\": \"^3.2.3\",\r\n    \"jsplumb\": \"^2.11.2\",\r\n    \"jszip\": \"^3.2.2\",\r\n    \"monaco-editor\": \"^0.20.0\",\r\n    \"monaco-editor-webpack-plugin\": \"^1.9.0\",\r\n    \"monaco-xsd-code-completion\": \"^0.6.1\",\r\n    \"dom-to-image\": \"^2.6.0\",\r\n    \"html-to-image\": \"^0.1.1\",\r\n    \"download.js\": \"^1.0.0\",\r\n    \"file-saver\": \"^2.0.2\",\r\n    \"simplebar\": \"^5.2.1\",\r\n    \"vkbeautify\": \"^0.99.3\",\r\n    \"xmllint\": \"^0.1.1\",\r\n    \"image-webpack-loader\": \"^4.0.0\",\r\n    \"css-loader\": \"^4.3.0\",\r\n    \"file-loader\": \"^6.1.0\",\r\n    \"expose-loader\": \"^1.0.0\",\r\n    \"style-loader\": \"^1.2.1\",\r\n    \"mini-css-extract-plugin\": \"^0.11.1\",\r\n    \"clean-webpack-plugin\": \"^3.0.0\",\r\n    \"copy-webpack-plugin\": \"^6.1.1\",\r\n    \"webpack\": \"^4.41.2\",\r\n    \"webpack-bundle-analyzer\": \"^3.9.0\",\r\n    \"webpack-cli\": \"^3.3.10\",\r\n    \"@babel/core\": \"^7.11.6\",\r\n    \"@babel/plugin-proposal-class-properties\": \"^7.10.4\",\r\n    \"@babel/preset-env\": \"^7.11.5\",\r\n    \"babel-loader\": \"^8.1.0\"\r\n  }\r\n}\r\n",
    "longname": "C:\\Users\\eigenaar\\Documents\\GitHub\\frank-flow\\src\\frontend\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]